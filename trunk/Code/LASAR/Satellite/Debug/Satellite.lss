
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000014f8  0000158c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080010c  0080010c  00001598  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00001598  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00001ce9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000292  00000000  00000000  00001e89  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002451  00000000  00000000  0000211b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000117f  00000000  00000000  0000456c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000018bf  00000000  00000000  000056eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000250  00000000  00000000  00006fac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000487  00000000  00000000  000071fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  00007683  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000062c  00000000  00000000  000082a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  000088d4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 ce 03 	jmp	0x79c	; 0x79c <__vector_1>
       8:	0c 94 e3 03 	jmp	0x7c6	; 0x7c6 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 94 02 	jmp	0x528	; 0x528 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 ef       	ldi	r30, 0xF8	; 248
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a0 31       	cpi	r26, 0x10	; 16
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile uint8_t rxflag = 0;
volatile uint8_t slpflg = 0;
volatile uint8_t zerocross = 1;

int main(void)
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	a0 97       	sbiw	r28, 0x20	; 32
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	DDRB = (1<<PORTB0);
      be:	84 e2       	ldi	r24, 0x24	; 36
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
	DDRC = 0xFF;
      c8:	87 e2       	ldi	r24, 0x27	; 39
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	2f ef       	ldi	r18, 0xFF	; 255
      ce:	fc 01       	movw	r30, r24
      d0:	20 83       	st	Z, r18
	//DDRB = (1 << PORTD6);
	//DDRD = (1 << PORTD3);
	DDRD &= ~(1 << PORTD2);
      d2:	8a e2       	ldi	r24, 0x2A	; 42
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	2a e2       	ldi	r18, 0x2A	; 42
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	f9 01       	movw	r30, r18
      dc:	20 81       	ld	r18, Z
      de:	2b 7f       	andi	r18, 0xFB	; 251
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
	DDRD &= ~(1 << PORTD3);
      e4:	8a e2       	ldi	r24, 0x2A	; 42
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	2a e2       	ldi	r18, 0x2A	; 42
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	27 7f       	andi	r18, 0xF7	; 247
      f2:	fc 01       	movw	r30, r24
      f4:	20 83       	st	Z, r18
	PORTB &= ~(1 << PORTB0);
      f6:	85 e2       	ldi	r24, 0x25	; 37
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	25 e2       	ldi	r18, 0x25	; 37
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	f9 01       	movw	r30, r18
     100:	20 81       	ld	r18, Z
     102:	2e 7f       	andi	r18, 0xFE	; 254
     104:	fc 01       	movw	r30, r24
     106:	20 83       	st	Z, r18
	//PORTD &= (1 << PORTD6);
	
	initTimer(65);
     108:	81 e4       	ldi	r24, 0x41	; 65
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <initTimer>
	initInterrupt0();
     110:	0e 94 39 02 	call	0x472	; 0x472 <initInterrupt0>
	dim = 10;
     114:	8a e0       	ldi	r24, 0x0A	; 10
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	90 93 01 01 	sts	0x0101, r25
     11c:	80 93 00 01 	sts	0x0100, r24
	
	// turn on interrupts
	sei();
     120:	78 94       	sei
	
	while(1)
	{
		for( int j = 10; j < 90; ++j )
     122:	8a e0       	ldi	r24, 0x0A	; 10
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	9a 83       	std	Y+2, r25	; 0x02
     128:	89 83       	std	Y+1, r24	; 0x01
     12a:	90 c0       	rjmp	.+288    	; 0x24c <main+0x1a6>
		{
			//PORTD |= (1 << PORTD3);
			dim = j;
     12c:	89 81       	ldd	r24, Y+1	; 0x01
     12e:	9a 81       	ldd	r25, Y+2	; 0x02
     130:	90 93 01 01 	sts	0x0101, r25
     134:	80 93 00 01 	sts	0x0100, r24
			PORTC = j;
     138:	88 e2       	ldi	r24, 0x28	; 40
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	29 81       	ldd	r18, Y+1	; 0x01
     13e:	fc 01       	movw	r30, r24
     140:	20 83       	st	Z, r18
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	a8 ec       	ldi	r26, 0xC8	; 200
     148:	b2 e4       	ldi	r27, 0x42	; 66
     14a:	8d 83       	std	Y+5, r24	; 0x05
     14c:	9e 83       	std	Y+6, r25	; 0x06
     14e:	af 83       	std	Y+7, r26	; 0x07
     150:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     152:	6d 81       	ldd	r22, Y+5	; 0x05
     154:	7e 81       	ldd	r23, Y+6	; 0x06
     156:	8f 81       	ldd	r24, Y+7	; 0x07
     158:	98 85       	ldd	r25, Y+8	; 0x08
     15a:	20 e0       	ldi	r18, 0x00	; 0
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	4a e7       	ldi	r20, 0x7A	; 122
     160:	55 e4       	ldi	r21, 0x45	; 69
     162:	0e 94 29 06 	call	0xc52	; 0xc52 <__mulsf3>
     166:	dc 01       	movw	r26, r24
     168:	cb 01       	movw	r24, r22
     16a:	89 87       	std	Y+9, r24	; 0x09
     16c:	9a 87       	std	Y+10, r25	; 0x0a
     16e:	ab 87       	std	Y+11, r26	; 0x0b
     170:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     172:	11 e0       	ldi	r17, 0x01	; 1
     174:	69 85       	ldd	r22, Y+9	; 0x09
     176:	7a 85       	ldd	r23, Y+10	; 0x0a
     178:	8b 85       	ldd	r24, Y+11	; 0x0b
     17a:	9c 85       	ldd	r25, Y+12	; 0x0c
     17c:	20 e0       	ldi	r18, 0x00	; 0
     17e:	30 e0       	ldi	r19, 0x00	; 0
     180:	40 e8       	ldi	r20, 0x80	; 128
     182:	5f e3       	ldi	r21, 0x3F	; 63
     184:	0e 94 31 08 	call	0x1062	; 0x1062 <__ltsf2>
     188:	88 23       	and	r24, r24
     18a:	0c f0       	brlt	.+2      	; 0x18e <main+0xe8>
     18c:	10 e0       	ldi	r17, 0x00	; 0
     18e:	11 23       	and	r17, r17
     190:	29 f0       	breq	.+10     	; 0x19c <main+0xf6>
		__ticks = 1;
     192:	81 e0       	ldi	r24, 0x01	; 1
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	9e 87       	std	Y+14, r25	; 0x0e
     198:	8d 87       	std	Y+13, r24	; 0x0d
     19a:	46 c0       	rjmp	.+140    	; 0x228 <main+0x182>
	else if (__tmp > 65535)
     19c:	11 e0       	ldi	r17, 0x01	; 1
     19e:	69 85       	ldd	r22, Y+9	; 0x09
     1a0:	7a 85       	ldd	r23, Y+10	; 0x0a
     1a2:	8b 85       	ldd	r24, Y+11	; 0x0b
     1a4:	9c 85       	ldd	r25, Y+12	; 0x0c
     1a6:	20 e0       	ldi	r18, 0x00	; 0
     1a8:	3f ef       	ldi	r19, 0xFF	; 255
     1aa:	4f e7       	ldi	r20, 0x7F	; 127
     1ac:	57 e4       	ldi	r21, 0x47	; 71
     1ae:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__gtsf2>
     1b2:	18 16       	cp	r1, r24
     1b4:	0c f0       	brlt	.+2      	; 0x1b8 <main+0x112>
     1b6:	10 e0       	ldi	r17, 0x00	; 0
     1b8:	11 23       	and	r17, r17
     1ba:	61 f1       	breq	.+88     	; 0x214 <main+0x16e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1bc:	6d 81       	ldd	r22, Y+5	; 0x05
     1be:	7e 81       	ldd	r23, Y+6	; 0x06
     1c0:	8f 81       	ldd	r24, Y+7	; 0x07
     1c2:	98 85       	ldd	r25, Y+8	; 0x08
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	40 e2       	ldi	r20, 0x20	; 32
     1ca:	51 e4       	ldi	r21, 0x41	; 65
     1cc:	0e 94 29 06 	call	0xc52	; 0xc52 <__mulsf3>
     1d0:	dc 01       	movw	r26, r24
     1d2:	cb 01       	movw	r24, r22
     1d4:	bc 01       	movw	r22, r24
     1d6:	cd 01       	movw	r24, r26
     1d8:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixunssfsi>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	9e 87       	std	Y+14, r25	; 0x0e
     1e2:	8d 87       	std	Y+13, r24	; 0x0d
     1e4:	12 c0       	rjmp	.+36     	; 0x20a <main+0x164>
     1e6:	80 e9       	ldi	r24, 0x90	; 144
     1e8:	91 e0       	ldi	r25, 0x01	; 1
     1ea:	98 8b       	std	Y+16, r25	; 0x10
     1ec:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1ee:	8f 85       	ldd	r24, Y+15	; 0x0f
     1f0:	98 89       	ldd	r25, Y+16	; 0x10
     1f2:	8c 01       	movw	r16, r24
     1f4:	c8 01       	movw	r24, r16
     1f6:	01 97       	sbiw	r24, 0x01	; 1
     1f8:	f1 f7       	brne	.-4      	; 0x1f6 <main+0x150>
     1fa:	8c 01       	movw	r16, r24
     1fc:	18 8b       	std	Y+16, r17	; 0x10
     1fe:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     200:	8d 85       	ldd	r24, Y+13	; 0x0d
     202:	9e 85       	ldd	r25, Y+14	; 0x0e
     204:	01 97       	sbiw	r24, 0x01	; 1
     206:	9e 87       	std	Y+14, r25	; 0x0e
     208:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     20a:	8d 85       	ldd	r24, Y+13	; 0x0d
     20c:	9e 85       	ldd	r25, Y+14	; 0x0e
     20e:	00 97       	sbiw	r24, 0x00	; 0
     210:	51 f7       	brne	.-44     	; 0x1e6 <main+0x140>
     212:	17 c0       	rjmp	.+46     	; 0x242 <main+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     214:	69 85       	ldd	r22, Y+9	; 0x09
     216:	7a 85       	ldd	r23, Y+10	; 0x0a
     218:	8b 85       	ldd	r24, Y+11	; 0x0b
     21a:	9c 85       	ldd	r25, Y+12	; 0x0c
     21c:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixunssfsi>
     220:	dc 01       	movw	r26, r24
     222:	cb 01       	movw	r24, r22
     224:	9e 87       	std	Y+14, r25	; 0x0e
     226:	8d 87       	std	Y+13, r24	; 0x0d
     228:	8d 85       	ldd	r24, Y+13	; 0x0d
     22a:	9e 85       	ldd	r25, Y+14	; 0x0e
     22c:	9a 8b       	std	Y+18, r25	; 0x12
     22e:	89 8b       	std	Y+17, r24	; 0x11
     230:	89 89       	ldd	r24, Y+17	; 0x11
     232:	9a 89       	ldd	r25, Y+18	; 0x12
     234:	8c 01       	movw	r16, r24
     236:	f8 01       	movw	r30, r16
     238:	31 97       	sbiw	r30, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x192>
     23c:	8f 01       	movw	r16, r30
     23e:	1a 8b       	std	Y+18, r17	; 0x12
     240:	09 8b       	std	Y+17, r16	; 0x11
	// turn on interrupts
	sei();
	
	while(1)
	{
		for( int j = 10; j < 90; ++j )
     242:	89 81       	ldd	r24, Y+1	; 0x01
     244:	9a 81       	ldd	r25, Y+2	; 0x02
     246:	01 96       	adiw	r24, 0x01	; 1
     248:	9a 83       	std	Y+2, r25	; 0x02
     24a:	89 83       	std	Y+1, r24	; 0x01
     24c:	89 81       	ldd	r24, Y+1	; 0x01
     24e:	9a 81       	ldd	r25, Y+2	; 0x02
     250:	8a 35       	cpi	r24, 0x5A	; 90
     252:	91 05       	cpc	r25, r1
     254:	0c f4       	brge	.+2      	; 0x258 <main+0x1b2>
     256:	6a cf       	rjmp	.-300    	; 0x12c <main+0x86>
			dim = j;
			PORTC = j;
			
			_delay_ms(100);
		}
		for( int j = 90; j > 10; --j)
     258:	8a e5       	ldi	r24, 0x5A	; 90
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	9c 83       	std	Y+4, r25	; 0x04
     25e:	8b 83       	std	Y+3, r24	; 0x03
     260:	90 c0       	rjmp	.+288    	; 0x382 <main+0x2dc>
		{
			//PORTD &= ~(1 << PORTD3);
			dim = j;
     262:	8b 81       	ldd	r24, Y+3	; 0x03
     264:	9c 81       	ldd	r25, Y+4	; 0x04
     266:	90 93 01 01 	sts	0x0101, r25
     26a:	80 93 00 01 	sts	0x0100, r24
			PORTC = j;
     26e:	88 e2       	ldi	r24, 0x28	; 40
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	2b 81       	ldd	r18, Y+3	; 0x03
     274:	fc 01       	movw	r30, r24
     276:	20 83       	st	Z, r18
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	a8 ec       	ldi	r26, 0xC8	; 200
     27e:	b2 e4       	ldi	r27, 0x42	; 66
     280:	8b 8b       	std	Y+19, r24	; 0x13
     282:	9c 8b       	std	Y+20, r25	; 0x14
     284:	ad 8b       	std	Y+21, r26	; 0x15
     286:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     288:	6b 89       	ldd	r22, Y+19	; 0x13
     28a:	7c 89       	ldd	r23, Y+20	; 0x14
     28c:	8d 89       	ldd	r24, Y+21	; 0x15
     28e:	9e 89       	ldd	r25, Y+22	; 0x16
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	4a e7       	ldi	r20, 0x7A	; 122
     296:	55 e4       	ldi	r21, 0x45	; 69
     298:	0e 94 29 06 	call	0xc52	; 0xc52 <__mulsf3>
     29c:	dc 01       	movw	r26, r24
     29e:	cb 01       	movw	r24, r22
     2a0:	8f 8b       	std	Y+23, r24	; 0x17
     2a2:	98 8f       	std	Y+24, r25	; 0x18
     2a4:	a9 8f       	std	Y+25, r26	; 0x19
     2a6:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     2a8:	11 e0       	ldi	r17, 0x01	; 1
     2aa:	6f 89       	ldd	r22, Y+23	; 0x17
     2ac:	78 8d       	ldd	r23, Y+24	; 0x18
     2ae:	89 8d       	ldd	r24, Y+25	; 0x19
     2b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2b2:	20 e0       	ldi	r18, 0x00	; 0
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	40 e8       	ldi	r20, 0x80	; 128
     2b8:	5f e3       	ldi	r21, 0x3F	; 63
     2ba:	0e 94 31 08 	call	0x1062	; 0x1062 <__ltsf2>
     2be:	88 23       	and	r24, r24
     2c0:	0c f0       	brlt	.+2      	; 0x2c4 <main+0x21e>
     2c2:	10 e0       	ldi	r17, 0x00	; 0
     2c4:	11 23       	and	r17, r17
     2c6:	29 f0       	breq	.+10     	; 0x2d2 <main+0x22c>
		__ticks = 1;
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	9c 8f       	std	Y+28, r25	; 0x1c
     2ce:	8b 8f       	std	Y+27, r24	; 0x1b
     2d0:	46 c0       	rjmp	.+140    	; 0x35e <main+0x2b8>
	else if (__tmp > 65535)
     2d2:	11 e0       	ldi	r17, 0x01	; 1
     2d4:	6f 89       	ldd	r22, Y+23	; 0x17
     2d6:	78 8d       	ldd	r23, Y+24	; 0x18
     2d8:	89 8d       	ldd	r24, Y+25	; 0x19
     2da:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2dc:	20 e0       	ldi	r18, 0x00	; 0
     2de:	3f ef       	ldi	r19, 0xFF	; 255
     2e0:	4f e7       	ldi	r20, 0x7F	; 127
     2e2:	57 e4       	ldi	r21, 0x47	; 71
     2e4:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__gtsf2>
     2e8:	18 16       	cp	r1, r24
     2ea:	0c f0       	brlt	.+2      	; 0x2ee <main+0x248>
     2ec:	10 e0       	ldi	r17, 0x00	; 0
     2ee:	11 23       	and	r17, r17
     2f0:	61 f1       	breq	.+88     	; 0x34a <main+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2f2:	6b 89       	ldd	r22, Y+19	; 0x13
     2f4:	7c 89       	ldd	r23, Y+20	; 0x14
     2f6:	8d 89       	ldd	r24, Y+21	; 0x15
     2f8:	9e 89       	ldd	r25, Y+22	; 0x16
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	40 e2       	ldi	r20, 0x20	; 32
     300:	51 e4       	ldi	r21, 0x41	; 65
     302:	0e 94 29 06 	call	0xc52	; 0xc52 <__mulsf3>
     306:	dc 01       	movw	r26, r24
     308:	cb 01       	movw	r24, r22
     30a:	bc 01       	movw	r22, r24
     30c:	cd 01       	movw	r24, r26
     30e:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixunssfsi>
     312:	dc 01       	movw	r26, r24
     314:	cb 01       	movw	r24, r22
     316:	9c 8f       	std	Y+28, r25	; 0x1c
     318:	8b 8f       	std	Y+27, r24	; 0x1b
     31a:	12 c0       	rjmp	.+36     	; 0x340 <main+0x29a>
     31c:	80 e9       	ldi	r24, 0x90	; 144
     31e:	91 e0       	ldi	r25, 0x01	; 1
     320:	9e 8f       	std	Y+30, r25	; 0x1e
     322:	8d 8f       	std	Y+29, r24	; 0x1d
     324:	8d 8d       	ldd	r24, Y+29	; 0x1d
     326:	9e 8d       	ldd	r25, Y+30	; 0x1e
     328:	8c 01       	movw	r16, r24
     32a:	c8 01       	movw	r24, r16
     32c:	01 97       	sbiw	r24, 0x01	; 1
     32e:	f1 f7       	brne	.-4      	; 0x32c <main+0x286>
     330:	8c 01       	movw	r16, r24
     332:	1e 8f       	std	Y+30, r17	; 0x1e
     334:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     336:	8b 8d       	ldd	r24, Y+27	; 0x1b
     338:	9c 8d       	ldd	r25, Y+28	; 0x1c
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	9c 8f       	std	Y+28, r25	; 0x1c
     33e:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     340:	8b 8d       	ldd	r24, Y+27	; 0x1b
     342:	9c 8d       	ldd	r25, Y+28	; 0x1c
     344:	00 97       	sbiw	r24, 0x00	; 0
     346:	51 f7       	brne	.-44     	; 0x31c <main+0x276>
     348:	17 c0       	rjmp	.+46     	; 0x378 <main+0x2d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     34a:	6f 89       	ldd	r22, Y+23	; 0x17
     34c:	78 8d       	ldd	r23, Y+24	; 0x18
     34e:	89 8d       	ldd	r24, Y+25	; 0x19
     350:	9a 8d       	ldd	r25, Y+26	; 0x1a
     352:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixunssfsi>
     356:	dc 01       	movw	r26, r24
     358:	cb 01       	movw	r24, r22
     35a:	9c 8f       	std	Y+28, r25	; 0x1c
     35c:	8b 8f       	std	Y+27, r24	; 0x1b
     35e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     360:	9c 8d       	ldd	r25, Y+28	; 0x1c
     362:	98 a3       	std	Y+32, r25	; 0x20
     364:	8f 8f       	std	Y+31, r24	; 0x1f
     366:	8f 8d       	ldd	r24, Y+31	; 0x1f
     368:	98 a1       	ldd	r25, Y+32	; 0x20
     36a:	8c 01       	movw	r16, r24
     36c:	f8 01       	movw	r30, r16
     36e:	31 97       	sbiw	r30, 0x01	; 1
     370:	f1 f7       	brne	.-4      	; 0x36e <main+0x2c8>
     372:	8f 01       	movw	r16, r30
     374:	18 a3       	std	Y+32, r17	; 0x20
     376:	0f 8f       	std	Y+31, r16	; 0x1f
			dim = j;
			PORTC = j;
			
			_delay_ms(100);
		}
		for( int j = 90; j > 10; --j)
     378:	8b 81       	ldd	r24, Y+3	; 0x03
     37a:	9c 81       	ldd	r25, Y+4	; 0x04
     37c:	01 97       	sbiw	r24, 0x01	; 1
     37e:	9c 83       	std	Y+4, r25	; 0x04
     380:	8b 83       	std	Y+3, r24	; 0x03
     382:	8b 81       	ldd	r24, Y+3	; 0x03
     384:	9c 81       	ldd	r25, Y+4	; 0x04
     386:	8b 30       	cpi	r24, 0x0B	; 11
     388:	91 05       	cpc	r25, r1
     38a:	0c f0       	brlt	.+2      	; 0x38e <main+0x2e8>
     38c:	6a cf       	rjmp	.-300    	; 0x262 <main+0x1bc>
			//PORTD &= ~(1 << PORTD3);
			dim = j;
			PORTC = j;
			_delay_ms(100);
		}
		set_sleep_mode( SLEEP_MODE_PWR_SAVE );
     38e:	83 e5       	ldi	r24, 0x53	; 83
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	23 e5       	ldi	r18, 0x53	; 83
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	f9 01       	movw	r30, r18
     398:	20 81       	ld	r18, Z
     39a:	21 7f       	andi	r18, 0xF1	; 241
     39c:	26 60       	ori	r18, 0x06	; 6
     39e:	fc 01       	movw	r30, r24
     3a0:	20 83       	st	Z, r18
		PORTB &= ~(1 << PORTB0);
     3a2:	85 e2       	ldi	r24, 0x25	; 37
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	25 e2       	ldi	r18, 0x25	; 37
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	f9 01       	movw	r30, r18
     3ac:	20 81       	ld	r18, Z
     3ae:	2e 7f       	andi	r18, 0xFE	; 254
     3b0:	fc 01       	movw	r30, r24
     3b2:	20 83       	st	Z, r18
		slpflg = 1;
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	80 93 0f 01 	sts	0x010F, r24
		EIMSK &= ~(1 << INT0);
     3ba:	8d e3       	ldi	r24, 0x3D	; 61
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	2d e3       	ldi	r18, 0x3D	; 61
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	f9 01       	movw	r30, r18
     3c4:	20 81       	ld	r18, Z
     3c6:	2e 7f       	andi	r18, 0xFE	; 254
     3c8:	fc 01       	movw	r30, r24
     3ca:	20 83       	st	Z, r18
		sleep_enable();
     3cc:	83 e5       	ldi	r24, 0x53	; 83
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	23 e5       	ldi	r18, 0x53	; 83
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	f9 01       	movw	r30, r18
     3d6:	20 81       	ld	r18, Z
     3d8:	21 60       	ori	r18, 0x01	; 1
     3da:	fc 01       	movw	r30, r24
     3dc:	20 83       	st	Z, r18
		sleep_cpu();
     3de:	88 95       	sleep
		sleep_disable();
     3e0:	83 e5       	ldi	r24, 0x53	; 83
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	23 e5       	ldi	r18, 0x53	; 83
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	f9 01       	movw	r30, r18
     3ea:	20 81       	ld	r18, Z
     3ec:	2e 7f       	andi	r18, 0xFE	; 254
     3ee:	fc 01       	movw	r30, r24
     3f0:	20 83       	st	Z, r18
	}				
     3f2:	97 ce       	rjmp	.-722    	; 0x122 <main+0x7c>

000003f4 <initTimer>:
/*
 * Function Name:
 * Author: Chris Williams
 */
void initTimer( int dutycycle )
{
     3f4:	df 93       	push	r29
     3f6:	cf 93       	push	r28
     3f8:	00 d0       	rcall	.+0      	; 0x3fa <initTimer+0x6>
     3fa:	cd b7       	in	r28, 0x3d	; 61
     3fc:	de b7       	in	r29, 0x3e	; 62
     3fe:	9a 83       	std	Y+2, r25	; 0x02
     400:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = 130; //cap of Timer0
     402:	87 e4       	ldi	r24, 0x47	; 71
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	22 e8       	ldi	r18, 0x82	; 130
     408:	fc 01       	movw	r30, r24
     40a:	20 83       	st	Z, r18
	OCR0B = dutycycle;
     40c:	88 e4       	ldi	r24, 0x48	; 72
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	29 81       	ldd	r18, Y+1	; 0x01
     412:	fc 01       	movw	r30, r24
     414:	20 83       	st	Z, r18
	
    DDRD |= (1 << PORTD6);         
     416:	8a e2       	ldi	r24, 0x2A	; 42
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	2a e2       	ldi	r18, 0x2A	; 42
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	f9 01       	movw	r30, r18
     420:	20 81       	ld	r18, Z
     422:	20 64       	ori	r18, 0x40	; 64
     424:	fc 01       	movw	r30, r24
     426:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);  // set non-inverting mode
     428:	84 e4       	ldi	r24, 0x44	; 68
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	24 e4       	ldi	r18, 0x44	; 68
     42e:	30 e0       	ldi	r19, 0x00	; 0
     430:	f9 01       	movw	r30, r18
     432:	20 81       	ld	r18, Z
     434:	20 68       	ori	r18, 0x80	; 128
     436:	fc 01       	movw	r30, r24
     438:	20 83       	st	Z, r18

    TCCR0A |= (1 << WGM01);   // set CTC (Clear Timer on Compare) Mode
     43a:	84 e4       	ldi	r24, 0x44	; 68
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	24 e4       	ldi	r18, 0x44	; 68
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	f9 01       	movw	r30, r18
     444:	20 81       	ld	r18, Z
     446:	22 60       	ori	r18, 0x02	; 2
     448:	fc 01       	movw	r30, r24
     44a:	20 83       	st	Z, r18

    TCCR0B |= (1 << CS01);    // set prescaler to 8 and starts PWM
     44c:	85 e4       	ldi	r24, 0x45	; 69
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	25 e4       	ldi	r18, 0x45	; 69
     452:	30 e0       	ldi	r19, 0x00	; 0
     454:	f9 01       	movw	r30, r18
     456:	20 81       	ld	r18, Z
     458:	22 60       	ori	r18, 0x02	; 2
     45a:	fc 01       	movw	r30, r24
     45c:	20 83       	st	Z, r18
	
	TIMSK0 = (1 << OCIE0A) | (1 << TOIE0);	//Enable OVF
     45e:	8e e6       	ldi	r24, 0x6E	; 110
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	23 e0       	ldi	r18, 0x03	; 3
     464:	fc 01       	movw	r30, r24
     466:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0B);
	//Enable COMPA
	*/
}
     468:	0f 90       	pop	r0
     46a:	0f 90       	pop	r0
     46c:	cf 91       	pop	r28
     46e:	df 91       	pop	r29
     470:	08 95       	ret

00000472 <initInterrupt0>:


void initInterrupt0()
{
     472:	df 93       	push	r29
     474:	cf 93       	push	r28
     476:	cd b7       	in	r28, 0x3d	; 61
     478:	de b7       	in	r29, 0x3e	; 62
	PORTD |= (1 << PORTD2) | (1 << PORTD3);
     47a:	8b e2       	ldi	r24, 0x2B	; 43
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	2b e2       	ldi	r18, 0x2B	; 43
     480:	30 e0       	ldi	r19, 0x00	; 0
     482:	f9 01       	movw	r30, r18
     484:	20 81       	ld	r18, Z
     486:	2c 60       	ori	r18, 0x0C	; 12
     488:	fc 01       	movw	r30, r24
     48a:	20 83       	st	Z, r18
	EICRA = 0;
     48c:	89 e6       	ldi	r24, 0x69	; 105
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	fc 01       	movw	r30, r24
     492:	10 82       	st	Z, r1
	EICRA |= (1 << ISC11) | (1 << ISC01);
     494:	89 e6       	ldi	r24, 0x69	; 105
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	29 e6       	ldi	r18, 0x69	; 105
     49a:	30 e0       	ldi	r19, 0x00	; 0
     49c:	f9 01       	movw	r30, r18
     49e:	20 81       	ld	r18, Z
     4a0:	2a 60       	ori	r18, 0x0A	; 10
     4a2:	fc 01       	movw	r30, r24
     4a4:	20 83       	st	Z, r18
	EIMSK |= (1 << INT1) | (1 << INT0);
     4a6:	8d e3       	ldi	r24, 0x3D	; 61
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	2d e3       	ldi	r18, 0x3D	; 61
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	f9 01       	movw	r30, r18
     4b0:	20 81       	ld	r18, Z
     4b2:	23 60       	ori	r18, 0x03	; 3
     4b4:	fc 01       	movw	r30, r24
     4b6:	20 83       	st	Z, r18
}	
     4b8:	cf 91       	pop	r28
     4ba:	df 91       	pop	r29
     4bc:	08 95       	ret

000004be <setCycle>:


void setCycle(int dutycycle)
{
     4be:	df 93       	push	r29
     4c0:	cf 93       	push	r28
     4c2:	00 d0       	rcall	.+0      	; 0x4c4 <setCycle+0x6>
     4c4:	cd b7       	in	r28, 0x3d	; 61
     4c6:	de b7       	in	r29, 0x3e	; 62
     4c8:	9a 83       	std	Y+2, r25	; 0x02
     4ca:	89 83       	std	Y+1, r24	; 0x01
	cli();
     4cc:	f8 94       	cli
	OCR0A = dutycycle;
     4ce:	87 e4       	ldi	r24, 0x47	; 71
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	29 81       	ldd	r18, Y+1	; 0x01
     4d4:	fc 01       	movw	r30, r24
     4d6:	20 83       	st	Z, r18
	sei();
     4d8:	78 94       	sei
	return;
}
     4da:	0f 90       	pop	r0
     4dc:	0f 90       	pop	r0
     4de:	cf 91       	pop	r28
     4e0:	df 91       	pop	r29
     4e2:	08 95       	ret

000004e4 <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     4e4:	1f 92       	push	r1
     4e6:	0f 92       	push	r0
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	0f 92       	push	r0
     4ec:	11 24       	eor	r1, r1
     4ee:	8f 93       	push	r24
     4f0:	9f 93       	push	r25
     4f2:	ef 93       	push	r30
     4f4:	ff 93       	push	r31
     4f6:	df 93       	push	r29
     4f8:	cf 93       	push	r28
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1 << RXC0)) )
     4fe:	00 00       	nop
     500:	80 ec       	ldi	r24, 0xC0	; 192
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	fc 01       	movw	r30, r24
     506:	80 81       	ld	r24, Z
     508:	88 23       	and	r24, r24
     50a:	d4 f7       	brge	.-12     	; 0x500 <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	//dim = UDR0;
	rxflag = 1;
     50c:	81 e0       	ldi	r24, 0x01	; 1
     50e:	80 93 0e 01 	sts	0x010E, r24
}
     512:	cf 91       	pop	r28
     514:	df 91       	pop	r29
     516:	ff 91       	pop	r31
     518:	ef 91       	pop	r30
     51a:	9f 91       	pop	r25
     51c:	8f 91       	pop	r24
     51e:	0f 90       	pop	r0
     520:	0f be       	out	0x3f, r0	; 63
     522:	0f 90       	pop	r0
     524:	1f 90       	pop	r1
     526:	18 95       	reti

00000528 <__vector_14>:
 
 
//OLD: 2/15/2012
//ISR(TIMER0_OVF_vect)
ISR(TIMER0_COMPA_vect)
{
     528:	1f 92       	push	r1
     52a:	0f 92       	push	r0
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	0f 92       	push	r0
     530:	11 24       	eor	r1, r1
     532:	0f 93       	push	r16
     534:	1f 93       	push	r17
     536:	2f 93       	push	r18
     538:	3f 93       	push	r19
     53a:	4f 93       	push	r20
     53c:	5f 93       	push	r21
     53e:	6f 93       	push	r22
     540:	7f 93       	push	r23
     542:	8f 93       	push	r24
     544:	9f 93       	push	r25
     546:	af 93       	push	r26
     548:	bf 93       	push	r27
     54a:	ef 93       	push	r30
     54c:	ff 93       	push	r31
     54e:	df 93       	push	r29
     550:	cf 93       	push	r28
     552:	cd b7       	in	r28, 0x3d	; 61
     554:	de b7       	in	r29, 0x3e	; 62
     556:	68 97       	sbiw	r28, 0x18	; 24
     558:	de bf       	out	0x3e, r29	; 62
     55a:	cd bf       	out	0x3d, r28	; 61
	if( zerocross == 1) 
     55c:	80 91 02 01 	lds	r24, 0x0102
     560:	81 30       	cpi	r24, 0x01	; 1
     562:	09 f0       	breq	.+2      	; 0x566 <__vector_14+0x3e>
     564:	03 c1       	rjmp	.+518    	; 0x76c <__vector_14+0x244>
	{
		if( count >= dim )
     566:	20 91 0c 01 	lds	r18, 0x010C
     56a:	30 91 0d 01 	lds	r19, 0x010D
     56e:	80 91 00 01 	lds	r24, 0x0100
     572:	90 91 01 01 	lds	r25, 0x0101
     576:	28 17       	cp	r18, r24
     578:	39 07       	cpc	r19, r25
     57a:	08 f4       	brcc	.+2      	; 0x57e <__vector_14+0x56>
     57c:	ee c0       	rjmp	.+476    	; 0x75a <__vector_14+0x232>
		{
			//PORTD |= (1 << PORTD6);
			PORTB |= (1 << PORTB0);
     57e:	85 e2       	ldi	r24, 0x25	; 37
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	25 e2       	ldi	r18, 0x25	; 37
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	f9 01       	movw	r30, r18
     588:	20 81       	ld	r18, Z
     58a:	21 60       	ori	r18, 0x01	; 1
     58c:	fc 01       	movw	r30, r24
     58e:	20 83       	st	Z, r18
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 ea       	ldi	r26, 0xA0	; 160
     596:	b0 e4       	ldi	r27, 0x40	; 64
     598:	89 83       	std	Y+1, r24	; 0x01
     59a:	9a 83       	std	Y+2, r25	; 0x02
     59c:	ab 83       	std	Y+3, r26	; 0x03
     59e:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     5a0:	69 81       	ldd	r22, Y+1	; 0x01
     5a2:	7a 81       	ldd	r23, Y+2	; 0x02
     5a4:	8b 81       	ldd	r24, Y+3	; 0x03
     5a6:	9c 81       	ldd	r25, Y+4	; 0x04
     5a8:	2b ea       	ldi	r18, 0xAB	; 171
     5aa:	3a ea       	ldi	r19, 0xAA	; 170
     5ac:	4a ea       	ldi	r20, 0xAA	; 170
     5ae:	50 e4       	ldi	r21, 0x40	; 64
     5b0:	0e 94 29 06 	call	0xc52	; 0xc52 <__mulsf3>
     5b4:	dc 01       	movw	r26, r24
     5b6:	cb 01       	movw	r24, r22
     5b8:	8d 83       	std	Y+5, r24	; 0x05
     5ba:	9e 83       	std	Y+6, r25	; 0x06
     5bc:	af 83       	std	Y+7, r26	; 0x07
     5be:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     5c0:	11 e0       	ldi	r17, 0x01	; 1
     5c2:	6d 81       	ldd	r22, Y+5	; 0x05
     5c4:	7e 81       	ldd	r23, Y+6	; 0x06
     5c6:	8f 81       	ldd	r24, Y+7	; 0x07
     5c8:	98 85       	ldd	r25, Y+8	; 0x08
     5ca:	20 e0       	ldi	r18, 0x00	; 0
     5cc:	30 e0       	ldi	r19, 0x00	; 0
     5ce:	40 e8       	ldi	r20, 0x80	; 128
     5d0:	5f e3       	ldi	r21, 0x3F	; 63
     5d2:	0e 94 31 08 	call	0x1062	; 0x1062 <__ltsf2>
     5d6:	88 23       	and	r24, r24
     5d8:	0c f0       	brlt	.+2      	; 0x5dc <__vector_14+0xb4>
     5da:	10 e0       	ldi	r17, 0x00	; 0
     5dc:	11 23       	and	r17, r17
     5de:	19 f0       	breq	.+6      	; 0x5e6 <__vector_14+0xbe>
		__ticks = 1;
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	89 87       	std	Y+9, r24	; 0x09
     5e4:	a3 c0       	rjmp	.+326    	; 0x72c <__vector_14+0x204>
	else if (__tmp > 255)
     5e6:	11 e0       	ldi	r17, 0x01	; 1
     5e8:	6d 81       	ldd	r22, Y+5	; 0x05
     5ea:	7e 81       	ldd	r23, Y+6	; 0x06
     5ec:	8f 81       	ldd	r24, Y+7	; 0x07
     5ee:	98 85       	ldd	r25, Y+8	; 0x08
     5f0:	20 e0       	ldi	r18, 0x00	; 0
     5f2:	30 e0       	ldi	r19, 0x00	; 0
     5f4:	4f e7       	ldi	r20, 0x7F	; 127
     5f6:	53 e4       	ldi	r21, 0x43	; 67
     5f8:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__gtsf2>
     5fc:	18 16       	cp	r1, r24
     5fe:	0c f0       	brlt	.+2      	; 0x602 <__vector_14+0xda>
     600:	10 e0       	ldi	r17, 0x00	; 0
     602:	11 23       	and	r17, r17
     604:	09 f4       	brne	.+2      	; 0x608 <__vector_14+0xe0>
     606:	89 c0       	rjmp	.+274    	; 0x71a <__vector_14+0x1f2>
	{
		_delay_ms(__us / 1000.0);
     608:	69 81       	ldd	r22, Y+1	; 0x01
     60a:	7a 81       	ldd	r23, Y+2	; 0x02
     60c:	8b 81       	ldd	r24, Y+3	; 0x03
     60e:	9c 81       	ldd	r25, Y+4	; 0x04
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	4a e7       	ldi	r20, 0x7A	; 122
     616:	54 e4       	ldi	r21, 0x44	; 68
     618:	0e 94 23 07 	call	0xe46	; 0xe46 <__divsf3>
     61c:	dc 01       	movw	r26, r24
     61e:	cb 01       	movw	r24, r22
     620:	8a 87       	std	Y+10, r24	; 0x0a
     622:	9b 87       	std	Y+11, r25	; 0x0b
     624:	ac 87       	std	Y+12, r26	; 0x0c
     626:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     628:	6a 85       	ldd	r22, Y+10	; 0x0a
     62a:	7b 85       	ldd	r23, Y+11	; 0x0b
     62c:	8c 85       	ldd	r24, Y+12	; 0x0c
     62e:	9d 85       	ldd	r25, Y+13	; 0x0d
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	4a e7       	ldi	r20, 0x7A	; 122
     636:	55 e4       	ldi	r21, 0x45	; 69
     638:	0e 94 29 06 	call	0xc52	; 0xc52 <__mulsf3>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	8e 87       	std	Y+14, r24	; 0x0e
     642:	9f 87       	std	Y+15, r25	; 0x0f
     644:	a8 8b       	std	Y+16, r26	; 0x10
     646:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     648:	11 e0       	ldi	r17, 0x01	; 1
     64a:	6e 85       	ldd	r22, Y+14	; 0x0e
     64c:	7f 85       	ldd	r23, Y+15	; 0x0f
     64e:	88 89       	ldd	r24, Y+16	; 0x10
     650:	99 89       	ldd	r25, Y+17	; 0x11
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	40 e8       	ldi	r20, 0x80	; 128
     658:	5f e3       	ldi	r21, 0x3F	; 63
     65a:	0e 94 31 08 	call	0x1062	; 0x1062 <__ltsf2>
     65e:	88 23       	and	r24, r24
     660:	0c f0       	brlt	.+2      	; 0x664 <__vector_14+0x13c>
     662:	10 e0       	ldi	r17, 0x00	; 0
     664:	11 23       	and	r17, r17
     666:	29 f0       	breq	.+10     	; 0x672 <__vector_14+0x14a>
		__ticks = 1;
     668:	81 e0       	ldi	r24, 0x01	; 1
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	9b 8b       	std	Y+19, r25	; 0x13
     66e:	8a 8b       	std	Y+18, r24	; 0x12
     670:	46 c0       	rjmp	.+140    	; 0x6fe <__vector_14+0x1d6>
	else if (__tmp > 65535)
     672:	11 e0       	ldi	r17, 0x01	; 1
     674:	6e 85       	ldd	r22, Y+14	; 0x0e
     676:	7f 85       	ldd	r23, Y+15	; 0x0f
     678:	88 89       	ldd	r24, Y+16	; 0x10
     67a:	99 89       	ldd	r25, Y+17	; 0x11
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	3f ef       	ldi	r19, 0xFF	; 255
     680:	4f e7       	ldi	r20, 0x7F	; 127
     682:	57 e4       	ldi	r21, 0x47	; 71
     684:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__gtsf2>
     688:	18 16       	cp	r1, r24
     68a:	0c f0       	brlt	.+2      	; 0x68e <__vector_14+0x166>
     68c:	10 e0       	ldi	r17, 0x00	; 0
     68e:	11 23       	and	r17, r17
     690:	61 f1       	breq	.+88     	; 0x6ea <__vector_14+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     692:	6a 85       	ldd	r22, Y+10	; 0x0a
     694:	7b 85       	ldd	r23, Y+11	; 0x0b
     696:	8c 85       	ldd	r24, Y+12	; 0x0c
     698:	9d 85       	ldd	r25, Y+13	; 0x0d
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	40 e2       	ldi	r20, 0x20	; 32
     6a0:	51 e4       	ldi	r21, 0x41	; 65
     6a2:	0e 94 29 06 	call	0xc52	; 0xc52 <__mulsf3>
     6a6:	dc 01       	movw	r26, r24
     6a8:	cb 01       	movw	r24, r22
     6aa:	bc 01       	movw	r22, r24
     6ac:	cd 01       	movw	r24, r26
     6ae:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixunssfsi>
     6b2:	dc 01       	movw	r26, r24
     6b4:	cb 01       	movw	r24, r22
     6b6:	9b 8b       	std	Y+19, r25	; 0x13
     6b8:	8a 8b       	std	Y+18, r24	; 0x12
     6ba:	12 c0       	rjmp	.+36     	; 0x6e0 <__vector_14+0x1b8>
     6bc:	80 e9       	ldi	r24, 0x90	; 144
     6be:	91 e0       	ldi	r25, 0x01	; 1
     6c0:	9d 8b       	std	Y+21, r25	; 0x15
     6c2:	8c 8b       	std	Y+20, r24	; 0x14
     6c4:	8c 89       	ldd	r24, Y+20	; 0x14
     6c6:	9d 89       	ldd	r25, Y+21	; 0x15
     6c8:	8c 01       	movw	r16, r24
     6ca:	c8 01       	movw	r24, r16
     6cc:	01 97       	sbiw	r24, 0x01	; 1
     6ce:	f1 f7       	brne	.-4      	; 0x6cc <__vector_14+0x1a4>
     6d0:	8c 01       	movw	r16, r24
     6d2:	1d 8b       	std	Y+21, r17	; 0x15
     6d4:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6d6:	8a 89       	ldd	r24, Y+18	; 0x12
     6d8:	9b 89       	ldd	r25, Y+19	; 0x13
     6da:	01 97       	sbiw	r24, 0x01	; 1
     6dc:	9b 8b       	std	Y+19, r25	; 0x13
     6de:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6e0:	8a 89       	ldd	r24, Y+18	; 0x12
     6e2:	9b 89       	ldd	r25, Y+19	; 0x13
     6e4:	00 97       	sbiw	r24, 0x00	; 0
     6e6:	51 f7       	brne	.-44     	; 0x6bc <__vector_14+0x194>
     6e8:	28 c0       	rjmp	.+80     	; 0x73a <__vector_14+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6ea:	6e 85       	ldd	r22, Y+14	; 0x0e
     6ec:	7f 85       	ldd	r23, Y+15	; 0x0f
     6ee:	88 89       	ldd	r24, Y+16	; 0x10
     6f0:	99 89       	ldd	r25, Y+17	; 0x11
     6f2:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixunssfsi>
     6f6:	dc 01       	movw	r26, r24
     6f8:	cb 01       	movw	r24, r22
     6fa:	9b 8b       	std	Y+19, r25	; 0x13
     6fc:	8a 8b       	std	Y+18, r24	; 0x12
     6fe:	8a 89       	ldd	r24, Y+18	; 0x12
     700:	9b 89       	ldd	r25, Y+19	; 0x13
     702:	9f 8b       	std	Y+23, r25	; 0x17
     704:	8e 8b       	std	Y+22, r24	; 0x16
     706:	8e 89       	ldd	r24, Y+22	; 0x16
     708:	9f 89       	ldd	r25, Y+23	; 0x17
     70a:	8c 01       	movw	r16, r24
     70c:	f8 01       	movw	r30, r16
     70e:	31 97       	sbiw	r30, 0x01	; 1
     710:	f1 f7       	brne	.-4      	; 0x70e <__vector_14+0x1e6>
     712:	8f 01       	movw	r16, r30
     714:	1f 8b       	std	Y+23, r17	; 0x17
     716:	0e 8b       	std	Y+22, r16	; 0x16
     718:	10 c0       	rjmp	.+32     	; 0x73a <__vector_14+0x212>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     71a:	6d 81       	ldd	r22, Y+5	; 0x05
     71c:	7e 81       	ldd	r23, Y+6	; 0x06
     71e:	8f 81       	ldd	r24, Y+7	; 0x07
     720:	98 85       	ldd	r25, Y+8	; 0x08
     722:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixunssfsi>
     726:	dc 01       	movw	r26, r24
     728:	cb 01       	movw	r24, r22
     72a:	89 87       	std	Y+9, r24	; 0x09
     72c:	89 85       	ldd	r24, Y+9	; 0x09
     72e:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     730:	88 8d       	ldd	r24, Y+24	; 0x18
     732:	18 2f       	mov	r17, r24
     734:	1a 95       	dec	r17
     736:	f1 f7       	brne	.-4      	; 0x734 <__vector_14+0x20c>
     738:	18 8f       	std	Y+24, r17	; 0x18
			_delay_us( 5 );
			//PORTD &= ~(1 << PORTD6);
			PORTB &= ~(1 << PORTB0);
     73a:	85 e2       	ldi	r24, 0x25	; 37
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	25 e2       	ldi	r18, 0x25	; 37
     740:	30 e0       	ldi	r19, 0x00	; 0
     742:	f9 01       	movw	r30, r18
     744:	20 81       	ld	r18, Z
     746:	2e 7f       	andi	r18, 0xFE	; 254
     748:	fc 01       	movw	r30, r24
     74a:	20 83       	st	Z, r18
			count = 0;
     74c:	10 92 0d 01 	sts	0x010D, r1
     750:	10 92 0c 01 	sts	0x010C, r1
			zerocross = 0;
     754:	10 92 02 01 	sts	0x0102, r1
     758:	09 c0       	rjmp	.+18     	; 0x76c <__vector_14+0x244>
		}
		else
		{
			
			count = count + 1;
     75a:	80 91 0c 01 	lds	r24, 0x010C
     75e:	90 91 0d 01 	lds	r25, 0x010D
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	90 93 0d 01 	sts	0x010D, r25
     768:	80 93 0c 01 	sts	0x010C, r24
		}
	}
}
     76c:	68 96       	adiw	r28, 0x18	; 24
     76e:	de bf       	out	0x3e, r29	; 62
     770:	cd bf       	out	0x3d, r28	; 61
     772:	cf 91       	pop	r28
     774:	df 91       	pop	r29
     776:	ff 91       	pop	r31
     778:	ef 91       	pop	r30
     77a:	bf 91       	pop	r27
     77c:	af 91       	pop	r26
     77e:	9f 91       	pop	r25
     780:	8f 91       	pop	r24
     782:	7f 91       	pop	r23
     784:	6f 91       	pop	r22
     786:	5f 91       	pop	r21
     788:	4f 91       	pop	r20
     78a:	3f 91       	pop	r19
     78c:	2f 91       	pop	r18
     78e:	1f 91       	pop	r17
     790:	0f 91       	pop	r16
     792:	0f 90       	pop	r0
     794:	0f be       	out	0x3f, r0	; 63
     796:	0f 90       	pop	r0
     798:	1f 90       	pop	r1
     79a:	18 95       	reti

0000079c <__vector_1>:

ISR(INT0_vect)
{
     79c:	1f 92       	push	r1
     79e:	0f 92       	push	r0
     7a0:	0f b6       	in	r0, 0x3f	; 63
     7a2:	0f 92       	push	r0
     7a4:	11 24       	eor	r1, r1
     7a6:	8f 93       	push	r24
     7a8:	df 93       	push	r29
     7aa:	cf 93       	push	r28
     7ac:	cd b7       	in	r28, 0x3d	; 61
     7ae:	de b7       	in	r29, 0x3e	; 62
	zerocross = 1;
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	80 93 02 01 	sts	0x0102, r24
}
     7b6:	cf 91       	pop	r28
     7b8:	df 91       	pop	r29
     7ba:	8f 91       	pop	r24
     7bc:	0f 90       	pop	r0
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	0f 90       	pop	r0
     7c2:	1f 90       	pop	r1
     7c4:	18 95       	reti

000007c6 <__vector_2>:

ISR(INT1_vect)
{
     7c6:	1f 92       	push	r1
     7c8:	0f 92       	push	r0
     7ca:	0f b6       	in	r0, 0x3f	; 63
     7cc:	0f 92       	push	r0
     7ce:	11 24       	eor	r1, r1
     7d0:	2f 93       	push	r18
     7d2:	3f 93       	push	r19
     7d4:	8f 93       	push	r24
     7d6:	9f 93       	push	r25
     7d8:	ef 93       	push	r30
     7da:	ff 93       	push	r31
     7dc:	df 93       	push	r29
     7de:	cf 93       	push	r28
     7e0:	cd b7       	in	r28, 0x3d	; 61
     7e2:	de b7       	in	r29, 0x3e	; 62
	
	//Go to low power state
	sleep_disable();
     7e4:	83 e5       	ldi	r24, 0x53	; 83
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	23 e5       	ldi	r18, 0x53	; 83
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	f9 01       	movw	r30, r18
     7ee:	20 81       	ld	r18, Z
     7f0:	2e 7f       	andi	r18, 0xFE	; 254
     7f2:	fc 01       	movw	r30, r24
     7f4:	20 83       	st	Z, r18
	EIMSK |= (1 << INT1) | (1 << INT0);
     7f6:	8d e3       	ldi	r24, 0x3D	; 61
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	2d e3       	ldi	r18, 0x3D	; 61
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	f9 01       	movw	r30, r18
     800:	20 81       	ld	r18, Z
     802:	23 60       	ori	r18, 0x03	; 3
     804:	fc 01       	movw	r30, r24
     806:	20 83       	st	Z, r18
     808:	cf 91       	pop	r28
     80a:	df 91       	pop	r29
     80c:	ff 91       	pop	r31
     80e:	ef 91       	pop	r30
     810:	9f 91       	pop	r25
     812:	8f 91       	pop	r24
     814:	3f 91       	pop	r19
     816:	2f 91       	pop	r18
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <USART_Init>:
 */ 

#include<avr/io.h> 

void USART_Init( unsigned int ubrr)
{
     822:	df 93       	push	r29
     824:	cf 93       	push	r28
     826:	00 d0       	rcall	.+0      	; 0x828 <USART_Init+0x6>
     828:	cd b7       	in	r28, 0x3d	; 61
     82a:	de b7       	in	r29, 0x3e	; 62
     82c:	9a 83       	std	Y+2, r25	; 0x02
     82e:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     830:	85 ec       	ldi	r24, 0xC5	; 197
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	29 81       	ldd	r18, Y+1	; 0x01
     836:	3a 81       	ldd	r19, Y+2	; 0x02
     838:	23 2f       	mov	r18, r19
     83a:	33 27       	eor	r19, r19
     83c:	fc 01       	movw	r30, r24
     83e:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     840:	84 ec       	ldi	r24, 0xC4	; 196
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	29 81       	ldd	r18, Y+1	; 0x01
     846:	fc 01       	movw	r30, r24
     848:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     84a:	81 ec       	ldi	r24, 0xC1	; 193
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	28 e9       	ldi	r18, 0x98	; 152
     850:	fc 01       	movw	r30, r24
     852:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     854:	82 ec       	ldi	r24, 0xC2	; 194
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	26 e0       	ldi	r18, 0x06	; 6
     85a:	fc 01       	movw	r30, r24
     85c:	20 83       	st	Z, r18
}
     85e:	0f 90       	pop	r0
     860:	0f 90       	pop	r0
     862:	cf 91       	pop	r28
     864:	df 91       	pop	r29
     866:	08 95       	ret

00000868 <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     868:	df 93       	push	r29
     86a:	cf 93       	push	r28
     86c:	0f 92       	push	r0
     86e:	cd b7       	in	r28, 0x3d	; 61
     870:	de b7       	in	r29, 0x3e	; 62
     872:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     874:	00 00       	nop
     876:	80 ec       	ldi	r24, 0xC0	; 192
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	fc 01       	movw	r30, r24
     87c:	80 81       	ld	r24, Z
     87e:	88 2f       	mov	r24, r24
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	80 72       	andi	r24, 0x20	; 32
     884:	90 70       	andi	r25, 0x00	; 0
     886:	00 97       	sbiw	r24, 0x00	; 0
     888:	b1 f3       	breq	.-20     	; 0x876 <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     88a:	86 ec       	ldi	r24, 0xC6	; 198
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	29 81       	ldd	r18, Y+1	; 0x01
     890:	fc 01       	movw	r30, r24
     892:	20 83       	st	Z, r18
}
     894:	0f 90       	pop	r0
     896:	cf 91       	pop	r28
     898:	df 91       	pop	r29
     89a:	08 95       	ret

0000089c <USART_Receive>:


unsigned char USART_Receive( void )
{
     89c:	df 93       	push	r29
     89e:	cf 93       	push	r28
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
	
}
     8a4:	cf 91       	pop	r28
     8a6:	df 91       	pop	r29
     8a8:	08 95       	ret

000008aa <__fixunssfsi>:
     8aa:	ef 92       	push	r14
     8ac:	ff 92       	push	r15
     8ae:	0f 93       	push	r16
     8b0:	1f 93       	push	r17
     8b2:	7b 01       	movw	r14, r22
     8b4:	8c 01       	movw	r16, r24
     8b6:	20 e0       	ldi	r18, 0x00	; 0
     8b8:	30 e0       	ldi	r19, 0x00	; 0
     8ba:	40 e0       	ldi	r20, 0x00	; 0
     8bc:	5f e4       	ldi	r21, 0x4F	; 79
     8be:	0e 94 01 08 	call	0x1002	; 0x1002 <__gesf2>
     8c2:	87 fd       	sbrc	r24, 7
     8c4:	11 c0       	rjmp	.+34     	; 0x8e8 <__fixunssfsi+0x3e>
     8c6:	c8 01       	movw	r24, r16
     8c8:	b7 01       	movw	r22, r14
     8ca:	20 e0       	ldi	r18, 0x00	; 0
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	40 e0       	ldi	r20, 0x00	; 0
     8d0:	5f e4       	ldi	r21, 0x4F	; 79
     8d2:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__subsf3>
     8d6:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__fixsfsi>
     8da:	9b 01       	movw	r18, r22
     8dc:	ac 01       	movw	r20, r24
     8de:	20 50       	subi	r18, 0x00	; 0
     8e0:	30 40       	sbci	r19, 0x00	; 0
     8e2:	40 40       	sbci	r20, 0x00	; 0
     8e4:	50 48       	sbci	r21, 0x80	; 128
     8e6:	06 c0       	rjmp	.+12     	; 0x8f4 <__fixunssfsi+0x4a>
     8e8:	c8 01       	movw	r24, r16
     8ea:	b7 01       	movw	r22, r14
     8ec:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__fixsfsi>
     8f0:	9b 01       	movw	r18, r22
     8f2:	ac 01       	movw	r20, r24
     8f4:	b9 01       	movw	r22, r18
     8f6:	ca 01       	movw	r24, r20
     8f8:	1f 91       	pop	r17
     8fa:	0f 91       	pop	r16
     8fc:	ff 90       	pop	r15
     8fe:	ef 90       	pop	r14
     900:	08 95       	ret

00000902 <_fpadd_parts>:
     902:	a0 e0       	ldi	r26, 0x00	; 0
     904:	b0 e0       	ldi	r27, 0x00	; 0
     906:	e7 e8       	ldi	r30, 0x87	; 135
     908:	f4 e0       	ldi	r31, 0x04	; 4
     90a:	0c 94 47 0a 	jmp	0x148e	; 0x148e <__prologue_saves__+0x8>
     90e:	fc 01       	movw	r30, r24
     910:	ea 01       	movw	r28, r20
     912:	80 81       	ld	r24, Z
     914:	82 30       	cpi	r24, 0x02	; 2
     916:	08 f4       	brcc	.+2      	; 0x91a <_fpadd_parts+0x18>
     918:	38 c1       	rjmp	.+624    	; 0xb8a <_fpadd_parts+0x288>
     91a:	db 01       	movw	r26, r22
     91c:	9c 91       	ld	r25, X
     91e:	92 30       	cpi	r25, 0x02	; 2
     920:	08 f4       	brcc	.+2      	; 0x924 <_fpadd_parts+0x22>
     922:	30 c1       	rjmp	.+608    	; 0xb84 <_fpadd_parts+0x282>
     924:	84 30       	cpi	r24, 0x04	; 4
     926:	59 f4       	brne	.+22     	; 0x93e <_fpadd_parts+0x3c>
     928:	94 30       	cpi	r25, 0x04	; 4
     92a:	09 f0       	breq	.+2      	; 0x92e <_fpadd_parts+0x2c>
     92c:	2e c1       	rjmp	.+604    	; 0xb8a <_fpadd_parts+0x288>
     92e:	91 81       	ldd	r25, Z+1	; 0x01
     930:	11 96       	adiw	r26, 0x01	; 1
     932:	8c 91       	ld	r24, X
     934:	11 97       	sbiw	r26, 0x01	; 1
     936:	98 17       	cp	r25, r24
     938:	09 f0       	breq	.+2      	; 0x93c <_fpadd_parts+0x3a>
     93a:	21 c1       	rjmp	.+578    	; 0xb7e <_fpadd_parts+0x27c>
     93c:	26 c1       	rjmp	.+588    	; 0xb8a <_fpadd_parts+0x288>
     93e:	94 30       	cpi	r25, 0x04	; 4
     940:	09 f4       	brne	.+2      	; 0x944 <_fpadd_parts+0x42>
     942:	20 c1       	rjmp	.+576    	; 0xb84 <_fpadd_parts+0x282>
     944:	92 30       	cpi	r25, 0x02	; 2
     946:	b1 f4       	brne	.+44     	; 0x974 <_fpadd_parts+0x72>
     948:	82 30       	cpi	r24, 0x02	; 2
     94a:	09 f0       	breq	.+2      	; 0x94e <_fpadd_parts+0x4c>
     94c:	1e c1       	rjmp	.+572    	; 0xb8a <_fpadd_parts+0x288>
     94e:	ca 01       	movw	r24, r20
     950:	af 01       	movw	r20, r30
     952:	28 e0       	ldi	r18, 0x08	; 8
     954:	da 01       	movw	r26, r20
     956:	0d 90       	ld	r0, X+
     958:	ad 01       	movw	r20, r26
     95a:	dc 01       	movw	r26, r24
     95c:	0d 92       	st	X+, r0
     95e:	cd 01       	movw	r24, r26
     960:	21 50       	subi	r18, 0x01	; 1
     962:	c1 f7       	brne	.-16     	; 0x954 <_fpadd_parts+0x52>
     964:	db 01       	movw	r26, r22
     966:	11 96       	adiw	r26, 0x01	; 1
     968:	8c 91       	ld	r24, X
     96a:	11 97       	sbiw	r26, 0x01	; 1
     96c:	91 81       	ldd	r25, Z+1	; 0x01
     96e:	89 23       	and	r24, r25
     970:	89 83       	std	Y+1, r24	; 0x01
     972:	0a c1       	rjmp	.+532    	; 0xb88 <_fpadd_parts+0x286>
     974:	82 30       	cpi	r24, 0x02	; 2
     976:	09 f4       	brne	.+2      	; 0x97a <_fpadd_parts+0x78>
     978:	05 c1       	rjmp	.+522    	; 0xb84 <_fpadd_parts+0x282>
     97a:	c2 80       	ldd	r12, Z+2	; 0x02
     97c:	d3 80       	ldd	r13, Z+3	; 0x03
     97e:	db 01       	movw	r26, r22
     980:	12 96       	adiw	r26, 0x02	; 2
     982:	6d 90       	ld	r6, X+
     984:	7c 90       	ld	r7, X
     986:	13 97       	sbiw	r26, 0x03	; 3
     988:	24 81       	ldd	r18, Z+4	; 0x04
     98a:	35 81       	ldd	r19, Z+5	; 0x05
     98c:	46 81       	ldd	r20, Z+6	; 0x06
     98e:	57 81       	ldd	r21, Z+7	; 0x07
     990:	14 96       	adiw	r26, 0x04	; 4
     992:	ed 90       	ld	r14, X+
     994:	fd 90       	ld	r15, X+
     996:	0d 91       	ld	r16, X+
     998:	1c 91       	ld	r17, X
     99a:	17 97       	sbiw	r26, 0x07	; 7
     99c:	c6 01       	movw	r24, r12
     99e:	86 19       	sub	r24, r6
     9a0:	97 09       	sbc	r25, r7
     9a2:	5c 01       	movw	r10, r24
     9a4:	97 ff       	sbrs	r25, 7
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <_fpadd_parts+0xae>
     9a8:	aa 24       	eor	r10, r10
     9aa:	bb 24       	eor	r11, r11
     9ac:	a8 1a       	sub	r10, r24
     9ae:	b9 0a       	sbc	r11, r25
     9b0:	b0 e2       	ldi	r27, 0x20	; 32
     9b2:	ab 16       	cp	r10, r27
     9b4:	b1 04       	cpc	r11, r1
     9b6:	0c f0       	brlt	.+2      	; 0x9ba <_fpadd_parts+0xb8>
     9b8:	61 c0       	rjmp	.+194    	; 0xa7c <_fpadd_parts+0x17a>
     9ba:	18 16       	cp	r1, r24
     9bc:	19 06       	cpc	r1, r25
     9be:	6c f5       	brge	.+90     	; 0xa1a <_fpadd_parts+0x118>
     9c0:	37 01       	movw	r6, r14
     9c2:	48 01       	movw	r8, r16
     9c4:	0a 2c       	mov	r0, r10
     9c6:	04 c0       	rjmp	.+8      	; 0x9d0 <_fpadd_parts+0xce>
     9c8:	96 94       	lsr	r9
     9ca:	87 94       	ror	r8
     9cc:	77 94       	ror	r7
     9ce:	67 94       	ror	r6
     9d0:	0a 94       	dec	r0
     9d2:	d2 f7       	brpl	.-12     	; 0x9c8 <_fpadd_parts+0xc6>
     9d4:	81 e0       	ldi	r24, 0x01	; 1
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	a0 e0       	ldi	r26, 0x00	; 0
     9da:	b0 e0       	ldi	r27, 0x00	; 0
     9dc:	0a 2c       	mov	r0, r10
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <_fpadd_parts+0xe6>
     9e0:	88 0f       	add	r24, r24
     9e2:	99 1f       	adc	r25, r25
     9e4:	aa 1f       	adc	r26, r26
     9e6:	bb 1f       	adc	r27, r27
     9e8:	0a 94       	dec	r0
     9ea:	d2 f7       	brpl	.-12     	; 0x9e0 <_fpadd_parts+0xde>
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	a1 09       	sbc	r26, r1
     9f0:	b1 09       	sbc	r27, r1
     9f2:	8e 21       	and	r24, r14
     9f4:	9f 21       	and	r25, r15
     9f6:	a0 23       	and	r26, r16
     9f8:	b1 23       	and	r27, r17
     9fa:	ee 24       	eor	r14, r14
     9fc:	ff 24       	eor	r15, r15
     9fe:	87 01       	movw	r16, r14
     a00:	e3 94       	inc	r14
     a02:	00 97       	sbiw	r24, 0x00	; 0
     a04:	a1 05       	cpc	r26, r1
     a06:	b1 05       	cpc	r27, r1
     a08:	19 f4       	brne	.+6      	; 0xa10 <_fpadd_parts+0x10e>
     a0a:	ee 24       	eor	r14, r14
     a0c:	ff 24       	eor	r15, r15
     a0e:	87 01       	movw	r16, r14
     a10:	e6 28       	or	r14, r6
     a12:	f7 28       	or	r15, r7
     a14:	08 29       	or	r16, r8
     a16:	19 29       	or	r17, r9
     a18:	3c c0       	rjmp	.+120    	; 0xa92 <_fpadd_parts+0x190>
     a1a:	00 97       	sbiw	r24, 0x00	; 0
     a1c:	d1 f1       	breq	.+116    	; 0xa92 <_fpadd_parts+0x190>
     a1e:	ca 0c       	add	r12, r10
     a20:	db 1c       	adc	r13, r11
     a22:	39 01       	movw	r6, r18
     a24:	4a 01       	movw	r8, r20
     a26:	0a 2c       	mov	r0, r10
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <_fpadd_parts+0x130>
     a2a:	96 94       	lsr	r9
     a2c:	87 94       	ror	r8
     a2e:	77 94       	ror	r7
     a30:	67 94       	ror	r6
     a32:	0a 94       	dec	r0
     a34:	d2 f7       	brpl	.-12     	; 0xa2a <_fpadd_parts+0x128>
     a36:	81 e0       	ldi	r24, 0x01	; 1
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	a0 e0       	ldi	r26, 0x00	; 0
     a3c:	b0 e0       	ldi	r27, 0x00	; 0
     a3e:	0a 2c       	mov	r0, r10
     a40:	04 c0       	rjmp	.+8      	; 0xa4a <_fpadd_parts+0x148>
     a42:	88 0f       	add	r24, r24
     a44:	99 1f       	adc	r25, r25
     a46:	aa 1f       	adc	r26, r26
     a48:	bb 1f       	adc	r27, r27
     a4a:	0a 94       	dec	r0
     a4c:	d2 f7       	brpl	.-12     	; 0xa42 <_fpadd_parts+0x140>
     a4e:	01 97       	sbiw	r24, 0x01	; 1
     a50:	a1 09       	sbc	r26, r1
     a52:	b1 09       	sbc	r27, r1
     a54:	82 23       	and	r24, r18
     a56:	93 23       	and	r25, r19
     a58:	a4 23       	and	r26, r20
     a5a:	b5 23       	and	r27, r21
     a5c:	21 e0       	ldi	r18, 0x01	; 1
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	50 e0       	ldi	r21, 0x00	; 0
     a64:	00 97       	sbiw	r24, 0x00	; 0
     a66:	a1 05       	cpc	r26, r1
     a68:	b1 05       	cpc	r27, r1
     a6a:	19 f4       	brne	.+6      	; 0xa72 <_fpadd_parts+0x170>
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	a9 01       	movw	r20, r18
     a72:	26 29       	or	r18, r6
     a74:	37 29       	or	r19, r7
     a76:	48 29       	or	r20, r8
     a78:	59 29       	or	r21, r9
     a7a:	0b c0       	rjmp	.+22     	; 0xa92 <_fpadd_parts+0x190>
     a7c:	6c 14       	cp	r6, r12
     a7e:	7d 04       	cpc	r7, r13
     a80:	24 f4       	brge	.+8      	; 0xa8a <_fpadd_parts+0x188>
     a82:	ee 24       	eor	r14, r14
     a84:	ff 24       	eor	r15, r15
     a86:	87 01       	movw	r16, r14
     a88:	04 c0       	rjmp	.+8      	; 0xa92 <_fpadd_parts+0x190>
     a8a:	63 01       	movw	r12, r6
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	a9 01       	movw	r20, r18
     a92:	81 81       	ldd	r24, Z+1	; 0x01
     a94:	fb 01       	movw	r30, r22
     a96:	91 81       	ldd	r25, Z+1	; 0x01
     a98:	89 17       	cp	r24, r25
     a9a:	09 f4       	brne	.+2      	; 0xa9e <_fpadd_parts+0x19c>
     a9c:	45 c0       	rjmp	.+138    	; 0xb28 <_fpadd_parts+0x226>
     a9e:	88 23       	and	r24, r24
     aa0:	49 f0       	breq	.+18     	; 0xab4 <_fpadd_parts+0x1b2>
     aa2:	d8 01       	movw	r26, r16
     aa4:	c7 01       	movw	r24, r14
     aa6:	82 1b       	sub	r24, r18
     aa8:	93 0b       	sbc	r25, r19
     aaa:	a4 0b       	sbc	r26, r20
     aac:	b5 0b       	sbc	r27, r21
     aae:	9c 01       	movw	r18, r24
     ab0:	ad 01       	movw	r20, r26
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <_fpadd_parts+0x1ba>
     ab4:	2e 19       	sub	r18, r14
     ab6:	3f 09       	sbc	r19, r15
     ab8:	40 0b       	sbc	r20, r16
     aba:	51 0b       	sbc	r21, r17
     abc:	57 fd       	sbrc	r21, 7
     abe:	04 c0       	rjmp	.+8      	; 0xac8 <_fpadd_parts+0x1c6>
     ac0:	19 82       	std	Y+1, r1	; 0x01
     ac2:	db 82       	std	Y+3, r13	; 0x03
     ac4:	ca 82       	std	Y+2, r12	; 0x02
     ac6:	0b c0       	rjmp	.+22     	; 0xade <_fpadd_parts+0x1dc>
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	89 83       	std	Y+1, r24	; 0x01
     acc:	db 82       	std	Y+3, r13	; 0x03
     ace:	ca 82       	std	Y+2, r12	; 0x02
     ad0:	50 95       	com	r21
     ad2:	40 95       	com	r20
     ad4:	30 95       	com	r19
     ad6:	21 95       	neg	r18
     ad8:	3f 4f       	sbci	r19, 0xFF	; 255
     ada:	4f 4f       	sbci	r20, 0xFF	; 255
     adc:	5f 4f       	sbci	r21, 0xFF	; 255
     ade:	2c 83       	std	Y+4, r18	; 0x04
     ae0:	3d 83       	std	Y+5, r19	; 0x05
     ae2:	4e 83       	std	Y+6, r20	; 0x06
     ae4:	5f 83       	std	Y+7, r21	; 0x07
     ae6:	0d c0       	rjmp	.+26     	; 0xb02 <_fpadd_parts+0x200>
     ae8:	88 0f       	add	r24, r24
     aea:	99 1f       	adc	r25, r25
     aec:	aa 1f       	adc	r26, r26
     aee:	bb 1f       	adc	r27, r27
     af0:	8c 83       	std	Y+4, r24	; 0x04
     af2:	9d 83       	std	Y+5, r25	; 0x05
     af4:	ae 83       	std	Y+6, r26	; 0x06
     af6:	bf 83       	std	Y+7, r27	; 0x07
     af8:	8a 81       	ldd	r24, Y+2	; 0x02
     afa:	9b 81       	ldd	r25, Y+3	; 0x03
     afc:	01 97       	sbiw	r24, 0x01	; 1
     afe:	9b 83       	std	Y+3, r25	; 0x03
     b00:	8a 83       	std	Y+2, r24	; 0x02
     b02:	8c 81       	ldd	r24, Y+4	; 0x04
     b04:	9d 81       	ldd	r25, Y+5	; 0x05
     b06:	ae 81       	ldd	r26, Y+6	; 0x06
     b08:	bf 81       	ldd	r27, Y+7	; 0x07
     b0a:	9c 01       	movw	r18, r24
     b0c:	ad 01       	movw	r20, r26
     b0e:	21 50       	subi	r18, 0x01	; 1
     b10:	30 40       	sbci	r19, 0x00	; 0
     b12:	40 40       	sbci	r20, 0x00	; 0
     b14:	50 40       	sbci	r21, 0x00	; 0
     b16:	2f 3f       	cpi	r18, 0xFF	; 255
     b18:	ef ef       	ldi	r30, 0xFF	; 255
     b1a:	3e 07       	cpc	r19, r30
     b1c:	ef ef       	ldi	r30, 0xFF	; 255
     b1e:	4e 07       	cpc	r20, r30
     b20:	ef e3       	ldi	r30, 0x3F	; 63
     b22:	5e 07       	cpc	r21, r30
     b24:	08 f3       	brcs	.-62     	; 0xae8 <_fpadd_parts+0x1e6>
     b26:	0b c0       	rjmp	.+22     	; 0xb3e <_fpadd_parts+0x23c>
     b28:	89 83       	std	Y+1, r24	; 0x01
     b2a:	db 82       	std	Y+3, r13	; 0x03
     b2c:	ca 82       	std	Y+2, r12	; 0x02
     b2e:	2e 0d       	add	r18, r14
     b30:	3f 1d       	adc	r19, r15
     b32:	40 1f       	adc	r20, r16
     b34:	51 1f       	adc	r21, r17
     b36:	2c 83       	std	Y+4, r18	; 0x04
     b38:	3d 83       	std	Y+5, r19	; 0x05
     b3a:	4e 83       	std	Y+6, r20	; 0x06
     b3c:	5f 83       	std	Y+7, r21	; 0x07
     b3e:	83 e0       	ldi	r24, 0x03	; 3
     b40:	88 83       	st	Y, r24
     b42:	2c 81       	ldd	r18, Y+4	; 0x04
     b44:	3d 81       	ldd	r19, Y+5	; 0x05
     b46:	4e 81       	ldd	r20, Y+6	; 0x06
     b48:	5f 81       	ldd	r21, Y+7	; 0x07
     b4a:	57 ff       	sbrs	r21, 7
     b4c:	1d c0       	rjmp	.+58     	; 0xb88 <_fpadd_parts+0x286>
     b4e:	da 01       	movw	r26, r20
     b50:	c9 01       	movw	r24, r18
     b52:	81 70       	andi	r24, 0x01	; 1
     b54:	90 70       	andi	r25, 0x00	; 0
     b56:	a0 70       	andi	r26, 0x00	; 0
     b58:	b0 70       	andi	r27, 0x00	; 0
     b5a:	56 95       	lsr	r21
     b5c:	47 95       	ror	r20
     b5e:	37 95       	ror	r19
     b60:	27 95       	ror	r18
     b62:	82 2b       	or	r24, r18
     b64:	93 2b       	or	r25, r19
     b66:	a4 2b       	or	r26, r20
     b68:	b5 2b       	or	r27, r21
     b6a:	8c 83       	std	Y+4, r24	; 0x04
     b6c:	9d 83       	std	Y+5, r25	; 0x05
     b6e:	ae 83       	std	Y+6, r26	; 0x06
     b70:	bf 83       	std	Y+7, r27	; 0x07
     b72:	8a 81       	ldd	r24, Y+2	; 0x02
     b74:	9b 81       	ldd	r25, Y+3	; 0x03
     b76:	01 96       	adiw	r24, 0x01	; 1
     b78:	9b 83       	std	Y+3, r25	; 0x03
     b7a:	8a 83       	std	Y+2, r24	; 0x02
     b7c:	05 c0       	rjmp	.+10     	; 0xb88 <_fpadd_parts+0x286>
     b7e:	e3 e0       	ldi	r30, 0x03	; 3
     b80:	f1 e0       	ldi	r31, 0x01	; 1
     b82:	03 c0       	rjmp	.+6      	; 0xb8a <_fpadd_parts+0x288>
     b84:	fb 01       	movw	r30, r22
     b86:	01 c0       	rjmp	.+2      	; 0xb8a <_fpadd_parts+0x288>
     b88:	fe 01       	movw	r30, r28
     b8a:	cf 01       	movw	r24, r30
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	ee e0       	ldi	r30, 0x0E	; 14
     b92:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <__epilogue_restores__+0x8>

00000b96 <__addsf3>:
     b96:	a0 e2       	ldi	r26, 0x20	; 32
     b98:	b0 e0       	ldi	r27, 0x00	; 0
     b9a:	e1 ed       	ldi	r30, 0xD1	; 209
     b9c:	f5 e0       	ldi	r31, 0x05	; 5
     b9e:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__prologue_saves__+0x18>
     ba2:	69 83       	std	Y+1, r22	; 0x01
     ba4:	7a 83       	std	Y+2, r23	; 0x02
     ba6:	8b 83       	std	Y+3, r24	; 0x03
     ba8:	9c 83       	std	Y+4, r25	; 0x04
     baa:	2d 83       	std	Y+5, r18	; 0x05
     bac:	3e 83       	std	Y+6, r19	; 0x06
     bae:	4f 83       	std	Y+7, r20	; 0x07
     bb0:	58 87       	std	Y+8, r21	; 0x08
     bb2:	89 e0       	ldi	r24, 0x09	; 9
     bb4:	e8 2e       	mov	r14, r24
     bb6:	f1 2c       	mov	r15, r1
     bb8:	ec 0e       	add	r14, r28
     bba:	fd 1e       	adc	r15, r29
     bbc:	ce 01       	movw	r24, r28
     bbe:	01 96       	adiw	r24, 0x01	; 1
     bc0:	b7 01       	movw	r22, r14
     bc2:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     bc6:	8e 01       	movw	r16, r28
     bc8:	0f 5e       	subi	r16, 0xEF	; 239
     bca:	1f 4f       	sbci	r17, 0xFF	; 255
     bcc:	ce 01       	movw	r24, r28
     bce:	05 96       	adiw	r24, 0x05	; 5
     bd0:	b8 01       	movw	r22, r16
     bd2:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     bd6:	c7 01       	movw	r24, r14
     bd8:	b8 01       	movw	r22, r16
     bda:	ae 01       	movw	r20, r28
     bdc:	47 5e       	subi	r20, 0xE7	; 231
     bde:	5f 4f       	sbci	r21, 0xFF	; 255
     be0:	0e 94 81 04 	call	0x902	; 0x902 <_fpadd_parts>
     be4:	0e 94 b3 08 	call	0x1166	; 0x1166 <__pack_f>
     be8:	a0 96       	adiw	r28, 0x20	; 32
     bea:	e6 e0       	ldi	r30, 0x06	; 6
     bec:	0c 94 6b 0a 	jmp	0x14d6	; 0x14d6 <__epilogue_restores__+0x18>

00000bf0 <__subsf3>:
     bf0:	a0 e2       	ldi	r26, 0x20	; 32
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	ee ef       	ldi	r30, 0xFE	; 254
     bf6:	f5 e0       	ldi	r31, 0x05	; 5
     bf8:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__prologue_saves__+0x18>
     bfc:	69 83       	std	Y+1, r22	; 0x01
     bfe:	7a 83       	std	Y+2, r23	; 0x02
     c00:	8b 83       	std	Y+3, r24	; 0x03
     c02:	9c 83       	std	Y+4, r25	; 0x04
     c04:	2d 83       	std	Y+5, r18	; 0x05
     c06:	3e 83       	std	Y+6, r19	; 0x06
     c08:	4f 83       	std	Y+7, r20	; 0x07
     c0a:	58 87       	std	Y+8, r21	; 0x08
     c0c:	8e 01       	movw	r16, r28
     c0e:	07 5f       	subi	r16, 0xF7	; 247
     c10:	1f 4f       	sbci	r17, 0xFF	; 255
     c12:	ce 01       	movw	r24, r28
     c14:	01 96       	adiw	r24, 0x01	; 1
     c16:	b8 01       	movw	r22, r16
     c18:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     c1c:	91 e1       	ldi	r25, 0x11	; 17
     c1e:	e9 2e       	mov	r14, r25
     c20:	f1 2c       	mov	r15, r1
     c22:	ec 0e       	add	r14, r28
     c24:	fd 1e       	adc	r15, r29
     c26:	ce 01       	movw	r24, r28
     c28:	05 96       	adiw	r24, 0x05	; 5
     c2a:	b7 01       	movw	r22, r14
     c2c:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     c30:	8a 89       	ldd	r24, Y+18	; 0x12
     c32:	91 e0       	ldi	r25, 0x01	; 1
     c34:	89 27       	eor	r24, r25
     c36:	8a 8b       	std	Y+18, r24	; 0x12
     c38:	c8 01       	movw	r24, r16
     c3a:	b7 01       	movw	r22, r14
     c3c:	ae 01       	movw	r20, r28
     c3e:	47 5e       	subi	r20, 0xE7	; 231
     c40:	5f 4f       	sbci	r21, 0xFF	; 255
     c42:	0e 94 81 04 	call	0x902	; 0x902 <_fpadd_parts>
     c46:	0e 94 b3 08 	call	0x1166	; 0x1166 <__pack_f>
     c4a:	a0 96       	adiw	r28, 0x20	; 32
     c4c:	e6 e0       	ldi	r30, 0x06	; 6
     c4e:	0c 94 6b 0a 	jmp	0x14d6	; 0x14d6 <__epilogue_restores__+0x18>

00000c52 <__mulsf3>:
     c52:	a0 e2       	ldi	r26, 0x20	; 32
     c54:	b0 e0       	ldi	r27, 0x00	; 0
     c56:	ef e2       	ldi	r30, 0x2F	; 47
     c58:	f6 e0       	ldi	r31, 0x06	; 6
     c5a:	0c 94 43 0a 	jmp	0x1486	; 0x1486 <__prologue_saves__>
     c5e:	69 83       	std	Y+1, r22	; 0x01
     c60:	7a 83       	std	Y+2, r23	; 0x02
     c62:	8b 83       	std	Y+3, r24	; 0x03
     c64:	9c 83       	std	Y+4, r25	; 0x04
     c66:	2d 83       	std	Y+5, r18	; 0x05
     c68:	3e 83       	std	Y+6, r19	; 0x06
     c6a:	4f 83       	std	Y+7, r20	; 0x07
     c6c:	58 87       	std	Y+8, r21	; 0x08
     c6e:	ce 01       	movw	r24, r28
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	be 01       	movw	r22, r28
     c74:	67 5f       	subi	r22, 0xF7	; 247
     c76:	7f 4f       	sbci	r23, 0xFF	; 255
     c78:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     c7c:	ce 01       	movw	r24, r28
     c7e:	05 96       	adiw	r24, 0x05	; 5
     c80:	be 01       	movw	r22, r28
     c82:	6f 5e       	subi	r22, 0xEF	; 239
     c84:	7f 4f       	sbci	r23, 0xFF	; 255
     c86:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     c8a:	99 85       	ldd	r25, Y+9	; 0x09
     c8c:	92 30       	cpi	r25, 0x02	; 2
     c8e:	78 f0       	brcs	.+30     	; 0xcae <__mulsf3+0x5c>
     c90:	89 89       	ldd	r24, Y+17	; 0x11
     c92:	82 30       	cpi	r24, 0x02	; 2
     c94:	c0 f0       	brcs	.+48     	; 0xcc6 <__mulsf3+0x74>
     c96:	94 30       	cpi	r25, 0x04	; 4
     c98:	19 f4       	brne	.+6      	; 0xca0 <__mulsf3+0x4e>
     c9a:	82 30       	cpi	r24, 0x02	; 2
     c9c:	41 f4       	brne	.+16     	; 0xcae <__mulsf3+0x5c>
     c9e:	cb c0       	rjmp	.+406    	; 0xe36 <__mulsf3+0x1e4>
     ca0:	84 30       	cpi	r24, 0x04	; 4
     ca2:	19 f4       	brne	.+6      	; 0xcaa <__mulsf3+0x58>
     ca4:	92 30       	cpi	r25, 0x02	; 2
     ca6:	79 f4       	brne	.+30     	; 0xcc6 <__mulsf3+0x74>
     ca8:	c6 c0       	rjmp	.+396    	; 0xe36 <__mulsf3+0x1e4>
     caa:	92 30       	cpi	r25, 0x02	; 2
     cac:	51 f4       	brne	.+20     	; 0xcc2 <__mulsf3+0x70>
     cae:	81 e0       	ldi	r24, 0x01	; 1
     cb0:	2a 85       	ldd	r18, Y+10	; 0x0a
     cb2:	9a 89       	ldd	r25, Y+18	; 0x12
     cb4:	29 17       	cp	r18, r25
     cb6:	09 f4       	brne	.+2      	; 0xcba <__mulsf3+0x68>
     cb8:	80 e0       	ldi	r24, 0x00	; 0
     cba:	8a 87       	std	Y+10, r24	; 0x0a
     cbc:	ce 01       	movw	r24, r28
     cbe:	09 96       	adiw	r24, 0x09	; 9
     cc0:	bc c0       	rjmp	.+376    	; 0xe3a <__mulsf3+0x1e8>
     cc2:	82 30       	cpi	r24, 0x02	; 2
     cc4:	51 f4       	brne	.+20     	; 0xcda <__mulsf3+0x88>
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	2a 85       	ldd	r18, Y+10	; 0x0a
     cca:	9a 89       	ldd	r25, Y+18	; 0x12
     ccc:	29 17       	cp	r18, r25
     cce:	09 f4       	brne	.+2      	; 0xcd2 <__mulsf3+0x80>
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	8a 8b       	std	Y+18, r24	; 0x12
     cd4:	ce 01       	movw	r24, r28
     cd6:	41 96       	adiw	r24, 0x11	; 17
     cd8:	b0 c0       	rjmp	.+352    	; 0xe3a <__mulsf3+0x1e8>
     cda:	6d 84       	ldd	r6, Y+13	; 0x0d
     cdc:	7e 84       	ldd	r7, Y+14	; 0x0e
     cde:	8f 84       	ldd	r8, Y+15	; 0x0f
     ce0:	98 88       	ldd	r9, Y+16	; 0x10
     ce2:	ed 88       	ldd	r14, Y+21	; 0x15
     ce4:	fe 88       	ldd	r15, Y+22	; 0x16
     ce6:	0f 89       	ldd	r16, Y+23	; 0x17
     ce8:	18 8d       	ldd	r17, Y+24	; 0x18
     cea:	e0 e2       	ldi	r30, 0x20	; 32
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	dc 01       	movw	r26, r24
     cf4:	aa 24       	eor	r10, r10
     cf6:	bb 24       	eor	r11, r11
     cf8:	65 01       	movw	r12, r10
     cfa:	20 e0       	ldi	r18, 0x00	; 0
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	a9 01       	movw	r20, r18
     d00:	b3 01       	movw	r22, r6
     d02:	61 70       	andi	r22, 0x01	; 1
     d04:	70 70       	andi	r23, 0x00	; 0
     d06:	61 15       	cp	r22, r1
     d08:	71 05       	cpc	r23, r1
     d0a:	d1 f0       	breq	.+52     	; 0xd40 <__mulsf3+0xee>
     d0c:	2e 0d       	add	r18, r14
     d0e:	3f 1d       	adc	r19, r15
     d10:	40 1f       	adc	r20, r16
     d12:	51 1f       	adc	r21, r17
     d14:	15 01       	movw	r2, r10
     d16:	26 01       	movw	r4, r12
     d18:	28 0e       	add	r2, r24
     d1a:	39 1e       	adc	r3, r25
     d1c:	4a 1e       	adc	r4, r26
     d1e:	5b 1e       	adc	r5, r27
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	a0 e0       	ldi	r26, 0x00	; 0
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	2e 15       	cp	r18, r14
     d2a:	3f 05       	cpc	r19, r15
     d2c:	40 07       	cpc	r20, r16
     d2e:	51 07       	cpc	r21, r17
     d30:	18 f0       	brcs	.+6      	; 0xd38 <__mulsf3+0xe6>
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	dc 01       	movw	r26, r24
     d38:	82 0d       	add	r24, r2
     d3a:	93 1d       	adc	r25, r3
     d3c:	a4 1d       	adc	r26, r4
     d3e:	b5 1d       	adc	r27, r5
     d40:	aa 0c       	add	r10, r10
     d42:	bb 1c       	adc	r11, r11
     d44:	cc 1c       	adc	r12, r12
     d46:	dd 1c       	adc	r13, r13
     d48:	17 ff       	sbrs	r17, 7
     d4a:	09 c0       	rjmp	.+18     	; 0xd5e <__mulsf3+0x10c>
     d4c:	61 e0       	ldi	r22, 0x01	; 1
     d4e:	26 2e       	mov	r2, r22
     d50:	31 2c       	mov	r3, r1
     d52:	41 2c       	mov	r4, r1
     d54:	51 2c       	mov	r5, r1
     d56:	a2 28       	or	r10, r2
     d58:	b3 28       	or	r11, r3
     d5a:	c4 28       	or	r12, r4
     d5c:	d5 28       	or	r13, r5
     d5e:	31 97       	sbiw	r30, 0x01	; 1
     d60:	49 f0       	breq	.+18     	; 0xd74 <__mulsf3+0x122>
     d62:	ee 0c       	add	r14, r14
     d64:	ff 1c       	adc	r15, r15
     d66:	00 1f       	adc	r16, r16
     d68:	11 1f       	adc	r17, r17
     d6a:	96 94       	lsr	r9
     d6c:	87 94       	ror	r8
     d6e:	77 94       	ror	r7
     d70:	67 94       	ror	r6
     d72:	c6 cf       	rjmp	.-116    	; 0xd00 <__mulsf3+0xae>
     d74:	6b 89       	ldd	r22, Y+19	; 0x13
     d76:	7c 89       	ldd	r23, Y+20	; 0x14
     d78:	eb 85       	ldd	r30, Y+11	; 0x0b
     d7a:	fc 85       	ldd	r31, Y+12	; 0x0c
     d7c:	6e 0f       	add	r22, r30
     d7e:	7f 1f       	adc	r23, r31
     d80:	6e 5f       	subi	r22, 0xFE	; 254
     d82:	7f 4f       	sbci	r23, 0xFF	; 255
     d84:	7c 8f       	std	Y+28, r23	; 0x1c
     d86:	6b 8f       	std	Y+27, r22	; 0x1b
     d88:	61 e0       	ldi	r22, 0x01	; 1
     d8a:	ea 85       	ldd	r30, Y+10	; 0x0a
     d8c:	7a 89       	ldd	r23, Y+18	; 0x12
     d8e:	e7 17       	cp	r30, r23
     d90:	09 f4       	brne	.+2      	; 0xd94 <__mulsf3+0x142>
     d92:	60 e0       	ldi	r22, 0x00	; 0
     d94:	6a 8f       	std	Y+26, r22	; 0x1a
     d96:	6b 8d       	ldd	r22, Y+27	; 0x1b
     d98:	7c 8d       	ldd	r23, Y+28	; 0x1c
     d9a:	10 c0       	rjmp	.+32     	; 0xdbc <__mulsf3+0x16a>
     d9c:	fc 01       	movw	r30, r24
     d9e:	e1 70       	andi	r30, 0x01	; 1
     da0:	f0 70       	andi	r31, 0x00	; 0
     da2:	30 97       	sbiw	r30, 0x00	; 0
     da4:	29 f0       	breq	.+10     	; 0xdb0 <__mulsf3+0x15e>
     da6:	56 95       	lsr	r21
     da8:	47 95       	ror	r20
     daa:	37 95       	ror	r19
     dac:	27 95       	ror	r18
     dae:	50 68       	ori	r21, 0x80	; 128
     db0:	b6 95       	lsr	r27
     db2:	a7 95       	ror	r26
     db4:	97 95       	ror	r25
     db6:	87 95       	ror	r24
     db8:	6f 5f       	subi	r22, 0xFF	; 255
     dba:	7f 4f       	sbci	r23, 0xFF	; 255
     dbc:	b7 fd       	sbrc	r27, 7
     dbe:	ee cf       	rjmp	.-36     	; 0xd9c <__mulsf3+0x14a>
     dc0:	0c c0       	rjmp	.+24     	; 0xdda <__mulsf3+0x188>
     dc2:	88 0f       	add	r24, r24
     dc4:	99 1f       	adc	r25, r25
     dc6:	aa 1f       	adc	r26, r26
     dc8:	bb 1f       	adc	r27, r27
     dca:	57 fd       	sbrc	r21, 7
     dcc:	81 60       	ori	r24, 0x01	; 1
     dce:	22 0f       	add	r18, r18
     dd0:	33 1f       	adc	r19, r19
     dd2:	44 1f       	adc	r20, r20
     dd4:	55 1f       	adc	r21, r21
     dd6:	61 50       	subi	r22, 0x01	; 1
     dd8:	70 40       	sbci	r23, 0x00	; 0
     dda:	80 30       	cpi	r24, 0x00	; 0
     ddc:	e0 e0       	ldi	r30, 0x00	; 0
     dde:	9e 07       	cpc	r25, r30
     de0:	e0 e0       	ldi	r30, 0x00	; 0
     de2:	ae 07       	cpc	r26, r30
     de4:	e0 e4       	ldi	r30, 0x40	; 64
     de6:	be 07       	cpc	r27, r30
     de8:	60 f3       	brcs	.-40     	; 0xdc2 <__mulsf3+0x170>
     dea:	6b 8f       	std	Y+27, r22	; 0x1b
     dec:	7c 8f       	std	Y+28, r23	; 0x1c
     dee:	6f e7       	ldi	r22, 0x7F	; 127
     df0:	e6 2e       	mov	r14, r22
     df2:	f1 2c       	mov	r15, r1
     df4:	01 2d       	mov	r16, r1
     df6:	11 2d       	mov	r17, r1
     df8:	e8 22       	and	r14, r24
     dfa:	f9 22       	and	r15, r25
     dfc:	0a 23       	and	r16, r26
     dfe:	1b 23       	and	r17, r27
     e00:	60 e4       	ldi	r22, 0x40	; 64
     e02:	e6 16       	cp	r14, r22
     e04:	f1 04       	cpc	r15, r1
     e06:	01 05       	cpc	r16, r1
     e08:	11 05       	cpc	r17, r1
     e0a:	61 f4       	brne	.+24     	; 0xe24 <__mulsf3+0x1d2>
     e0c:	87 fd       	sbrc	r24, 7
     e0e:	0a c0       	rjmp	.+20     	; 0xe24 <__mulsf3+0x1d2>
     e10:	21 15       	cp	r18, r1
     e12:	31 05       	cpc	r19, r1
     e14:	41 05       	cpc	r20, r1
     e16:	51 05       	cpc	r21, r1
     e18:	29 f0       	breq	.+10     	; 0xe24 <__mulsf3+0x1d2>
     e1a:	80 5c       	subi	r24, 0xC0	; 192
     e1c:	9f 4f       	sbci	r25, 0xFF	; 255
     e1e:	af 4f       	sbci	r26, 0xFF	; 255
     e20:	bf 4f       	sbci	r27, 0xFF	; 255
     e22:	80 78       	andi	r24, 0x80	; 128
     e24:	8d 8f       	std	Y+29, r24	; 0x1d
     e26:	9e 8f       	std	Y+30, r25	; 0x1e
     e28:	af 8f       	std	Y+31, r26	; 0x1f
     e2a:	b8 a3       	std	Y+32, r27	; 0x20
     e2c:	83 e0       	ldi	r24, 0x03	; 3
     e2e:	89 8f       	std	Y+25, r24	; 0x19
     e30:	ce 01       	movw	r24, r28
     e32:	49 96       	adiw	r24, 0x19	; 25
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <__mulsf3+0x1e8>
     e36:	83 e0       	ldi	r24, 0x03	; 3
     e38:	91 e0       	ldi	r25, 0x01	; 1
     e3a:	0e 94 b3 08 	call	0x1166	; 0x1166 <__pack_f>
     e3e:	a0 96       	adiw	r28, 0x20	; 32
     e40:	e2 e1       	ldi	r30, 0x12	; 18
     e42:	0c 94 5f 0a 	jmp	0x14be	; 0x14be <__epilogue_restores__>

00000e46 <__divsf3>:
     e46:	a8 e1       	ldi	r26, 0x18	; 24
     e48:	b0 e0       	ldi	r27, 0x00	; 0
     e4a:	e9 e2       	ldi	r30, 0x29	; 41
     e4c:	f7 e0       	ldi	r31, 0x07	; 7
     e4e:	0c 94 4b 0a 	jmp	0x1496	; 0x1496 <__prologue_saves__+0x10>
     e52:	69 83       	std	Y+1, r22	; 0x01
     e54:	7a 83       	std	Y+2, r23	; 0x02
     e56:	8b 83       	std	Y+3, r24	; 0x03
     e58:	9c 83       	std	Y+4, r25	; 0x04
     e5a:	2d 83       	std	Y+5, r18	; 0x05
     e5c:	3e 83       	std	Y+6, r19	; 0x06
     e5e:	4f 83       	std	Y+7, r20	; 0x07
     e60:	58 87       	std	Y+8, r21	; 0x08
     e62:	8e 01       	movw	r16, r28
     e64:	07 5f       	subi	r16, 0xF7	; 247
     e66:	1f 4f       	sbci	r17, 0xFF	; 255
     e68:	ce 01       	movw	r24, r28
     e6a:	01 96       	adiw	r24, 0x01	; 1
     e6c:	b8 01       	movw	r22, r16
     e6e:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     e72:	81 e1       	ldi	r24, 0x11	; 17
     e74:	e8 2e       	mov	r14, r24
     e76:	f1 2c       	mov	r15, r1
     e78:	ec 0e       	add	r14, r28
     e7a:	fd 1e       	adc	r15, r29
     e7c:	ce 01       	movw	r24, r28
     e7e:	05 96       	adiw	r24, 0x05	; 5
     e80:	b7 01       	movw	r22, r14
     e82:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     e86:	99 85       	ldd	r25, Y+9	; 0x09
     e88:	92 30       	cpi	r25, 0x02	; 2
     e8a:	08 f4       	brcc	.+2      	; 0xe8e <__divsf3+0x48>
     e8c:	83 c0       	rjmp	.+262    	; 0xf94 <__divsf3+0x14e>
     e8e:	89 89       	ldd	r24, Y+17	; 0x11
     e90:	82 30       	cpi	r24, 0x02	; 2
     e92:	08 f4       	brcc	.+2      	; 0xe96 <__divsf3+0x50>
     e94:	7b c0       	rjmp	.+246    	; 0xf8c <__divsf3+0x146>
     e96:	2a 85       	ldd	r18, Y+10	; 0x0a
     e98:	3a 89       	ldd	r19, Y+18	; 0x12
     e9a:	23 27       	eor	r18, r19
     e9c:	2a 87       	std	Y+10, r18	; 0x0a
     e9e:	94 30       	cpi	r25, 0x04	; 4
     ea0:	11 f0       	breq	.+4      	; 0xea6 <__divsf3+0x60>
     ea2:	92 30       	cpi	r25, 0x02	; 2
     ea4:	21 f4       	brne	.+8      	; 0xeae <__divsf3+0x68>
     ea6:	98 17       	cp	r25, r24
     ea8:	09 f0       	breq	.+2      	; 0xeac <__divsf3+0x66>
     eaa:	6c c0       	rjmp	.+216    	; 0xf84 <__divsf3+0x13e>
     eac:	71 c0       	rjmp	.+226    	; 0xf90 <__divsf3+0x14a>
     eae:	84 30       	cpi	r24, 0x04	; 4
     eb0:	39 f4       	brne	.+14     	; 0xec0 <__divsf3+0x7a>
     eb2:	1d 86       	std	Y+13, r1	; 0x0d
     eb4:	1e 86       	std	Y+14, r1	; 0x0e
     eb6:	1f 86       	std	Y+15, r1	; 0x0f
     eb8:	18 8a       	std	Y+16, r1	; 0x10
     eba:	1c 86       	std	Y+12, r1	; 0x0c
     ebc:	1b 86       	std	Y+11, r1	; 0x0b
     ebe:	6a c0       	rjmp	.+212    	; 0xf94 <__divsf3+0x14e>
     ec0:	82 30       	cpi	r24, 0x02	; 2
     ec2:	19 f4       	brne	.+6      	; 0xeca <__divsf3+0x84>
     ec4:	84 e0       	ldi	r24, 0x04	; 4
     ec6:	89 87       	std	Y+9, r24	; 0x09
     ec8:	65 c0       	rjmp	.+202    	; 0xf94 <__divsf3+0x14e>
     eca:	8b 85       	ldd	r24, Y+11	; 0x0b
     ecc:	9c 85       	ldd	r25, Y+12	; 0x0c
     ece:	2b 89       	ldd	r18, Y+19	; 0x13
     ed0:	3c 89       	ldd	r19, Y+20	; 0x14
     ed2:	82 1b       	sub	r24, r18
     ed4:	93 0b       	sbc	r25, r19
     ed6:	9c 87       	std	Y+12, r25	; 0x0c
     ed8:	8b 87       	std	Y+11, r24	; 0x0b
     eda:	2d 85       	ldd	r18, Y+13	; 0x0d
     edc:	3e 85       	ldd	r19, Y+14	; 0x0e
     ede:	4f 85       	ldd	r20, Y+15	; 0x0f
     ee0:	58 89       	ldd	r21, Y+16	; 0x10
     ee2:	ed 88       	ldd	r14, Y+21	; 0x15
     ee4:	fe 88       	ldd	r15, Y+22	; 0x16
     ee6:	0f 89       	ldd	r16, Y+23	; 0x17
     ee8:	18 8d       	ldd	r17, Y+24	; 0x18
     eea:	2e 15       	cp	r18, r14
     eec:	3f 05       	cpc	r19, r15
     eee:	40 07       	cpc	r20, r16
     ef0:	51 07       	cpc	r21, r17
     ef2:	38 f4       	brcc	.+14     	; 0xf02 <__divsf3+0xbc>
     ef4:	22 0f       	add	r18, r18
     ef6:	33 1f       	adc	r19, r19
     ef8:	44 1f       	adc	r20, r20
     efa:	55 1f       	adc	r21, r21
     efc:	01 97       	sbiw	r24, 0x01	; 1
     efe:	9c 87       	std	Y+12, r25	; 0x0c
     f00:	8b 87       	std	Y+11, r24	; 0x0b
     f02:	6f e1       	ldi	r22, 0x1F	; 31
     f04:	70 e0       	ldi	r23, 0x00	; 0
     f06:	a1 2c       	mov	r10, r1
     f08:	b1 2c       	mov	r11, r1
     f0a:	c1 2c       	mov	r12, r1
     f0c:	a0 e4       	ldi	r26, 0x40	; 64
     f0e:	da 2e       	mov	r13, r26
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	dc 01       	movw	r26, r24
     f16:	2e 15       	cp	r18, r14
     f18:	3f 05       	cpc	r19, r15
     f1a:	40 07       	cpc	r20, r16
     f1c:	51 07       	cpc	r21, r17
     f1e:	40 f0       	brcs	.+16     	; 0xf30 <__divsf3+0xea>
     f20:	8a 29       	or	r24, r10
     f22:	9b 29       	or	r25, r11
     f24:	ac 29       	or	r26, r12
     f26:	bd 29       	or	r27, r13
     f28:	2e 19       	sub	r18, r14
     f2a:	3f 09       	sbc	r19, r15
     f2c:	40 0b       	sbc	r20, r16
     f2e:	51 0b       	sbc	r21, r17
     f30:	d6 94       	lsr	r13
     f32:	c7 94       	ror	r12
     f34:	b7 94       	ror	r11
     f36:	a7 94       	ror	r10
     f38:	22 0f       	add	r18, r18
     f3a:	33 1f       	adc	r19, r19
     f3c:	44 1f       	adc	r20, r20
     f3e:	55 1f       	adc	r21, r21
     f40:	61 50       	subi	r22, 0x01	; 1
     f42:	70 40       	sbci	r23, 0x00	; 0
     f44:	41 f7       	brne	.-48     	; 0xf16 <__divsf3+0xd0>
     f46:	6f e7       	ldi	r22, 0x7F	; 127
     f48:	e6 2e       	mov	r14, r22
     f4a:	f1 2c       	mov	r15, r1
     f4c:	01 2d       	mov	r16, r1
     f4e:	11 2d       	mov	r17, r1
     f50:	e8 22       	and	r14, r24
     f52:	f9 22       	and	r15, r25
     f54:	0a 23       	and	r16, r26
     f56:	1b 23       	and	r17, r27
     f58:	60 e4       	ldi	r22, 0x40	; 64
     f5a:	e6 16       	cp	r14, r22
     f5c:	f1 04       	cpc	r15, r1
     f5e:	01 05       	cpc	r16, r1
     f60:	11 05       	cpc	r17, r1
     f62:	61 f4       	brne	.+24     	; 0xf7c <__divsf3+0x136>
     f64:	87 fd       	sbrc	r24, 7
     f66:	0a c0       	rjmp	.+20     	; 0xf7c <__divsf3+0x136>
     f68:	21 15       	cp	r18, r1
     f6a:	31 05       	cpc	r19, r1
     f6c:	41 05       	cpc	r20, r1
     f6e:	51 05       	cpc	r21, r1
     f70:	29 f0       	breq	.+10     	; 0xf7c <__divsf3+0x136>
     f72:	80 5c       	subi	r24, 0xC0	; 192
     f74:	9f 4f       	sbci	r25, 0xFF	; 255
     f76:	af 4f       	sbci	r26, 0xFF	; 255
     f78:	bf 4f       	sbci	r27, 0xFF	; 255
     f7a:	80 78       	andi	r24, 0x80	; 128
     f7c:	8d 87       	std	Y+13, r24	; 0x0d
     f7e:	9e 87       	std	Y+14, r25	; 0x0e
     f80:	af 87       	std	Y+15, r26	; 0x0f
     f82:	b8 8b       	std	Y+16, r27	; 0x10
     f84:	8e 01       	movw	r16, r28
     f86:	07 5f       	subi	r16, 0xF7	; 247
     f88:	1f 4f       	sbci	r17, 0xFF	; 255
     f8a:	04 c0       	rjmp	.+8      	; 0xf94 <__divsf3+0x14e>
     f8c:	87 01       	movw	r16, r14
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <__divsf3+0x14e>
     f90:	03 e0       	ldi	r16, 0x03	; 3
     f92:	11 e0       	ldi	r17, 0x01	; 1
     f94:	c8 01       	movw	r24, r16
     f96:	0e 94 b3 08 	call	0x1166	; 0x1166 <__pack_f>
     f9a:	68 96       	adiw	r28, 0x18	; 24
     f9c:	ea e0       	ldi	r30, 0x0A	; 10
     f9e:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <__epilogue_restores__+0x10>

00000fa2 <__gtsf2>:
     fa2:	a8 e1       	ldi	r26, 0x18	; 24
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	e7 ed       	ldi	r30, 0xD7	; 215
     fa8:	f7 e0       	ldi	r31, 0x07	; 7
     faa:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__prologue_saves__+0x18>
     fae:	69 83       	std	Y+1, r22	; 0x01
     fb0:	7a 83       	std	Y+2, r23	; 0x02
     fb2:	8b 83       	std	Y+3, r24	; 0x03
     fb4:	9c 83       	std	Y+4, r25	; 0x04
     fb6:	2d 83       	std	Y+5, r18	; 0x05
     fb8:	3e 83       	std	Y+6, r19	; 0x06
     fba:	4f 83       	std	Y+7, r20	; 0x07
     fbc:	58 87       	std	Y+8, r21	; 0x08
     fbe:	8e 01       	movw	r16, r28
     fc0:	07 5f       	subi	r16, 0xF7	; 247
     fc2:	1f 4f       	sbci	r17, 0xFF	; 255
     fc4:	ce 01       	movw	r24, r28
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	b8 01       	movw	r22, r16
     fca:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     fce:	81 e1       	ldi	r24, 0x11	; 17
     fd0:	e8 2e       	mov	r14, r24
     fd2:	f1 2c       	mov	r15, r1
     fd4:	ec 0e       	add	r14, r28
     fd6:	fd 1e       	adc	r15, r29
     fd8:	ce 01       	movw	r24, r28
     fda:	05 96       	adiw	r24, 0x05	; 5
     fdc:	b7 01       	movw	r22, r14
     fde:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
     fe2:	89 85       	ldd	r24, Y+9	; 0x09
     fe4:	82 30       	cpi	r24, 0x02	; 2
     fe6:	40 f0       	brcs	.+16     	; 0xff8 <__gtsf2+0x56>
     fe8:	89 89       	ldd	r24, Y+17	; 0x11
     fea:	82 30       	cpi	r24, 0x02	; 2
     fec:	28 f0       	brcs	.+10     	; 0xff8 <__gtsf2+0x56>
     fee:	c8 01       	movw	r24, r16
     ff0:	b7 01       	movw	r22, r14
     ff2:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__fpcmp_parts_f>
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <__gtsf2+0x58>
     ff8:	8f ef       	ldi	r24, 0xFF	; 255
     ffa:	68 96       	adiw	r28, 0x18	; 24
     ffc:	e6 e0       	ldi	r30, 0x06	; 6
     ffe:	0c 94 6b 0a 	jmp	0x14d6	; 0x14d6 <__epilogue_restores__+0x18>

00001002 <__gesf2>:
    1002:	a8 e1       	ldi	r26, 0x18	; 24
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	e7 e0       	ldi	r30, 0x07	; 7
    1008:	f8 e0       	ldi	r31, 0x08	; 8
    100a:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__prologue_saves__+0x18>
    100e:	69 83       	std	Y+1, r22	; 0x01
    1010:	7a 83       	std	Y+2, r23	; 0x02
    1012:	8b 83       	std	Y+3, r24	; 0x03
    1014:	9c 83       	std	Y+4, r25	; 0x04
    1016:	2d 83       	std	Y+5, r18	; 0x05
    1018:	3e 83       	std	Y+6, r19	; 0x06
    101a:	4f 83       	std	Y+7, r20	; 0x07
    101c:	58 87       	std	Y+8, r21	; 0x08
    101e:	8e 01       	movw	r16, r28
    1020:	07 5f       	subi	r16, 0xF7	; 247
    1022:	1f 4f       	sbci	r17, 0xFF	; 255
    1024:	ce 01       	movw	r24, r28
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	b8 01       	movw	r22, r16
    102a:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
    102e:	81 e1       	ldi	r24, 0x11	; 17
    1030:	e8 2e       	mov	r14, r24
    1032:	f1 2c       	mov	r15, r1
    1034:	ec 0e       	add	r14, r28
    1036:	fd 1e       	adc	r15, r29
    1038:	ce 01       	movw	r24, r28
    103a:	05 96       	adiw	r24, 0x05	; 5
    103c:	b7 01       	movw	r22, r14
    103e:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
    1042:	89 85       	ldd	r24, Y+9	; 0x09
    1044:	82 30       	cpi	r24, 0x02	; 2
    1046:	40 f0       	brcs	.+16     	; 0x1058 <__gesf2+0x56>
    1048:	89 89       	ldd	r24, Y+17	; 0x11
    104a:	82 30       	cpi	r24, 0x02	; 2
    104c:	28 f0       	brcs	.+10     	; 0x1058 <__gesf2+0x56>
    104e:	c8 01       	movw	r24, r16
    1050:	b7 01       	movw	r22, r14
    1052:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__fpcmp_parts_f>
    1056:	01 c0       	rjmp	.+2      	; 0x105a <__gesf2+0x58>
    1058:	8f ef       	ldi	r24, 0xFF	; 255
    105a:	68 96       	adiw	r28, 0x18	; 24
    105c:	e6 e0       	ldi	r30, 0x06	; 6
    105e:	0c 94 6b 0a 	jmp	0x14d6	; 0x14d6 <__epilogue_restores__+0x18>

00001062 <__ltsf2>:
    1062:	a8 e1       	ldi	r26, 0x18	; 24
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e7 e3       	ldi	r30, 0x37	; 55
    1068:	f8 e0       	ldi	r31, 0x08	; 8
    106a:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__prologue_saves__+0x18>
    106e:	69 83       	std	Y+1, r22	; 0x01
    1070:	7a 83       	std	Y+2, r23	; 0x02
    1072:	8b 83       	std	Y+3, r24	; 0x03
    1074:	9c 83       	std	Y+4, r25	; 0x04
    1076:	2d 83       	std	Y+5, r18	; 0x05
    1078:	3e 83       	std	Y+6, r19	; 0x06
    107a:	4f 83       	std	Y+7, r20	; 0x07
    107c:	58 87       	std	Y+8, r21	; 0x08
    107e:	8e 01       	movw	r16, r28
    1080:	07 5f       	subi	r16, 0xF7	; 247
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
    1084:	ce 01       	movw	r24, r28
    1086:	01 96       	adiw	r24, 0x01	; 1
    1088:	b8 01       	movw	r22, r16
    108a:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
    108e:	81 e1       	ldi	r24, 0x11	; 17
    1090:	e8 2e       	mov	r14, r24
    1092:	f1 2c       	mov	r15, r1
    1094:	ec 0e       	add	r14, r28
    1096:	fd 1e       	adc	r15, r29
    1098:	ce 01       	movw	r24, r28
    109a:	05 96       	adiw	r24, 0x05	; 5
    109c:	b7 01       	movw	r22, r14
    109e:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
    10a2:	89 85       	ldd	r24, Y+9	; 0x09
    10a4:	82 30       	cpi	r24, 0x02	; 2
    10a6:	40 f0       	brcs	.+16     	; 0x10b8 <__ltsf2+0x56>
    10a8:	89 89       	ldd	r24, Y+17	; 0x11
    10aa:	82 30       	cpi	r24, 0x02	; 2
    10ac:	28 f0       	brcs	.+10     	; 0x10b8 <__ltsf2+0x56>
    10ae:	c8 01       	movw	r24, r16
    10b0:	b7 01       	movw	r22, r14
    10b2:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__fpcmp_parts_f>
    10b6:	01 c0       	rjmp	.+2      	; 0x10ba <__ltsf2+0x58>
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	68 96       	adiw	r28, 0x18	; 24
    10bc:	e6 e0       	ldi	r30, 0x06	; 6
    10be:	0c 94 6b 0a 	jmp	0x14d6	; 0x14d6 <__epilogue_restores__+0x18>

000010c2 <__fixsfsi>:
    10c2:	ac e0       	ldi	r26, 0x0C	; 12
    10c4:	b0 e0       	ldi	r27, 0x00	; 0
    10c6:	e7 e6       	ldi	r30, 0x67	; 103
    10c8:	f8 e0       	ldi	r31, 0x08	; 8
    10ca:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <__prologue_saves__+0x20>
    10ce:	69 83       	std	Y+1, r22	; 0x01
    10d0:	7a 83       	std	Y+2, r23	; 0x02
    10d2:	8b 83       	std	Y+3, r24	; 0x03
    10d4:	9c 83       	std	Y+4, r25	; 0x04
    10d6:	ce 01       	movw	r24, r28
    10d8:	01 96       	adiw	r24, 0x01	; 1
    10da:	be 01       	movw	r22, r28
    10dc:	6b 5f       	subi	r22, 0xFB	; 251
    10de:	7f 4f       	sbci	r23, 0xFF	; 255
    10e0:	0e 94 81 09 	call	0x1302	; 0x1302 <__unpack_f>
    10e4:	8d 81       	ldd	r24, Y+5	; 0x05
    10e6:	82 30       	cpi	r24, 0x02	; 2
    10e8:	81 f1       	breq	.+96     	; 0x114a <__fixsfsi+0x88>
    10ea:	82 30       	cpi	r24, 0x02	; 2
    10ec:	70 f1       	brcs	.+92     	; 0x114a <__fixsfsi+0x88>
    10ee:	84 30       	cpi	r24, 0x04	; 4
    10f0:	21 f4       	brne	.+8      	; 0x10fa <__fixsfsi+0x38>
    10f2:	8e 81       	ldd	r24, Y+6	; 0x06
    10f4:	88 23       	and	r24, r24
    10f6:	69 f1       	breq	.+90     	; 0x1152 <__fixsfsi+0x90>
    10f8:	0a c0       	rjmp	.+20     	; 0x110e <__fixsfsi+0x4c>
    10fa:	2f 81       	ldd	r18, Y+7	; 0x07
    10fc:	38 85       	ldd	r19, Y+8	; 0x08
    10fe:	37 fd       	sbrc	r19, 7
    1100:	24 c0       	rjmp	.+72     	; 0x114a <__fixsfsi+0x88>
    1102:	6e 81       	ldd	r22, Y+6	; 0x06
    1104:	2f 31       	cpi	r18, 0x1F	; 31
    1106:	31 05       	cpc	r19, r1
    1108:	3c f0       	brlt	.+14     	; 0x1118 <__fixsfsi+0x56>
    110a:	66 23       	and	r22, r22
    110c:	11 f1       	breq	.+68     	; 0x1152 <__fixsfsi+0x90>
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	40 e0       	ldi	r20, 0x00	; 0
    1114:	50 e8       	ldi	r21, 0x80	; 128
    1116:	21 c0       	rjmp	.+66     	; 0x115a <__fixsfsi+0x98>
    1118:	8e e1       	ldi	r24, 0x1E	; 30
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	82 1b       	sub	r24, r18
    111e:	93 0b       	sbc	r25, r19
    1120:	29 85       	ldd	r18, Y+9	; 0x09
    1122:	3a 85       	ldd	r19, Y+10	; 0x0a
    1124:	4b 85       	ldd	r20, Y+11	; 0x0b
    1126:	5c 85       	ldd	r21, Y+12	; 0x0c
    1128:	04 c0       	rjmp	.+8      	; 0x1132 <__fixsfsi+0x70>
    112a:	56 95       	lsr	r21
    112c:	47 95       	ror	r20
    112e:	37 95       	ror	r19
    1130:	27 95       	ror	r18
    1132:	8a 95       	dec	r24
    1134:	d2 f7       	brpl	.-12     	; 0x112a <__fixsfsi+0x68>
    1136:	66 23       	and	r22, r22
    1138:	81 f0       	breq	.+32     	; 0x115a <__fixsfsi+0x98>
    113a:	50 95       	com	r21
    113c:	40 95       	com	r20
    113e:	30 95       	com	r19
    1140:	21 95       	neg	r18
    1142:	3f 4f       	sbci	r19, 0xFF	; 255
    1144:	4f 4f       	sbci	r20, 0xFF	; 255
    1146:	5f 4f       	sbci	r21, 0xFF	; 255
    1148:	08 c0       	rjmp	.+16     	; 0x115a <__fixsfsi+0x98>
    114a:	20 e0       	ldi	r18, 0x00	; 0
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	a9 01       	movw	r20, r18
    1150:	04 c0       	rjmp	.+8      	; 0x115a <__fixsfsi+0x98>
    1152:	2f ef       	ldi	r18, 0xFF	; 255
    1154:	3f ef       	ldi	r19, 0xFF	; 255
    1156:	4f ef       	ldi	r20, 0xFF	; 255
    1158:	5f e7       	ldi	r21, 0x7F	; 127
    115a:	b9 01       	movw	r22, r18
    115c:	ca 01       	movw	r24, r20
    115e:	2c 96       	adiw	r28, 0x0c	; 12
    1160:	e2 e0       	ldi	r30, 0x02	; 2
    1162:	0c 94 6f 0a 	jmp	0x14de	; 0x14de <__epilogue_restores__+0x20>

00001166 <__pack_f>:
    1166:	ef 92       	push	r14
    1168:	ff 92       	push	r15
    116a:	0f 93       	push	r16
    116c:	1f 93       	push	r17
    116e:	cf 93       	push	r28
    1170:	df 93       	push	r29
    1172:	fc 01       	movw	r30, r24
    1174:	24 81       	ldd	r18, Z+4	; 0x04
    1176:	35 81       	ldd	r19, Z+5	; 0x05
    1178:	46 81       	ldd	r20, Z+6	; 0x06
    117a:	57 81       	ldd	r21, Z+7	; 0x07
    117c:	61 81       	ldd	r22, Z+1	; 0x01
    117e:	80 81       	ld	r24, Z
    1180:	82 30       	cpi	r24, 0x02	; 2
    1182:	20 f4       	brcc	.+8      	; 0x118c <__pack_f+0x26>
    1184:	40 61       	ori	r20, 0x10	; 16
    1186:	ef ef       	ldi	r30, 0xFF	; 255
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	a3 c0       	rjmp	.+326    	; 0x12d2 <__pack_f+0x16c>
    118c:	84 30       	cpi	r24, 0x04	; 4
    118e:	09 f4       	brne	.+2      	; 0x1192 <__pack_f+0x2c>
    1190:	9b c0       	rjmp	.+310    	; 0x12c8 <__pack_f+0x162>
    1192:	82 30       	cpi	r24, 0x02	; 2
    1194:	09 f4       	brne	.+2      	; 0x1198 <__pack_f+0x32>
    1196:	92 c0       	rjmp	.+292    	; 0x12bc <__pack_f+0x156>
    1198:	21 15       	cp	r18, r1
    119a:	31 05       	cpc	r19, r1
    119c:	41 05       	cpc	r20, r1
    119e:	51 05       	cpc	r21, r1
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <__pack_f+0x3e>
    11a2:	8f c0       	rjmp	.+286    	; 0x12c2 <__pack_f+0x15c>
    11a4:	02 80       	ldd	r0, Z+2	; 0x02
    11a6:	f3 81       	ldd	r31, Z+3	; 0x03
    11a8:	e0 2d       	mov	r30, r0
    11aa:	8f ef       	ldi	r24, 0xFF	; 255
    11ac:	e2 38       	cpi	r30, 0x82	; 130
    11ae:	f8 07       	cpc	r31, r24
    11b0:	0c f0       	brlt	.+2      	; 0x11b4 <__pack_f+0x4e>
    11b2:	5a c0       	rjmp	.+180    	; 0x1268 <__pack_f+0x102>
    11b4:	c2 e8       	ldi	r28, 0x82	; 130
    11b6:	df ef       	ldi	r29, 0xFF	; 255
    11b8:	ce 1b       	sub	r28, r30
    11ba:	df 0b       	sbc	r29, r31
    11bc:	ca 31       	cpi	r28, 0x1A	; 26
    11be:	d1 05       	cpc	r29, r1
    11c0:	6c f5       	brge	.+90     	; 0x121c <__pack_f+0xb6>
    11c2:	79 01       	movw	r14, r18
    11c4:	8a 01       	movw	r16, r20
    11c6:	0c 2e       	mov	r0, r28
    11c8:	04 c0       	rjmp	.+8      	; 0x11d2 <__pack_f+0x6c>
    11ca:	16 95       	lsr	r17
    11cc:	07 95       	ror	r16
    11ce:	f7 94       	ror	r15
    11d0:	e7 94       	ror	r14
    11d2:	0a 94       	dec	r0
    11d4:	d2 f7       	brpl	.-12     	; 0x11ca <__pack_f+0x64>
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	a0 e0       	ldi	r26, 0x00	; 0
    11dc:	b0 e0       	ldi	r27, 0x00	; 0
    11de:	0c 2e       	mov	r0, r28
    11e0:	04 c0       	rjmp	.+8      	; 0x11ea <__pack_f+0x84>
    11e2:	88 0f       	add	r24, r24
    11e4:	99 1f       	adc	r25, r25
    11e6:	aa 1f       	adc	r26, r26
    11e8:	bb 1f       	adc	r27, r27
    11ea:	0a 94       	dec	r0
    11ec:	d2 f7       	brpl	.-12     	; 0x11e2 <__pack_f+0x7c>
    11ee:	01 97       	sbiw	r24, 0x01	; 1
    11f0:	a1 09       	sbc	r26, r1
    11f2:	b1 09       	sbc	r27, r1
    11f4:	82 23       	and	r24, r18
    11f6:	93 23       	and	r25, r19
    11f8:	a4 23       	and	r26, r20
    11fa:	b5 23       	and	r27, r21
    11fc:	21 e0       	ldi	r18, 0x01	; 1
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	40 e0       	ldi	r20, 0x00	; 0
    1202:	50 e0       	ldi	r21, 0x00	; 0
    1204:	00 97       	sbiw	r24, 0x00	; 0
    1206:	a1 05       	cpc	r26, r1
    1208:	b1 05       	cpc	r27, r1
    120a:	19 f4       	brne	.+6      	; 0x1212 <__pack_f+0xac>
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	a9 01       	movw	r20, r18
    1212:	2e 29       	or	r18, r14
    1214:	3f 29       	or	r19, r15
    1216:	40 2b       	or	r20, r16
    1218:	51 2b       	or	r21, r17
    121a:	03 c0       	rjmp	.+6      	; 0x1222 <__pack_f+0xbc>
    121c:	20 e0       	ldi	r18, 0x00	; 0
    121e:	30 e0       	ldi	r19, 0x00	; 0
    1220:	a9 01       	movw	r20, r18
    1222:	da 01       	movw	r26, r20
    1224:	c9 01       	movw	r24, r18
    1226:	8f 77       	andi	r24, 0x7F	; 127
    1228:	90 70       	andi	r25, 0x00	; 0
    122a:	a0 70       	andi	r26, 0x00	; 0
    122c:	b0 70       	andi	r27, 0x00	; 0
    122e:	80 34       	cpi	r24, 0x40	; 64
    1230:	91 05       	cpc	r25, r1
    1232:	a1 05       	cpc	r26, r1
    1234:	b1 05       	cpc	r27, r1
    1236:	39 f4       	brne	.+14     	; 0x1246 <__pack_f+0xe0>
    1238:	27 ff       	sbrs	r18, 7
    123a:	09 c0       	rjmp	.+18     	; 0x124e <__pack_f+0xe8>
    123c:	20 5c       	subi	r18, 0xC0	; 192
    123e:	3f 4f       	sbci	r19, 0xFF	; 255
    1240:	4f 4f       	sbci	r20, 0xFF	; 255
    1242:	5f 4f       	sbci	r21, 0xFF	; 255
    1244:	04 c0       	rjmp	.+8      	; 0x124e <__pack_f+0xe8>
    1246:	21 5c       	subi	r18, 0xC1	; 193
    1248:	3f 4f       	sbci	r19, 0xFF	; 255
    124a:	4f 4f       	sbci	r20, 0xFF	; 255
    124c:	5f 4f       	sbci	r21, 0xFF	; 255
    124e:	e1 e0       	ldi	r30, 0x01	; 1
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	20 30       	cpi	r18, 0x00	; 0
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	38 07       	cpc	r19, r24
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	48 07       	cpc	r20, r24
    125c:	80 e4       	ldi	r24, 0x40	; 64
    125e:	58 07       	cpc	r21, r24
    1260:	28 f5       	brcc	.+74     	; 0x12ac <__pack_f+0x146>
    1262:	e0 e0       	ldi	r30, 0x00	; 0
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	22 c0       	rjmp	.+68     	; 0x12ac <__pack_f+0x146>
    1268:	e0 38       	cpi	r30, 0x80	; 128
    126a:	f1 05       	cpc	r31, r1
    126c:	6c f5       	brge	.+90     	; 0x12c8 <__pack_f+0x162>
    126e:	e1 58       	subi	r30, 0x81	; 129
    1270:	ff 4f       	sbci	r31, 0xFF	; 255
    1272:	da 01       	movw	r26, r20
    1274:	c9 01       	movw	r24, r18
    1276:	8f 77       	andi	r24, 0x7F	; 127
    1278:	90 70       	andi	r25, 0x00	; 0
    127a:	a0 70       	andi	r26, 0x00	; 0
    127c:	b0 70       	andi	r27, 0x00	; 0
    127e:	80 34       	cpi	r24, 0x40	; 64
    1280:	91 05       	cpc	r25, r1
    1282:	a1 05       	cpc	r26, r1
    1284:	b1 05       	cpc	r27, r1
    1286:	39 f4       	brne	.+14     	; 0x1296 <__pack_f+0x130>
    1288:	27 ff       	sbrs	r18, 7
    128a:	09 c0       	rjmp	.+18     	; 0x129e <__pack_f+0x138>
    128c:	20 5c       	subi	r18, 0xC0	; 192
    128e:	3f 4f       	sbci	r19, 0xFF	; 255
    1290:	4f 4f       	sbci	r20, 0xFF	; 255
    1292:	5f 4f       	sbci	r21, 0xFF	; 255
    1294:	04 c0       	rjmp	.+8      	; 0x129e <__pack_f+0x138>
    1296:	21 5c       	subi	r18, 0xC1	; 193
    1298:	3f 4f       	sbci	r19, 0xFF	; 255
    129a:	4f 4f       	sbci	r20, 0xFF	; 255
    129c:	5f 4f       	sbci	r21, 0xFF	; 255
    129e:	57 ff       	sbrs	r21, 7
    12a0:	05 c0       	rjmp	.+10     	; 0x12ac <__pack_f+0x146>
    12a2:	56 95       	lsr	r21
    12a4:	47 95       	ror	r20
    12a6:	37 95       	ror	r19
    12a8:	27 95       	ror	r18
    12aa:	31 96       	adiw	r30, 0x01	; 1
    12ac:	87 e0       	ldi	r24, 0x07	; 7
    12ae:	56 95       	lsr	r21
    12b0:	47 95       	ror	r20
    12b2:	37 95       	ror	r19
    12b4:	27 95       	ror	r18
    12b6:	8a 95       	dec	r24
    12b8:	d1 f7       	brne	.-12     	; 0x12ae <__pack_f+0x148>
    12ba:	0b c0       	rjmp	.+22     	; 0x12d2 <__pack_f+0x16c>
    12bc:	e0 e0       	ldi	r30, 0x00	; 0
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	05 c0       	rjmp	.+10     	; 0x12cc <__pack_f+0x166>
    12c2:	e0 e0       	ldi	r30, 0x00	; 0
    12c4:	f0 e0       	ldi	r31, 0x00	; 0
    12c6:	05 c0       	rjmp	.+10     	; 0x12d2 <__pack_f+0x16c>
    12c8:	ef ef       	ldi	r30, 0xFF	; 255
    12ca:	f0 e0       	ldi	r31, 0x00	; 0
    12cc:	20 e0       	ldi	r18, 0x00	; 0
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	a9 01       	movw	r20, r18
    12d2:	8e 2f       	mov	r24, r30
    12d4:	87 95       	ror	r24
    12d6:	88 27       	eor	r24, r24
    12d8:	87 95       	ror	r24
    12da:	94 2f       	mov	r25, r20
    12dc:	9f 77       	andi	r25, 0x7F	; 127
    12de:	67 95       	ror	r22
    12e0:	66 27       	eor	r22, r22
    12e2:	67 95       	ror	r22
    12e4:	e6 95       	lsr	r30
    12e6:	e2 2e       	mov	r14, r18
    12e8:	a9 2f       	mov	r26, r25
    12ea:	a8 2b       	or	r26, r24
    12ec:	fe 2f       	mov	r31, r30
    12ee:	f6 2b       	or	r31, r22
    12f0:	62 2f       	mov	r22, r18
    12f2:	73 2f       	mov	r23, r19
    12f4:	8a 2f       	mov	r24, r26
    12f6:	9f 2f       	mov	r25, r31
    12f8:	cd b7       	in	r28, 0x3d	; 61
    12fa:	de b7       	in	r29, 0x3e	; 62
    12fc:	e6 e0       	ldi	r30, 0x06	; 6
    12fe:	0c 94 6b 0a 	jmp	0x14d6	; 0x14d6 <__epilogue_restores__+0x18>

00001302 <__unpack_f>:
    1302:	dc 01       	movw	r26, r24
    1304:	fb 01       	movw	r30, r22
    1306:	2c 91       	ld	r18, X
    1308:	11 96       	adiw	r26, 0x01	; 1
    130a:	3c 91       	ld	r19, X
    130c:	11 97       	sbiw	r26, 0x01	; 1
    130e:	12 96       	adiw	r26, 0x02	; 2
    1310:	8c 91       	ld	r24, X
    1312:	12 97       	sbiw	r26, 0x02	; 2
    1314:	48 2f       	mov	r20, r24
    1316:	4f 77       	andi	r20, 0x7F	; 127
    1318:	50 e0       	ldi	r21, 0x00	; 0
    131a:	98 2f       	mov	r25, r24
    131c:	99 1f       	adc	r25, r25
    131e:	99 27       	eor	r25, r25
    1320:	99 1f       	adc	r25, r25
    1322:	13 96       	adiw	r26, 0x03	; 3
    1324:	6c 91       	ld	r22, X
    1326:	13 97       	sbiw	r26, 0x03	; 3
    1328:	86 2f       	mov	r24, r22
    132a:	88 0f       	add	r24, r24
    132c:	89 2b       	or	r24, r25
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	66 1f       	adc	r22, r22
    1332:	66 27       	eor	r22, r22
    1334:	66 1f       	adc	r22, r22
    1336:	61 83       	std	Z+1, r22	; 0x01
    1338:	00 97       	sbiw	r24, 0x00	; 0
    133a:	39 f5       	brne	.+78     	; 0x138a <__unpack_f+0x88>
    133c:	21 15       	cp	r18, r1
    133e:	31 05       	cpc	r19, r1
    1340:	41 05       	cpc	r20, r1
    1342:	51 05       	cpc	r21, r1
    1344:	11 f4       	brne	.+4      	; 0x134a <__unpack_f+0x48>
    1346:	82 e0       	ldi	r24, 0x02	; 2
    1348:	29 c0       	rjmp	.+82     	; 0x139c <__unpack_f+0x9a>
    134a:	82 e8       	ldi	r24, 0x82	; 130
    134c:	9f ef       	ldi	r25, 0xFF	; 255
    134e:	93 83       	std	Z+3, r25	; 0x03
    1350:	82 83       	std	Z+2, r24	; 0x02
    1352:	67 e0       	ldi	r22, 0x07	; 7
    1354:	22 0f       	add	r18, r18
    1356:	33 1f       	adc	r19, r19
    1358:	44 1f       	adc	r20, r20
    135a:	55 1f       	adc	r21, r21
    135c:	6a 95       	dec	r22
    135e:	d1 f7       	brne	.-12     	; 0x1354 <__unpack_f+0x52>
    1360:	83 e0       	ldi	r24, 0x03	; 3
    1362:	80 83       	st	Z, r24
    1364:	09 c0       	rjmp	.+18     	; 0x1378 <__unpack_f+0x76>
    1366:	22 0f       	add	r18, r18
    1368:	33 1f       	adc	r19, r19
    136a:	44 1f       	adc	r20, r20
    136c:	55 1f       	adc	r21, r21
    136e:	82 81       	ldd	r24, Z+2	; 0x02
    1370:	93 81       	ldd	r25, Z+3	; 0x03
    1372:	01 97       	sbiw	r24, 0x01	; 1
    1374:	93 83       	std	Z+3, r25	; 0x03
    1376:	82 83       	std	Z+2, r24	; 0x02
    1378:	20 30       	cpi	r18, 0x00	; 0
    137a:	80 e0       	ldi	r24, 0x00	; 0
    137c:	38 07       	cpc	r19, r24
    137e:	80 e0       	ldi	r24, 0x00	; 0
    1380:	48 07       	cpc	r20, r24
    1382:	80 e4       	ldi	r24, 0x40	; 64
    1384:	58 07       	cpc	r21, r24
    1386:	78 f3       	brcs	.-34     	; 0x1366 <__unpack_f+0x64>
    1388:	20 c0       	rjmp	.+64     	; 0x13ca <__unpack_f+0xc8>
    138a:	8f 3f       	cpi	r24, 0xFF	; 255
    138c:	91 05       	cpc	r25, r1
    138e:	79 f4       	brne	.+30     	; 0x13ae <__unpack_f+0xac>
    1390:	21 15       	cp	r18, r1
    1392:	31 05       	cpc	r19, r1
    1394:	41 05       	cpc	r20, r1
    1396:	51 05       	cpc	r21, r1
    1398:	19 f4       	brne	.+6      	; 0x13a0 <__unpack_f+0x9e>
    139a:	84 e0       	ldi	r24, 0x04	; 4
    139c:	80 83       	st	Z, r24
    139e:	08 95       	ret
    13a0:	44 ff       	sbrs	r20, 4
    13a2:	03 c0       	rjmp	.+6      	; 0x13aa <__unpack_f+0xa8>
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	80 83       	st	Z, r24
    13a8:	10 c0       	rjmp	.+32     	; 0x13ca <__unpack_f+0xc8>
    13aa:	10 82       	st	Z, r1
    13ac:	0e c0       	rjmp	.+28     	; 0x13ca <__unpack_f+0xc8>
    13ae:	8f 57       	subi	r24, 0x7F	; 127
    13b0:	90 40       	sbci	r25, 0x00	; 0
    13b2:	93 83       	std	Z+3, r25	; 0x03
    13b4:	82 83       	std	Z+2, r24	; 0x02
    13b6:	83 e0       	ldi	r24, 0x03	; 3
    13b8:	80 83       	st	Z, r24
    13ba:	87 e0       	ldi	r24, 0x07	; 7
    13bc:	22 0f       	add	r18, r18
    13be:	33 1f       	adc	r19, r19
    13c0:	44 1f       	adc	r20, r20
    13c2:	55 1f       	adc	r21, r21
    13c4:	8a 95       	dec	r24
    13c6:	d1 f7       	brne	.-12     	; 0x13bc <__unpack_f+0xba>
    13c8:	50 64       	ori	r21, 0x40	; 64
    13ca:	24 83       	std	Z+4, r18	; 0x04
    13cc:	35 83       	std	Z+5, r19	; 0x05
    13ce:	46 83       	std	Z+6, r20	; 0x06
    13d0:	57 83       	std	Z+7, r21	; 0x07
    13d2:	08 95       	ret

000013d4 <__fpcmp_parts_f>:
    13d4:	fc 01       	movw	r30, r24
    13d6:	db 01       	movw	r26, r22
    13d8:	90 81       	ld	r25, Z
    13da:	92 30       	cpi	r25, 0x02	; 2
    13dc:	08 f4       	brcc	.+2      	; 0x13e0 <__fpcmp_parts_f+0xc>
    13de:	49 c0       	rjmp	.+146    	; 0x1472 <__fpcmp_parts_f+0x9e>
    13e0:	8c 91       	ld	r24, X
    13e2:	82 30       	cpi	r24, 0x02	; 2
    13e4:	08 f4       	brcc	.+2      	; 0x13e8 <__fpcmp_parts_f+0x14>
    13e6:	45 c0       	rjmp	.+138    	; 0x1472 <__fpcmp_parts_f+0x9e>
    13e8:	94 30       	cpi	r25, 0x04	; 4
    13ea:	51 f4       	brne	.+20     	; 0x1400 <__fpcmp_parts_f+0x2c>
    13ec:	61 81       	ldd	r22, Z+1	; 0x01
    13ee:	84 30       	cpi	r24, 0x04	; 4
    13f0:	b1 f5       	brne	.+108    	; 0x145e <__fpcmp_parts_f+0x8a>
    13f2:	11 96       	adiw	r26, 0x01	; 1
    13f4:	2c 91       	ld	r18, X
    13f6:	11 97       	sbiw	r26, 0x01	; 1
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	26 1b       	sub	r18, r22
    13fc:	31 09       	sbc	r19, r1
    13fe:	41 c0       	rjmp	.+130    	; 0x1482 <__fpcmp_parts_f+0xae>
    1400:	84 30       	cpi	r24, 0x04	; 4
    1402:	21 f0       	breq	.+8      	; 0x140c <__fpcmp_parts_f+0x38>
    1404:	92 30       	cpi	r25, 0x02	; 2
    1406:	41 f4       	brne	.+16     	; 0x1418 <__fpcmp_parts_f+0x44>
    1408:	82 30       	cpi	r24, 0x02	; 2
    140a:	b1 f1       	breq	.+108    	; 0x1478 <__fpcmp_parts_f+0xa4>
    140c:	11 96       	adiw	r26, 0x01	; 1
    140e:	8c 91       	ld	r24, X
    1410:	11 97       	sbiw	r26, 0x01	; 1
    1412:	88 23       	and	r24, r24
    1414:	a1 f1       	breq	.+104    	; 0x147e <__fpcmp_parts_f+0xaa>
    1416:	2d c0       	rjmp	.+90     	; 0x1472 <__fpcmp_parts_f+0x9e>
    1418:	61 81       	ldd	r22, Z+1	; 0x01
    141a:	82 30       	cpi	r24, 0x02	; 2
    141c:	01 f1       	breq	.+64     	; 0x145e <__fpcmp_parts_f+0x8a>
    141e:	11 96       	adiw	r26, 0x01	; 1
    1420:	8c 91       	ld	r24, X
    1422:	11 97       	sbiw	r26, 0x01	; 1
    1424:	68 17       	cp	r22, r24
    1426:	d9 f4       	brne	.+54     	; 0x145e <__fpcmp_parts_f+0x8a>
    1428:	22 81       	ldd	r18, Z+2	; 0x02
    142a:	33 81       	ldd	r19, Z+3	; 0x03
    142c:	12 96       	adiw	r26, 0x02	; 2
    142e:	8d 91       	ld	r24, X+
    1430:	9c 91       	ld	r25, X
    1432:	13 97       	sbiw	r26, 0x03	; 3
    1434:	82 17       	cp	r24, r18
    1436:	93 07       	cpc	r25, r19
    1438:	94 f0       	brlt	.+36     	; 0x145e <__fpcmp_parts_f+0x8a>
    143a:	28 17       	cp	r18, r24
    143c:	39 07       	cpc	r19, r25
    143e:	bc f0       	brlt	.+46     	; 0x146e <__fpcmp_parts_f+0x9a>
    1440:	24 81       	ldd	r18, Z+4	; 0x04
    1442:	35 81       	ldd	r19, Z+5	; 0x05
    1444:	46 81       	ldd	r20, Z+6	; 0x06
    1446:	57 81       	ldd	r21, Z+7	; 0x07
    1448:	14 96       	adiw	r26, 0x04	; 4
    144a:	8d 91       	ld	r24, X+
    144c:	9d 91       	ld	r25, X+
    144e:	0d 90       	ld	r0, X+
    1450:	bc 91       	ld	r27, X
    1452:	a0 2d       	mov	r26, r0
    1454:	82 17       	cp	r24, r18
    1456:	93 07       	cpc	r25, r19
    1458:	a4 07       	cpc	r26, r20
    145a:	b5 07       	cpc	r27, r21
    145c:	18 f4       	brcc	.+6      	; 0x1464 <__fpcmp_parts_f+0x90>
    145e:	66 23       	and	r22, r22
    1460:	41 f0       	breq	.+16     	; 0x1472 <__fpcmp_parts_f+0x9e>
    1462:	0d c0       	rjmp	.+26     	; 0x147e <__fpcmp_parts_f+0xaa>
    1464:	28 17       	cp	r18, r24
    1466:	39 07       	cpc	r19, r25
    1468:	4a 07       	cpc	r20, r26
    146a:	5b 07       	cpc	r21, r27
    146c:	28 f4       	brcc	.+10     	; 0x1478 <__fpcmp_parts_f+0xa4>
    146e:	66 23       	and	r22, r22
    1470:	31 f0       	breq	.+12     	; 0x147e <__fpcmp_parts_f+0xaa>
    1472:	21 e0       	ldi	r18, 0x01	; 1
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	05 c0       	rjmp	.+10     	; 0x1482 <__fpcmp_parts_f+0xae>
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	02 c0       	rjmp	.+4      	; 0x1482 <__fpcmp_parts_f+0xae>
    147e:	2f ef       	ldi	r18, 0xFF	; 255
    1480:	3f ef       	ldi	r19, 0xFF	; 255
    1482:	c9 01       	movw	r24, r18
    1484:	08 95       	ret

00001486 <__prologue_saves__>:
    1486:	2f 92       	push	r2
    1488:	3f 92       	push	r3
    148a:	4f 92       	push	r4
    148c:	5f 92       	push	r5
    148e:	6f 92       	push	r6
    1490:	7f 92       	push	r7
    1492:	8f 92       	push	r8
    1494:	9f 92       	push	r9
    1496:	af 92       	push	r10
    1498:	bf 92       	push	r11
    149a:	cf 92       	push	r12
    149c:	df 92       	push	r13
    149e:	ef 92       	push	r14
    14a0:	ff 92       	push	r15
    14a2:	0f 93       	push	r16
    14a4:	1f 93       	push	r17
    14a6:	cf 93       	push	r28
    14a8:	df 93       	push	r29
    14aa:	cd b7       	in	r28, 0x3d	; 61
    14ac:	de b7       	in	r29, 0x3e	; 62
    14ae:	ca 1b       	sub	r28, r26
    14b0:	db 0b       	sbc	r29, r27
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	f8 94       	cli
    14b6:	de bf       	out	0x3e, r29	; 62
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	cd bf       	out	0x3d, r28	; 61
    14bc:	09 94       	ijmp

000014be <__epilogue_restores__>:
    14be:	2a 88       	ldd	r2, Y+18	; 0x12
    14c0:	39 88       	ldd	r3, Y+17	; 0x11
    14c2:	48 88       	ldd	r4, Y+16	; 0x10
    14c4:	5f 84       	ldd	r5, Y+15	; 0x0f
    14c6:	6e 84       	ldd	r6, Y+14	; 0x0e
    14c8:	7d 84       	ldd	r7, Y+13	; 0x0d
    14ca:	8c 84       	ldd	r8, Y+12	; 0x0c
    14cc:	9b 84       	ldd	r9, Y+11	; 0x0b
    14ce:	aa 84       	ldd	r10, Y+10	; 0x0a
    14d0:	b9 84       	ldd	r11, Y+9	; 0x09
    14d2:	c8 84       	ldd	r12, Y+8	; 0x08
    14d4:	df 80       	ldd	r13, Y+7	; 0x07
    14d6:	ee 80       	ldd	r14, Y+6	; 0x06
    14d8:	fd 80       	ldd	r15, Y+5	; 0x05
    14da:	0c 81       	ldd	r16, Y+4	; 0x04
    14dc:	1b 81       	ldd	r17, Y+3	; 0x03
    14de:	aa 81       	ldd	r26, Y+2	; 0x02
    14e0:	b9 81       	ldd	r27, Y+1	; 0x01
    14e2:	ce 0f       	add	r28, r30
    14e4:	d1 1d       	adc	r29, r1
    14e6:	0f b6       	in	r0, 0x3f	; 63
    14e8:	f8 94       	cli
    14ea:	de bf       	out	0x3e, r29	; 62
    14ec:	0f be       	out	0x3f, r0	; 63
    14ee:	cd bf       	out	0x3d, r28	; 61
    14f0:	ed 01       	movw	r28, r26
    14f2:	08 95       	ret

000014f4 <_exit>:
    14f4:	f8 94       	cli

000014f6 <__stop_program>:
    14f6:	ff cf       	rjmp	.-2      	; 0x14f6 <__stop_program>
