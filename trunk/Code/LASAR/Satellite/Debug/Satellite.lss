
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00001010  000010a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001010  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800108  00800108  000010ac  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000010ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  000017fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000250  00000000  00000000  0000197d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f81  00000000  00000000  00001bcd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000fbb  00000000  00000000  00003b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000152f  00000000  00000000  00004b09  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  00006038  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000041e  00000000  00000000  00006258  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000a79  00000000  00000000  00006676  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000005a6  00000000  00000000  000070ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000030  00000000  00000000  00007695  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 3b 02 	jmp	0x476	; 0x476 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 2b 02 	jmp	0x456	; 0x456 <__vector_12>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ae 30       	cpi	r26, 0x0E	; 14
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	11 e0       	ldi	r17, 0x01	; 1
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e0 e1       	ldi	r30, 0x10	; 16
      8c:	f0 e1       	ldi	r31, 0x10	; 16
      8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 06 08 	jmp	0x100c	; 0x100c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile unsigned int dim = 0;
volatile unsigned int tick = 0;
volatile uint8_t rxflag = 0;

int main(void)
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	a0 97       	sbiw	r28, 0x20	; 32
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	
	// turn on interrupts
	sei();
      be:	78 94       	sei

	initTimer(128);
      c0:	80 e8       	ldi	r24, 0x80	; 128
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	0e 94 8c 01 	call	0x318	; 0x318 <initTimer>
	while(1)
	{
		for( int i = 0; i < 256; ++i )
      c8:	1a 82       	std	Y+2, r1	; 0x02
      ca:	19 82       	std	Y+1, r1	; 0x01
      cc:	89 c0       	rjmp	.+274    	; 0x1e0 <main+0x13a>
		{
			setCycle(i);
      ce:	89 81       	ldd	r24, Y+1	; 0x01
      d0:	9a 81       	ldd	r25, Y+2	; 0x02
      d2:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <setCycle>
      d6:	80 e0       	ldi	r24, 0x00	; 0
      d8:	90 e0       	ldi	r25, 0x00	; 0
      da:	a0 e2       	ldi	r26, 0x20	; 32
      dc:	b2 e4       	ldi	r27, 0x42	; 66
      de:	8d 83       	std	Y+5, r24	; 0x05
      e0:	9e 83       	std	Y+6, r25	; 0x06
      e2:	af 83       	std	Y+7, r26	; 0x07
      e4:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      e6:	6d 81       	ldd	r22, Y+5	; 0x05
      e8:	7e 81       	ldd	r23, Y+6	; 0x06
      ea:	8f 81       	ldd	r24, Y+7	; 0x07
      ec:	98 85       	ldd	r25, Y+8	; 0x08
      ee:	20 e0       	ldi	r18, 0x00	; 0
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	4a e7       	ldi	r20, 0x7A	; 122
      f4:	53 e4       	ldi	r21, 0x43	; 67
      f6:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__mulsf3>
      fa:	dc 01       	movw	r26, r24
      fc:	cb 01       	movw	r24, r22
      fe:	89 87       	std	Y+9, r24	; 0x09
     100:	9a 87       	std	Y+10, r25	; 0x0a
     102:	ab 87       	std	Y+11, r26	; 0x0b
     104:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     106:	11 e0       	ldi	r17, 0x01	; 1
     108:	69 85       	ldd	r22, Y+9	; 0x09
     10a:	7a 85       	ldd	r23, Y+10	; 0x0a
     10c:	8b 85       	ldd	r24, Y+11	; 0x0b
     10e:	9c 85       	ldd	r25, Y+12	; 0x0c
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	40 e8       	ldi	r20, 0x80	; 128
     116:	5f e3       	ldi	r21, 0x3F	; 63
     118:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__ltsf2>
     11c:	88 23       	and	r24, r24
     11e:	0c f0       	brlt	.+2      	; 0x122 <main+0x7c>
     120:	10 e0       	ldi	r17, 0x00	; 0
     122:	11 23       	and	r17, r17
     124:	29 f0       	breq	.+10     	; 0x130 <main+0x8a>
		__ticks = 1;
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	9e 87       	std	Y+14, r25	; 0x0e
     12c:	8d 87       	std	Y+13, r24	; 0x0d
     12e:	46 c0       	rjmp	.+140    	; 0x1bc <main+0x116>
	else if (__tmp > 65535)
     130:	11 e0       	ldi	r17, 0x01	; 1
     132:	69 85       	ldd	r22, Y+9	; 0x09
     134:	7a 85       	ldd	r23, Y+10	; 0x0a
     136:	8b 85       	ldd	r24, Y+11	; 0x0b
     138:	9c 85       	ldd	r25, Y+12	; 0x0c
     13a:	20 e0       	ldi	r18, 0x00	; 0
     13c:	3f ef       	ldi	r19, 0xFF	; 255
     13e:	4f e7       	ldi	r20, 0x7F	; 127
     140:	57 e4       	ldi	r21, 0x47	; 71
     142:	0e 94 5d 05 	call	0xaba	; 0xaba <__gtsf2>
     146:	18 16       	cp	r1, r24
     148:	0c f0       	brlt	.+2      	; 0x14c <main+0xa6>
     14a:	10 e0       	ldi	r17, 0x00	; 0
     14c:	11 23       	and	r17, r17
     14e:	61 f1       	breq	.+88     	; 0x1a8 <main+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     150:	6d 81       	ldd	r22, Y+5	; 0x05
     152:	7e 81       	ldd	r23, Y+6	; 0x06
     154:	8f 81       	ldd	r24, Y+7	; 0x07
     156:	98 85       	ldd	r25, Y+8	; 0x08
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	40 e2       	ldi	r20, 0x20	; 32
     15e:	51 e4       	ldi	r21, 0x41	; 65
     160:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__mulsf3>
     164:	dc 01       	movw	r26, r24
     166:	cb 01       	movw	r24, r22
     168:	bc 01       	movw	r22, r24
     16a:	cd 01       	movw	r24, r26
     16c:	0e 94 8f 02 	call	0x51e	; 0x51e <__fixunssfsi>
     170:	dc 01       	movw	r26, r24
     172:	cb 01       	movw	r24, r22
     174:	9e 87       	std	Y+14, r25	; 0x0e
     176:	8d 87       	std	Y+13, r24	; 0x0d
     178:	12 c0       	rjmp	.+36     	; 0x19e <main+0xf8>
     17a:	89 e1       	ldi	r24, 0x19	; 25
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	98 8b       	std	Y+16, r25	; 0x10
     180:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     182:	8f 85       	ldd	r24, Y+15	; 0x0f
     184:	98 89       	ldd	r25, Y+16	; 0x10
     186:	8c 01       	movw	r16, r24
     188:	c8 01       	movw	r24, r16
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <main+0xe4>
     18e:	8c 01       	movw	r16, r24
     190:	18 8b       	std	Y+16, r17	; 0x10
     192:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     194:	8d 85       	ldd	r24, Y+13	; 0x0d
     196:	9e 85       	ldd	r25, Y+14	; 0x0e
     198:	01 97       	sbiw	r24, 0x01	; 1
     19a:	9e 87       	std	Y+14, r25	; 0x0e
     19c:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     19e:	8d 85       	ldd	r24, Y+13	; 0x0d
     1a0:	9e 85       	ldd	r25, Y+14	; 0x0e
     1a2:	00 97       	sbiw	r24, 0x00	; 0
     1a4:	51 f7       	brne	.-44     	; 0x17a <main+0xd4>
     1a6:	17 c0       	rjmp	.+46     	; 0x1d6 <main+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1a8:	69 85       	ldd	r22, Y+9	; 0x09
     1aa:	7a 85       	ldd	r23, Y+10	; 0x0a
     1ac:	8b 85       	ldd	r24, Y+11	; 0x0b
     1ae:	9c 85       	ldd	r25, Y+12	; 0x0c
     1b0:	0e 94 8f 02 	call	0x51e	; 0x51e <__fixunssfsi>
     1b4:	dc 01       	movw	r26, r24
     1b6:	cb 01       	movw	r24, r22
     1b8:	9e 87       	std	Y+14, r25	; 0x0e
     1ba:	8d 87       	std	Y+13, r24	; 0x0d
     1bc:	8d 85       	ldd	r24, Y+13	; 0x0d
     1be:	9e 85       	ldd	r25, Y+14	; 0x0e
     1c0:	9a 8b       	std	Y+18, r25	; 0x12
     1c2:	89 8b       	std	Y+17, r24	; 0x11
     1c4:	89 89       	ldd	r24, Y+17	; 0x11
     1c6:	9a 89       	ldd	r25, Y+18	; 0x12
     1c8:	8c 01       	movw	r16, r24
     1ca:	c8 01       	movw	r24, r16
     1cc:	01 97       	sbiw	r24, 0x01	; 1
     1ce:	f1 f7       	brne	.-4      	; 0x1cc <main+0x126>
     1d0:	8c 01       	movw	r16, r24
     1d2:	1a 8b       	std	Y+18, r17	; 0x12
     1d4:	09 8b       	std	Y+17, r16	; 0x11
	sei();

	initTimer(128);
	while(1)
	{
		for( int i = 0; i < 256; ++i )
     1d6:	89 81       	ldd	r24, Y+1	; 0x01
     1d8:	9a 81       	ldd	r25, Y+2	; 0x02
     1da:	01 96       	adiw	r24, 0x01	; 1
     1dc:	9a 83       	std	Y+2, r25	; 0x02
     1de:	89 83       	std	Y+1, r24	; 0x01
     1e0:	89 81       	ldd	r24, Y+1	; 0x01
     1e2:	9a 81       	ldd	r25, Y+2	; 0x02
     1e4:	8f 3f       	cpi	r24, 0xFF	; 255
     1e6:	91 05       	cpc	r25, r1
     1e8:	09 f0       	breq	.+2      	; 0x1ec <main+0x146>
     1ea:	0c f4       	brge	.+2      	; 0x1ee <main+0x148>
     1ec:	70 cf       	rjmp	.-288    	; 0xce <main+0x28>
		{
			setCycle(i);
			_delay_ms(40);
		}
		
		for( int i = 255; i > 0; --i)
     1ee:	8f ef       	ldi	r24, 0xFF	; 255
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	9c 83       	std	Y+4, r25	; 0x04
     1f4:	8b 83       	std	Y+3, r24	; 0x03
     1f6:	89 c0       	rjmp	.+274    	; 0x30a <main+0x264>
		{
			setCycle(i);
     1f8:	8b 81       	ldd	r24, Y+3	; 0x03
     1fa:	9c 81       	ldd	r25, Y+4	; 0x04
     1fc:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <setCycle>
     200:	80 e0       	ldi	r24, 0x00	; 0
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	a0 e2       	ldi	r26, 0x20	; 32
     206:	b2 e4       	ldi	r27, 0x42	; 66
     208:	8b 8b       	std	Y+19, r24	; 0x13
     20a:	9c 8b       	std	Y+20, r25	; 0x14
     20c:	ad 8b       	std	Y+21, r26	; 0x15
     20e:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     210:	6b 89       	ldd	r22, Y+19	; 0x13
     212:	7c 89       	ldd	r23, Y+20	; 0x14
     214:	8d 89       	ldd	r24, Y+21	; 0x15
     216:	9e 89       	ldd	r25, Y+22	; 0x16
     218:	20 e0       	ldi	r18, 0x00	; 0
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	4a e7       	ldi	r20, 0x7A	; 122
     21e:	53 e4       	ldi	r21, 0x43	; 67
     220:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__mulsf3>
     224:	dc 01       	movw	r26, r24
     226:	cb 01       	movw	r24, r22
     228:	8f 8b       	std	Y+23, r24	; 0x17
     22a:	98 8f       	std	Y+24, r25	; 0x18
     22c:	a9 8f       	std	Y+25, r26	; 0x19
     22e:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     230:	11 e0       	ldi	r17, 0x01	; 1
     232:	6f 89       	ldd	r22, Y+23	; 0x17
     234:	78 8d       	ldd	r23, Y+24	; 0x18
     236:	89 8d       	ldd	r24, Y+25	; 0x19
     238:	9a 8d       	ldd	r25, Y+26	; 0x1a
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	30 e0       	ldi	r19, 0x00	; 0
     23e:	40 e8       	ldi	r20, 0x80	; 128
     240:	5f e3       	ldi	r21, 0x3F	; 63
     242:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__ltsf2>
     246:	88 23       	and	r24, r24
     248:	0c f0       	brlt	.+2      	; 0x24c <main+0x1a6>
     24a:	10 e0       	ldi	r17, 0x00	; 0
     24c:	11 23       	and	r17, r17
     24e:	29 f0       	breq	.+10     	; 0x25a <main+0x1b4>
		__ticks = 1;
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	9c 8f       	std	Y+28, r25	; 0x1c
     256:	8b 8f       	std	Y+27, r24	; 0x1b
     258:	46 c0       	rjmp	.+140    	; 0x2e6 <main+0x240>
	else if (__tmp > 65535)
     25a:	11 e0       	ldi	r17, 0x01	; 1
     25c:	6f 89       	ldd	r22, Y+23	; 0x17
     25e:	78 8d       	ldd	r23, Y+24	; 0x18
     260:	89 8d       	ldd	r24, Y+25	; 0x19
     262:	9a 8d       	ldd	r25, Y+26	; 0x1a
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	3f ef       	ldi	r19, 0xFF	; 255
     268:	4f e7       	ldi	r20, 0x7F	; 127
     26a:	57 e4       	ldi	r21, 0x47	; 71
     26c:	0e 94 5d 05 	call	0xaba	; 0xaba <__gtsf2>
     270:	18 16       	cp	r1, r24
     272:	0c f0       	brlt	.+2      	; 0x276 <main+0x1d0>
     274:	10 e0       	ldi	r17, 0x00	; 0
     276:	11 23       	and	r17, r17
     278:	61 f1       	breq	.+88     	; 0x2d2 <main+0x22c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     27a:	6b 89       	ldd	r22, Y+19	; 0x13
     27c:	7c 89       	ldd	r23, Y+20	; 0x14
     27e:	8d 89       	ldd	r24, Y+21	; 0x15
     280:	9e 89       	ldd	r25, Y+22	; 0x16
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e2       	ldi	r20, 0x20	; 32
     288:	51 e4       	ldi	r21, 0x41	; 65
     28a:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__mulsf3>
     28e:	dc 01       	movw	r26, r24
     290:	cb 01       	movw	r24, r22
     292:	bc 01       	movw	r22, r24
     294:	cd 01       	movw	r24, r26
     296:	0e 94 8f 02 	call	0x51e	; 0x51e <__fixunssfsi>
     29a:	dc 01       	movw	r26, r24
     29c:	cb 01       	movw	r24, r22
     29e:	9c 8f       	std	Y+28, r25	; 0x1c
     2a0:	8b 8f       	std	Y+27, r24	; 0x1b
     2a2:	12 c0       	rjmp	.+36     	; 0x2c8 <main+0x222>
     2a4:	89 e1       	ldi	r24, 0x19	; 25
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	9e 8f       	std	Y+30, r25	; 0x1e
     2aa:	8d 8f       	std	Y+29, r24	; 0x1d
     2ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2ae:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2b0:	8c 01       	movw	r16, r24
     2b2:	c8 01       	movw	r24, r16
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <main+0x20e>
     2b8:	8c 01       	movw	r16, r24
     2ba:	1e 8f       	std	Y+30, r17	; 0x1e
     2bc:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2be:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	9c 8f       	std	Y+28, r25	; 0x1c
     2c6:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2ca:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2cc:	00 97       	sbiw	r24, 0x00	; 0
     2ce:	51 f7       	brne	.-44     	; 0x2a4 <main+0x1fe>
     2d0:	17 c0       	rjmp	.+46     	; 0x300 <main+0x25a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2d2:	6f 89       	ldd	r22, Y+23	; 0x17
     2d4:	78 8d       	ldd	r23, Y+24	; 0x18
     2d6:	89 8d       	ldd	r24, Y+25	; 0x19
     2d8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2da:	0e 94 8f 02 	call	0x51e	; 0x51e <__fixunssfsi>
     2de:	dc 01       	movw	r26, r24
     2e0:	cb 01       	movw	r24, r22
     2e2:	9c 8f       	std	Y+28, r25	; 0x1c
     2e4:	8b 8f       	std	Y+27, r24	; 0x1b
     2e6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2e8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2ea:	98 a3       	std	Y+32, r25	; 0x20
     2ec:	8f 8f       	std	Y+31, r24	; 0x1f
     2ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2f0:	98 a1       	ldd	r25, Y+32	; 0x20
     2f2:	8c 01       	movw	r16, r24
     2f4:	c8 01       	movw	r24, r16
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <main+0x250>
     2fa:	8c 01       	movw	r16, r24
     2fc:	18 a3       	std	Y+32, r17	; 0x20
     2fe:	0f 8f       	std	Y+31, r16	; 0x1f
		{
			setCycle(i);
			_delay_ms(40);
		}
		
		for( int i = 255; i > 0; --i)
     300:	8b 81       	ldd	r24, Y+3	; 0x03
     302:	9c 81       	ldd	r25, Y+4	; 0x04
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	9c 83       	std	Y+4, r25	; 0x04
     308:	8b 83       	std	Y+3, r24	; 0x03
     30a:	8b 81       	ldd	r24, Y+3	; 0x03
     30c:	9c 81       	ldd	r25, Y+4	; 0x04
     30e:	18 16       	cp	r1, r24
     310:	19 06       	cpc	r1, r25
     312:	0c f4       	brge	.+2      	; 0x316 <main+0x270>
     314:	71 cf       	rjmp	.-286    	; 0x1f8 <main+0x152>
		{
			setCycle(i);
			_delay_ms(40);
		}
	}				
     316:	d8 ce       	rjmp	.-592    	; 0xc8 <main+0x22>

00000318 <initTimer>:
    return(0);
}

void initTimer( int dutycycle)
{
     318:	df 93       	push	r29
     31a:	cf 93       	push	r28
     31c:	00 d0       	rcall	.+0      	; 0x31e <initTimer+0x6>
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	9a 83       	std	Y+2, r25	; 0x02
     324:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = dutycycle;
     326:	87 e4       	ldi	r24, 0x47	; 71
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	29 81       	ldd	r18, Y+1	; 0x01
     32c:	fc 01       	movw	r30, r24
     32e:	20 83       	st	Z, r18
    DDRD |= (1 << PORTD6);         
     330:	8a e2       	ldi	r24, 0x2A	; 42
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	2a e2       	ldi	r18, 0x2A	; 42
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	f9 01       	movw	r30, r18
     33a:	20 81       	ld	r18, Z
     33c:	20 64       	ori	r18, 0x40	; 64
     33e:	fc 01       	movw	r30, r24
     340:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);
     342:	84 e4       	ldi	r24, 0x44	; 68
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	24 e4       	ldi	r18, 0x44	; 68
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	f9 01       	movw	r30, r18
     34c:	20 81       	ld	r18, Z
     34e:	20 68       	ori	r18, 0x80	; 128
     350:	fc 01       	movw	r30, r24
     352:	20 83       	st	Z, r18
    // set none-inverting mode

    TCCR0A |= (1 << WGM01) | (1 << WGM00);
     354:	84 e4       	ldi	r24, 0x44	; 68
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	24 e4       	ldi	r18, 0x44	; 68
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	f9 01       	movw	r30, r18
     35e:	20 81       	ld	r18, Z
     360:	23 60       	ori	r18, 0x03	; 3
     362:	fc 01       	movw	r30, r24
     364:	20 83       	st	Z, r18
    // set fast PWM Mode

    TCCR0B |= (1 << CS01);
     366:	85 e4       	ldi	r24, 0x45	; 69
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	25 e4       	ldi	r18, 0x45	; 69
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	f9 01       	movw	r30, r18
     370:	20 81       	ld	r18, Z
     372:	22 60       	ori	r18, 0x02	; 2
     374:	fc 01       	movw	r30, r24
     376:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
}
     378:	0f 90       	pop	r0
     37a:	0f 90       	pop	r0
     37c:	cf 91       	pop	r28
     37e:	df 91       	pop	r29
     380:	08 95       	ret

00000382 <initInterrupt0>:

void initInterrupt0()
{
     382:	df 93       	push	r29
     384:	cf 93       	push	r28
     386:	cd b7       	in	r28, 0x3d	; 61
     388:	de b7       	in	r29, 0x3e	; 62
	DDRD &= ~(1 << PORTD2);     // Clear the PB0 pin
     38a:	8a e2       	ldi	r24, 0x2A	; 42
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	2a e2       	ldi	r18, 0x2A	; 42
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	f9 01       	movw	r30, r18
     394:	20 81       	ld	r18, Z
     396:	2b 7f       	andi	r18, 0xFB	; 251
     398:	fc 01       	movw	r30, r24
     39a:	20 83       	st	Z, r18
	PORTD |= (1 << PIND2);
     39c:	8b e2       	ldi	r24, 0x2B	; 43
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	2b e2       	ldi	r18, 0x2B	; 43
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	f9 01       	movw	r30, r18
     3a6:	20 81       	ld	r18, Z
     3a8:	24 60       	ori	r18, 0x04	; 4
     3aa:	fc 01       	movw	r30, r24
     3ac:	20 83       	st	Z, r18
	PCMSK0 |= (1<<PIND2);
     3ae:	8b e6       	ldi	r24, 0x6B	; 107
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	2b e6       	ldi	r18, 0x6B	; 107
     3b4:	30 e0       	ldi	r19, 0x00	; 0
     3b6:	f9 01       	movw	r30, r18
     3b8:	20 81       	ld	r18, Z
     3ba:	24 60       	ori	r18, 0x04	; 4
     3bc:	fc 01       	movw	r30, r24
     3be:	20 83       	st	Z, r18
	MCUCR = (1<<ISC01) | (1<<ISC00); //falling edge triggers interrupt
     3c0:	85 e5       	ldi	r24, 0x55	; 85
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	23 e0       	ldi	r18, 0x03	; 3
     3c6:	fc 01       	movw	r30, r24
     3c8:	20 83       	st	Z, r18
}	
     3ca:	cf 91       	pop	r28
     3cc:	df 91       	pop	r29
     3ce:	08 95       	ret

000003d0 <setCycle>:


void setCycle(int dutycycle)
{
     3d0:	df 93       	push	r29
     3d2:	cf 93       	push	r28
     3d4:	00 d0       	rcall	.+0      	; 0x3d6 <setCycle+0x6>
     3d6:	cd b7       	in	r28, 0x3d	; 61
     3d8:	de b7       	in	r29, 0x3e	; 62
     3da:	9a 83       	std	Y+2, r25	; 0x02
     3dc:	89 83       	std	Y+1, r24	; 0x01
	cli();
     3de:	f8 94       	cli
	OCR0A = dutycycle;
     3e0:	87 e4       	ldi	r24, 0x47	; 71
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	29 81       	ldd	r18, Y+1	; 0x01
     3e6:	fc 01       	movw	r30, r24
     3e8:	20 83       	st	Z, r18
	sei();
     3ea:	78 94       	sei
}
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	cf 91       	pop	r28
     3f2:	df 91       	pop	r29
     3f4:	08 95       	ret

000003f6 <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     3f6:	1f 92       	push	r1
     3f8:	0f 92       	push	r0
     3fa:	0f b6       	in	r0, 0x3f	; 63
     3fc:	0f 92       	push	r0
     3fe:	11 24       	eor	r1, r1
     400:	8f 93       	push	r24
     402:	9f 93       	push	r25
     404:	ef 93       	push	r30
     406:	ff 93       	push	r31
     408:	df 93       	push	r29
     40a:	cf 93       	push	r28
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1<<RXC0)) )
     410:	00 00       	nop
     412:	80 ec       	ldi	r24, 0xC0	; 192
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	fc 01       	movw	r30, r24
     418:	80 81       	ld	r24, Z
     41a:	88 23       	and	r24, r24
     41c:	d4 f7       	brge	.-12     	; 0x412 <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	dim = UDR0;
     41e:	86 ec       	ldi	r24, 0xC6	; 198
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	fc 01       	movw	r30, r24
     424:	80 81       	ld	r24, Z
     426:	88 2f       	mov	r24, r24
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	90 93 09 01 	sts	0x0109, r25
     42e:	80 93 08 01 	sts	0x0108, r24
	rxflag = 1;
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	80 93 0c 01 	sts	0x010C, r24
	return UDR0;
     438:	86 ec       	ldi	r24, 0xC6	; 198
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	fc 01       	movw	r30, r24
     43e:	80 81       	ld	r24, Z
}
     440:	cf 91       	pop	r28
     442:	df 91       	pop	r29
     444:	ff 91       	pop	r31
     446:	ef 91       	pop	r30
     448:	9f 91       	pop	r25
     44a:	8f 91       	pop	r24
     44c:	0f 90       	pop	r0
     44e:	0f be       	out	0x3f, r0	; 63
     450:	0f 90       	pop	r0
     452:	1f 90       	pop	r1
     454:	18 95       	reti

00000456 <__vector_12>:

uint8_t i=0; 
ISR(TIMER1_COMPB_vect){ 
     456:	1f 92       	push	r1
     458:	0f 92       	push	r0
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	0f 92       	push	r0
     45e:	11 24       	eor	r1, r1
     460:	df 93       	push	r29
     462:	cf 93       	push	r28
     464:	cd b7       	in	r28, 0x3d	; 61
     466:	de b7       	in	r29, 0x3e	; 62
   
}
     468:	cf 91       	pop	r28
     46a:	df 91       	pop	r29
     46c:	0f 90       	pop	r0
     46e:	0f be       	out	0x3f, r0	; 63
     470:	0f 90       	pop	r0
     472:	1f 90       	pop	r1
     474:	18 95       	reti

00000476 <__vector_1>:

ISR(INT0_vect)
{
     476:	1f 92       	push	r1
     478:	0f 92       	push	r0
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	0f 92       	push	r0
     47e:	11 24       	eor	r1, r1
     480:	df 93       	push	r29
     482:	cf 93       	push	r28
     484:	cd b7       	in	r28, 0x3d	; 61
     486:	de b7       	in	r29, 0x3e	; 62
	
     488:	cf 91       	pop	r28
     48a:	df 91       	pop	r29
     48c:	0f 90       	pop	r0
     48e:	0f be       	out	0x3f, r0	; 63
     490:	0f 90       	pop	r0
     492:	1f 90       	pop	r1
     494:	18 95       	reti

00000496 <USART_Init>:
 */ 

#include <avr\io.h> 

void USART_Init( unsigned int ubrr)
{
     496:	df 93       	push	r29
     498:	cf 93       	push	r28
     49a:	00 d0       	rcall	.+0      	; 0x49c <USART_Init+0x6>
     49c:	cd b7       	in	r28, 0x3d	; 61
     49e:	de b7       	in	r29, 0x3e	; 62
     4a0:	9a 83       	std	Y+2, r25	; 0x02
     4a2:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     4a4:	85 ec       	ldi	r24, 0xC5	; 197
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	29 81       	ldd	r18, Y+1	; 0x01
     4aa:	3a 81       	ldd	r19, Y+2	; 0x02
     4ac:	23 2f       	mov	r18, r19
     4ae:	33 27       	eor	r19, r19
     4b0:	fc 01       	movw	r30, r24
     4b2:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     4b4:	84 ec       	ldi	r24, 0xC4	; 196
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	29 81       	ldd	r18, Y+1	; 0x01
     4ba:	fc 01       	movw	r30, r24
     4bc:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     4be:	81 ec       	ldi	r24, 0xC1	; 193
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	28 e9       	ldi	r18, 0x98	; 152
     4c4:	fc 01       	movw	r30, r24
     4c6:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     4c8:	82 ec       	ldi	r24, 0xC2	; 194
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	26 e0       	ldi	r18, 0x06	; 6
     4ce:	fc 01       	movw	r30, r24
     4d0:	20 83       	st	Z, r18
}
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	cf 91       	pop	r28
     4d8:	df 91       	pop	r29
     4da:	08 95       	ret

000004dc <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     4dc:	df 93       	push	r29
     4de:	cf 93       	push	r28
     4e0:	0f 92       	push	r0
     4e2:	cd b7       	in	r28, 0x3d	; 61
     4e4:	de b7       	in	r29, 0x3e	; 62
     4e6:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     4e8:	00 00       	nop
     4ea:	80 ec       	ldi	r24, 0xC0	; 192
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	fc 01       	movw	r30, r24
     4f0:	80 81       	ld	r24, Z
     4f2:	88 2f       	mov	r24, r24
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	80 72       	andi	r24, 0x20	; 32
     4f8:	90 70       	andi	r25, 0x00	; 0
     4fa:	00 97       	sbiw	r24, 0x00	; 0
     4fc:	b1 f3       	breq	.-20     	; 0x4ea <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     4fe:	86 ec       	ldi	r24, 0xC6	; 198
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	29 81       	ldd	r18, Y+1	; 0x01
     504:	fc 01       	movw	r30, r24
     506:	20 83       	st	Z, r18
}
     508:	0f 90       	pop	r0
     50a:	cf 91       	pop	r28
     50c:	df 91       	pop	r29
     50e:	08 95       	ret

00000510 <USART_Receive>:


unsigned char USART_Receive( void )
{
     510:	df 93       	push	r29
     512:	cf 93       	push	r28
     514:	cd b7       	in	r28, 0x3d	; 61
     516:	de b7       	in	r29, 0x3e	; 62
	
}
     518:	cf 91       	pop	r28
     51a:	df 91       	pop	r29
     51c:	08 95       	ret

0000051e <__fixunssfsi>:
     51e:	ef 92       	push	r14
     520:	ff 92       	push	r15
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	7b 01       	movw	r14, r22
     528:	8c 01       	movw	r16, r24
     52a:	20 e0       	ldi	r18, 0x00	; 0
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	40 e0       	ldi	r20, 0x00	; 0
     530:	5f e4       	ldi	r21, 0x4F	; 79
     532:	0e 94 8d 05 	call	0xb1a	; 0xb1a <__gesf2>
     536:	87 fd       	sbrc	r24, 7
     538:	11 c0       	rjmp	.+34     	; 0x55c <__fixunssfsi+0x3e>
     53a:	c8 01       	movw	r24, r16
     53c:	b7 01       	movw	r22, r14
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	40 e0       	ldi	r20, 0x00	; 0
     544:	5f e4       	ldi	r21, 0x4F	; 79
     546:	0e 94 32 04 	call	0x864	; 0x864 <__subsf3>
     54a:	0e 94 ed 05 	call	0xbda	; 0xbda <__fixsfsi>
     54e:	9b 01       	movw	r18, r22
     550:	ac 01       	movw	r20, r24
     552:	20 50       	subi	r18, 0x00	; 0
     554:	30 40       	sbci	r19, 0x00	; 0
     556:	40 40       	sbci	r20, 0x00	; 0
     558:	50 48       	sbci	r21, 0x80	; 128
     55a:	06 c0       	rjmp	.+12     	; 0x568 <__fixunssfsi+0x4a>
     55c:	c8 01       	movw	r24, r16
     55e:	b7 01       	movw	r22, r14
     560:	0e 94 ed 05 	call	0xbda	; 0xbda <__fixsfsi>
     564:	9b 01       	movw	r18, r22
     566:	ac 01       	movw	r20, r24
     568:	b9 01       	movw	r22, r18
     56a:	ca 01       	movw	r24, r20
     56c:	1f 91       	pop	r17
     56e:	0f 91       	pop	r16
     570:	ff 90       	pop	r15
     572:	ef 90       	pop	r14
     574:	08 95       	ret

00000576 <_fpadd_parts>:
     576:	a0 e0       	ldi	r26, 0x00	; 0
     578:	b0 e0       	ldi	r27, 0x00	; 0
     57a:	e1 ec       	ldi	r30, 0xC1	; 193
     57c:	f2 e0       	ldi	r31, 0x02	; 2
     57e:	0c 94 d3 07 	jmp	0xfa6	; 0xfa6 <__prologue_saves__+0x8>
     582:	fc 01       	movw	r30, r24
     584:	ea 01       	movw	r28, r20
     586:	80 81       	ld	r24, Z
     588:	82 30       	cpi	r24, 0x02	; 2
     58a:	08 f4       	brcc	.+2      	; 0x58e <_fpadd_parts+0x18>
     58c:	38 c1       	rjmp	.+624    	; 0x7fe <_fpadd_parts+0x288>
     58e:	db 01       	movw	r26, r22
     590:	9c 91       	ld	r25, X
     592:	92 30       	cpi	r25, 0x02	; 2
     594:	08 f4       	brcc	.+2      	; 0x598 <_fpadd_parts+0x22>
     596:	30 c1       	rjmp	.+608    	; 0x7f8 <_fpadd_parts+0x282>
     598:	84 30       	cpi	r24, 0x04	; 4
     59a:	59 f4       	brne	.+22     	; 0x5b2 <_fpadd_parts+0x3c>
     59c:	94 30       	cpi	r25, 0x04	; 4
     59e:	09 f0       	breq	.+2      	; 0x5a2 <_fpadd_parts+0x2c>
     5a0:	2e c1       	rjmp	.+604    	; 0x7fe <_fpadd_parts+0x288>
     5a2:	91 81       	ldd	r25, Z+1	; 0x01
     5a4:	11 96       	adiw	r26, 0x01	; 1
     5a6:	8c 91       	ld	r24, X
     5a8:	11 97       	sbiw	r26, 0x01	; 1
     5aa:	98 17       	cp	r25, r24
     5ac:	09 f0       	breq	.+2      	; 0x5b0 <_fpadd_parts+0x3a>
     5ae:	21 c1       	rjmp	.+578    	; 0x7f2 <_fpadd_parts+0x27c>
     5b0:	26 c1       	rjmp	.+588    	; 0x7fe <_fpadd_parts+0x288>
     5b2:	94 30       	cpi	r25, 0x04	; 4
     5b4:	09 f4       	brne	.+2      	; 0x5b8 <_fpadd_parts+0x42>
     5b6:	20 c1       	rjmp	.+576    	; 0x7f8 <_fpadd_parts+0x282>
     5b8:	92 30       	cpi	r25, 0x02	; 2
     5ba:	b1 f4       	brne	.+44     	; 0x5e8 <_fpadd_parts+0x72>
     5bc:	82 30       	cpi	r24, 0x02	; 2
     5be:	09 f0       	breq	.+2      	; 0x5c2 <_fpadd_parts+0x4c>
     5c0:	1e c1       	rjmp	.+572    	; 0x7fe <_fpadd_parts+0x288>
     5c2:	ca 01       	movw	r24, r20
     5c4:	af 01       	movw	r20, r30
     5c6:	28 e0       	ldi	r18, 0x08	; 8
     5c8:	da 01       	movw	r26, r20
     5ca:	0d 90       	ld	r0, X+
     5cc:	ad 01       	movw	r20, r26
     5ce:	dc 01       	movw	r26, r24
     5d0:	0d 92       	st	X+, r0
     5d2:	cd 01       	movw	r24, r26
     5d4:	21 50       	subi	r18, 0x01	; 1
     5d6:	c1 f7       	brne	.-16     	; 0x5c8 <_fpadd_parts+0x52>
     5d8:	db 01       	movw	r26, r22
     5da:	11 96       	adiw	r26, 0x01	; 1
     5dc:	8c 91       	ld	r24, X
     5de:	11 97       	sbiw	r26, 0x01	; 1
     5e0:	91 81       	ldd	r25, Z+1	; 0x01
     5e2:	89 23       	and	r24, r25
     5e4:	89 83       	std	Y+1, r24	; 0x01
     5e6:	0a c1       	rjmp	.+532    	; 0x7fc <_fpadd_parts+0x286>
     5e8:	82 30       	cpi	r24, 0x02	; 2
     5ea:	09 f4       	brne	.+2      	; 0x5ee <_fpadd_parts+0x78>
     5ec:	05 c1       	rjmp	.+522    	; 0x7f8 <_fpadd_parts+0x282>
     5ee:	c2 80       	ldd	r12, Z+2	; 0x02
     5f0:	d3 80       	ldd	r13, Z+3	; 0x03
     5f2:	db 01       	movw	r26, r22
     5f4:	12 96       	adiw	r26, 0x02	; 2
     5f6:	6d 90       	ld	r6, X+
     5f8:	7c 90       	ld	r7, X
     5fa:	13 97       	sbiw	r26, 0x03	; 3
     5fc:	24 81       	ldd	r18, Z+4	; 0x04
     5fe:	35 81       	ldd	r19, Z+5	; 0x05
     600:	46 81       	ldd	r20, Z+6	; 0x06
     602:	57 81       	ldd	r21, Z+7	; 0x07
     604:	14 96       	adiw	r26, 0x04	; 4
     606:	ed 90       	ld	r14, X+
     608:	fd 90       	ld	r15, X+
     60a:	0d 91       	ld	r16, X+
     60c:	1c 91       	ld	r17, X
     60e:	17 97       	sbiw	r26, 0x07	; 7
     610:	c6 01       	movw	r24, r12
     612:	86 19       	sub	r24, r6
     614:	97 09       	sbc	r25, r7
     616:	5c 01       	movw	r10, r24
     618:	97 ff       	sbrs	r25, 7
     61a:	04 c0       	rjmp	.+8      	; 0x624 <_fpadd_parts+0xae>
     61c:	aa 24       	eor	r10, r10
     61e:	bb 24       	eor	r11, r11
     620:	a8 1a       	sub	r10, r24
     622:	b9 0a       	sbc	r11, r25
     624:	b0 e2       	ldi	r27, 0x20	; 32
     626:	ab 16       	cp	r10, r27
     628:	b1 04       	cpc	r11, r1
     62a:	0c f0       	brlt	.+2      	; 0x62e <_fpadd_parts+0xb8>
     62c:	61 c0       	rjmp	.+194    	; 0x6f0 <_fpadd_parts+0x17a>
     62e:	18 16       	cp	r1, r24
     630:	19 06       	cpc	r1, r25
     632:	6c f5       	brge	.+90     	; 0x68e <_fpadd_parts+0x118>
     634:	37 01       	movw	r6, r14
     636:	48 01       	movw	r8, r16
     638:	0a 2c       	mov	r0, r10
     63a:	04 c0       	rjmp	.+8      	; 0x644 <_fpadd_parts+0xce>
     63c:	96 94       	lsr	r9
     63e:	87 94       	ror	r8
     640:	77 94       	ror	r7
     642:	67 94       	ror	r6
     644:	0a 94       	dec	r0
     646:	d2 f7       	brpl	.-12     	; 0x63c <_fpadd_parts+0xc6>
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	a0 e0       	ldi	r26, 0x00	; 0
     64e:	b0 e0       	ldi	r27, 0x00	; 0
     650:	0a 2c       	mov	r0, r10
     652:	04 c0       	rjmp	.+8      	; 0x65c <_fpadd_parts+0xe6>
     654:	88 0f       	add	r24, r24
     656:	99 1f       	adc	r25, r25
     658:	aa 1f       	adc	r26, r26
     65a:	bb 1f       	adc	r27, r27
     65c:	0a 94       	dec	r0
     65e:	d2 f7       	brpl	.-12     	; 0x654 <_fpadd_parts+0xde>
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	a1 09       	sbc	r26, r1
     664:	b1 09       	sbc	r27, r1
     666:	8e 21       	and	r24, r14
     668:	9f 21       	and	r25, r15
     66a:	a0 23       	and	r26, r16
     66c:	b1 23       	and	r27, r17
     66e:	ee 24       	eor	r14, r14
     670:	ff 24       	eor	r15, r15
     672:	87 01       	movw	r16, r14
     674:	e3 94       	inc	r14
     676:	00 97       	sbiw	r24, 0x00	; 0
     678:	a1 05       	cpc	r26, r1
     67a:	b1 05       	cpc	r27, r1
     67c:	19 f4       	brne	.+6      	; 0x684 <_fpadd_parts+0x10e>
     67e:	ee 24       	eor	r14, r14
     680:	ff 24       	eor	r15, r15
     682:	87 01       	movw	r16, r14
     684:	e6 28       	or	r14, r6
     686:	f7 28       	or	r15, r7
     688:	08 29       	or	r16, r8
     68a:	19 29       	or	r17, r9
     68c:	3c c0       	rjmp	.+120    	; 0x706 <_fpadd_parts+0x190>
     68e:	00 97       	sbiw	r24, 0x00	; 0
     690:	d1 f1       	breq	.+116    	; 0x706 <_fpadd_parts+0x190>
     692:	ca 0c       	add	r12, r10
     694:	db 1c       	adc	r13, r11
     696:	39 01       	movw	r6, r18
     698:	4a 01       	movw	r8, r20
     69a:	0a 2c       	mov	r0, r10
     69c:	04 c0       	rjmp	.+8      	; 0x6a6 <_fpadd_parts+0x130>
     69e:	96 94       	lsr	r9
     6a0:	87 94       	ror	r8
     6a2:	77 94       	ror	r7
     6a4:	67 94       	ror	r6
     6a6:	0a 94       	dec	r0
     6a8:	d2 f7       	brpl	.-12     	; 0x69e <_fpadd_parts+0x128>
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	a0 e0       	ldi	r26, 0x00	; 0
     6b0:	b0 e0       	ldi	r27, 0x00	; 0
     6b2:	0a 2c       	mov	r0, r10
     6b4:	04 c0       	rjmp	.+8      	; 0x6be <_fpadd_parts+0x148>
     6b6:	88 0f       	add	r24, r24
     6b8:	99 1f       	adc	r25, r25
     6ba:	aa 1f       	adc	r26, r26
     6bc:	bb 1f       	adc	r27, r27
     6be:	0a 94       	dec	r0
     6c0:	d2 f7       	brpl	.-12     	; 0x6b6 <_fpadd_parts+0x140>
     6c2:	01 97       	sbiw	r24, 0x01	; 1
     6c4:	a1 09       	sbc	r26, r1
     6c6:	b1 09       	sbc	r27, r1
     6c8:	82 23       	and	r24, r18
     6ca:	93 23       	and	r25, r19
     6cc:	a4 23       	and	r26, r20
     6ce:	b5 23       	and	r27, r21
     6d0:	21 e0       	ldi	r18, 0x01	; 1
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	40 e0       	ldi	r20, 0x00	; 0
     6d6:	50 e0       	ldi	r21, 0x00	; 0
     6d8:	00 97       	sbiw	r24, 0x00	; 0
     6da:	a1 05       	cpc	r26, r1
     6dc:	b1 05       	cpc	r27, r1
     6de:	19 f4       	brne	.+6      	; 0x6e6 <_fpadd_parts+0x170>
     6e0:	20 e0       	ldi	r18, 0x00	; 0
     6e2:	30 e0       	ldi	r19, 0x00	; 0
     6e4:	a9 01       	movw	r20, r18
     6e6:	26 29       	or	r18, r6
     6e8:	37 29       	or	r19, r7
     6ea:	48 29       	or	r20, r8
     6ec:	59 29       	or	r21, r9
     6ee:	0b c0       	rjmp	.+22     	; 0x706 <_fpadd_parts+0x190>
     6f0:	6c 14       	cp	r6, r12
     6f2:	7d 04       	cpc	r7, r13
     6f4:	24 f4       	brge	.+8      	; 0x6fe <_fpadd_parts+0x188>
     6f6:	ee 24       	eor	r14, r14
     6f8:	ff 24       	eor	r15, r15
     6fa:	87 01       	movw	r16, r14
     6fc:	04 c0       	rjmp	.+8      	; 0x706 <_fpadd_parts+0x190>
     6fe:	63 01       	movw	r12, r6
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	a9 01       	movw	r20, r18
     706:	81 81       	ldd	r24, Z+1	; 0x01
     708:	fb 01       	movw	r30, r22
     70a:	91 81       	ldd	r25, Z+1	; 0x01
     70c:	89 17       	cp	r24, r25
     70e:	09 f4       	brne	.+2      	; 0x712 <_fpadd_parts+0x19c>
     710:	45 c0       	rjmp	.+138    	; 0x79c <_fpadd_parts+0x226>
     712:	88 23       	and	r24, r24
     714:	49 f0       	breq	.+18     	; 0x728 <_fpadd_parts+0x1b2>
     716:	d8 01       	movw	r26, r16
     718:	c7 01       	movw	r24, r14
     71a:	82 1b       	sub	r24, r18
     71c:	93 0b       	sbc	r25, r19
     71e:	a4 0b       	sbc	r26, r20
     720:	b5 0b       	sbc	r27, r21
     722:	9c 01       	movw	r18, r24
     724:	ad 01       	movw	r20, r26
     726:	04 c0       	rjmp	.+8      	; 0x730 <_fpadd_parts+0x1ba>
     728:	2e 19       	sub	r18, r14
     72a:	3f 09       	sbc	r19, r15
     72c:	40 0b       	sbc	r20, r16
     72e:	51 0b       	sbc	r21, r17
     730:	57 fd       	sbrc	r21, 7
     732:	04 c0       	rjmp	.+8      	; 0x73c <_fpadd_parts+0x1c6>
     734:	19 82       	std	Y+1, r1	; 0x01
     736:	db 82       	std	Y+3, r13	; 0x03
     738:	ca 82       	std	Y+2, r12	; 0x02
     73a:	0b c0       	rjmp	.+22     	; 0x752 <_fpadd_parts+0x1dc>
     73c:	81 e0       	ldi	r24, 0x01	; 1
     73e:	89 83       	std	Y+1, r24	; 0x01
     740:	db 82       	std	Y+3, r13	; 0x03
     742:	ca 82       	std	Y+2, r12	; 0x02
     744:	50 95       	com	r21
     746:	40 95       	com	r20
     748:	30 95       	com	r19
     74a:	21 95       	neg	r18
     74c:	3f 4f       	sbci	r19, 0xFF	; 255
     74e:	4f 4f       	sbci	r20, 0xFF	; 255
     750:	5f 4f       	sbci	r21, 0xFF	; 255
     752:	2c 83       	std	Y+4, r18	; 0x04
     754:	3d 83       	std	Y+5, r19	; 0x05
     756:	4e 83       	std	Y+6, r20	; 0x06
     758:	5f 83       	std	Y+7, r21	; 0x07
     75a:	0d c0       	rjmp	.+26     	; 0x776 <_fpadd_parts+0x200>
     75c:	88 0f       	add	r24, r24
     75e:	99 1f       	adc	r25, r25
     760:	aa 1f       	adc	r26, r26
     762:	bb 1f       	adc	r27, r27
     764:	8c 83       	std	Y+4, r24	; 0x04
     766:	9d 83       	std	Y+5, r25	; 0x05
     768:	ae 83       	std	Y+6, r26	; 0x06
     76a:	bf 83       	std	Y+7, r27	; 0x07
     76c:	8a 81       	ldd	r24, Y+2	; 0x02
     76e:	9b 81       	ldd	r25, Y+3	; 0x03
     770:	01 97       	sbiw	r24, 0x01	; 1
     772:	9b 83       	std	Y+3, r25	; 0x03
     774:	8a 83       	std	Y+2, r24	; 0x02
     776:	8c 81       	ldd	r24, Y+4	; 0x04
     778:	9d 81       	ldd	r25, Y+5	; 0x05
     77a:	ae 81       	ldd	r26, Y+6	; 0x06
     77c:	bf 81       	ldd	r27, Y+7	; 0x07
     77e:	9c 01       	movw	r18, r24
     780:	ad 01       	movw	r20, r26
     782:	21 50       	subi	r18, 0x01	; 1
     784:	30 40       	sbci	r19, 0x00	; 0
     786:	40 40       	sbci	r20, 0x00	; 0
     788:	50 40       	sbci	r21, 0x00	; 0
     78a:	2f 3f       	cpi	r18, 0xFF	; 255
     78c:	ef ef       	ldi	r30, 0xFF	; 255
     78e:	3e 07       	cpc	r19, r30
     790:	ef ef       	ldi	r30, 0xFF	; 255
     792:	4e 07       	cpc	r20, r30
     794:	ef e3       	ldi	r30, 0x3F	; 63
     796:	5e 07       	cpc	r21, r30
     798:	08 f3       	brcs	.-62     	; 0x75c <_fpadd_parts+0x1e6>
     79a:	0b c0       	rjmp	.+22     	; 0x7b2 <_fpadd_parts+0x23c>
     79c:	89 83       	std	Y+1, r24	; 0x01
     79e:	db 82       	std	Y+3, r13	; 0x03
     7a0:	ca 82       	std	Y+2, r12	; 0x02
     7a2:	2e 0d       	add	r18, r14
     7a4:	3f 1d       	adc	r19, r15
     7a6:	40 1f       	adc	r20, r16
     7a8:	51 1f       	adc	r21, r17
     7aa:	2c 83       	std	Y+4, r18	; 0x04
     7ac:	3d 83       	std	Y+5, r19	; 0x05
     7ae:	4e 83       	std	Y+6, r20	; 0x06
     7b0:	5f 83       	std	Y+7, r21	; 0x07
     7b2:	83 e0       	ldi	r24, 0x03	; 3
     7b4:	88 83       	st	Y, r24
     7b6:	2c 81       	ldd	r18, Y+4	; 0x04
     7b8:	3d 81       	ldd	r19, Y+5	; 0x05
     7ba:	4e 81       	ldd	r20, Y+6	; 0x06
     7bc:	5f 81       	ldd	r21, Y+7	; 0x07
     7be:	57 ff       	sbrs	r21, 7
     7c0:	1d c0       	rjmp	.+58     	; 0x7fc <_fpadd_parts+0x286>
     7c2:	da 01       	movw	r26, r20
     7c4:	c9 01       	movw	r24, r18
     7c6:	81 70       	andi	r24, 0x01	; 1
     7c8:	90 70       	andi	r25, 0x00	; 0
     7ca:	a0 70       	andi	r26, 0x00	; 0
     7cc:	b0 70       	andi	r27, 0x00	; 0
     7ce:	56 95       	lsr	r21
     7d0:	47 95       	ror	r20
     7d2:	37 95       	ror	r19
     7d4:	27 95       	ror	r18
     7d6:	82 2b       	or	r24, r18
     7d8:	93 2b       	or	r25, r19
     7da:	a4 2b       	or	r26, r20
     7dc:	b5 2b       	or	r27, r21
     7de:	8c 83       	std	Y+4, r24	; 0x04
     7e0:	9d 83       	std	Y+5, r25	; 0x05
     7e2:	ae 83       	std	Y+6, r26	; 0x06
     7e4:	bf 83       	std	Y+7, r27	; 0x07
     7e6:	8a 81       	ldd	r24, Y+2	; 0x02
     7e8:	9b 81       	ldd	r25, Y+3	; 0x03
     7ea:	01 96       	adiw	r24, 0x01	; 1
     7ec:	9b 83       	std	Y+3, r25	; 0x03
     7ee:	8a 83       	std	Y+2, r24	; 0x02
     7f0:	05 c0       	rjmp	.+10     	; 0x7fc <_fpadd_parts+0x286>
     7f2:	e0 e0       	ldi	r30, 0x00	; 0
     7f4:	f1 e0       	ldi	r31, 0x01	; 1
     7f6:	03 c0       	rjmp	.+6      	; 0x7fe <_fpadd_parts+0x288>
     7f8:	fb 01       	movw	r30, r22
     7fa:	01 c0       	rjmp	.+2      	; 0x7fe <_fpadd_parts+0x288>
     7fc:	fe 01       	movw	r30, r28
     7fe:	cf 01       	movw	r24, r30
     800:	cd b7       	in	r28, 0x3d	; 61
     802:	de b7       	in	r29, 0x3e	; 62
     804:	ee e0       	ldi	r30, 0x0E	; 14
     806:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__epilogue_restores__+0x8>

0000080a <__addsf3>:
     80a:	a0 e2       	ldi	r26, 0x20	; 32
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	eb e0       	ldi	r30, 0x0B	; 11
     810:	f4 e0       	ldi	r31, 0x04	; 4
     812:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__prologue_saves__+0x18>
     816:	69 83       	std	Y+1, r22	; 0x01
     818:	7a 83       	std	Y+2, r23	; 0x02
     81a:	8b 83       	std	Y+3, r24	; 0x03
     81c:	9c 83       	std	Y+4, r25	; 0x04
     81e:	2d 83       	std	Y+5, r18	; 0x05
     820:	3e 83       	std	Y+6, r19	; 0x06
     822:	4f 83       	std	Y+7, r20	; 0x07
     824:	58 87       	std	Y+8, r21	; 0x08
     826:	89 e0       	ldi	r24, 0x09	; 9
     828:	e8 2e       	mov	r14, r24
     82a:	f1 2c       	mov	r15, r1
     82c:	ec 0e       	add	r14, r28
     82e:	fd 1e       	adc	r15, r29
     830:	ce 01       	movw	r24, r28
     832:	01 96       	adiw	r24, 0x01	; 1
     834:	b7 01       	movw	r22, r14
     836:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     83a:	8e 01       	movw	r16, r28
     83c:	0f 5e       	subi	r16, 0xEF	; 239
     83e:	1f 4f       	sbci	r17, 0xFF	; 255
     840:	ce 01       	movw	r24, r28
     842:	05 96       	adiw	r24, 0x05	; 5
     844:	b8 01       	movw	r22, r16
     846:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     84a:	c7 01       	movw	r24, r14
     84c:	b8 01       	movw	r22, r16
     84e:	ae 01       	movw	r20, r28
     850:	47 5e       	subi	r20, 0xE7	; 231
     852:	5f 4f       	sbci	r21, 0xFF	; 255
     854:	0e 94 bb 02 	call	0x576	; 0x576 <_fpadd_parts>
     858:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__pack_f>
     85c:	a0 96       	adiw	r28, 0x20	; 32
     85e:	e6 e0       	ldi	r30, 0x06	; 6
     860:	0c 94 f7 07 	jmp	0xfee	; 0xfee <__epilogue_restores__+0x18>

00000864 <__subsf3>:
     864:	a0 e2       	ldi	r26, 0x20	; 32
     866:	b0 e0       	ldi	r27, 0x00	; 0
     868:	e8 e3       	ldi	r30, 0x38	; 56
     86a:	f4 e0       	ldi	r31, 0x04	; 4
     86c:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__prologue_saves__+0x18>
     870:	69 83       	std	Y+1, r22	; 0x01
     872:	7a 83       	std	Y+2, r23	; 0x02
     874:	8b 83       	std	Y+3, r24	; 0x03
     876:	9c 83       	std	Y+4, r25	; 0x04
     878:	2d 83       	std	Y+5, r18	; 0x05
     87a:	3e 83       	std	Y+6, r19	; 0x06
     87c:	4f 83       	std	Y+7, r20	; 0x07
     87e:	58 87       	std	Y+8, r21	; 0x08
     880:	8e 01       	movw	r16, r28
     882:	07 5f       	subi	r16, 0xF7	; 247
     884:	1f 4f       	sbci	r17, 0xFF	; 255
     886:	ce 01       	movw	r24, r28
     888:	01 96       	adiw	r24, 0x01	; 1
     88a:	b8 01       	movw	r22, r16
     88c:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     890:	91 e1       	ldi	r25, 0x11	; 17
     892:	e9 2e       	mov	r14, r25
     894:	f1 2c       	mov	r15, r1
     896:	ec 0e       	add	r14, r28
     898:	fd 1e       	adc	r15, r29
     89a:	ce 01       	movw	r24, r28
     89c:	05 96       	adiw	r24, 0x05	; 5
     89e:	b7 01       	movw	r22, r14
     8a0:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     8a4:	8a 89       	ldd	r24, Y+18	; 0x12
     8a6:	91 e0       	ldi	r25, 0x01	; 1
     8a8:	89 27       	eor	r24, r25
     8aa:	8a 8b       	std	Y+18, r24	; 0x12
     8ac:	c8 01       	movw	r24, r16
     8ae:	b7 01       	movw	r22, r14
     8b0:	ae 01       	movw	r20, r28
     8b2:	47 5e       	subi	r20, 0xE7	; 231
     8b4:	5f 4f       	sbci	r21, 0xFF	; 255
     8b6:	0e 94 bb 02 	call	0x576	; 0x576 <_fpadd_parts>
     8ba:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__pack_f>
     8be:	a0 96       	adiw	r28, 0x20	; 32
     8c0:	e6 e0       	ldi	r30, 0x06	; 6
     8c2:	0c 94 f7 07 	jmp	0xfee	; 0xfee <__epilogue_restores__+0x18>

000008c6 <__mulsf3>:
     8c6:	a0 e2       	ldi	r26, 0x20	; 32
     8c8:	b0 e0       	ldi	r27, 0x00	; 0
     8ca:	e9 e6       	ldi	r30, 0x69	; 105
     8cc:	f4 e0       	ldi	r31, 0x04	; 4
     8ce:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__prologue_saves__>
     8d2:	69 83       	std	Y+1, r22	; 0x01
     8d4:	7a 83       	std	Y+2, r23	; 0x02
     8d6:	8b 83       	std	Y+3, r24	; 0x03
     8d8:	9c 83       	std	Y+4, r25	; 0x04
     8da:	2d 83       	std	Y+5, r18	; 0x05
     8dc:	3e 83       	std	Y+6, r19	; 0x06
     8de:	4f 83       	std	Y+7, r20	; 0x07
     8e0:	58 87       	std	Y+8, r21	; 0x08
     8e2:	ce 01       	movw	r24, r28
     8e4:	01 96       	adiw	r24, 0x01	; 1
     8e6:	be 01       	movw	r22, r28
     8e8:	67 5f       	subi	r22, 0xF7	; 247
     8ea:	7f 4f       	sbci	r23, 0xFF	; 255
     8ec:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     8f0:	ce 01       	movw	r24, r28
     8f2:	05 96       	adiw	r24, 0x05	; 5
     8f4:	be 01       	movw	r22, r28
     8f6:	6f 5e       	subi	r22, 0xEF	; 239
     8f8:	7f 4f       	sbci	r23, 0xFF	; 255
     8fa:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     8fe:	99 85       	ldd	r25, Y+9	; 0x09
     900:	92 30       	cpi	r25, 0x02	; 2
     902:	78 f0       	brcs	.+30     	; 0x922 <__stack+0x23>
     904:	89 89       	ldd	r24, Y+17	; 0x11
     906:	82 30       	cpi	r24, 0x02	; 2
     908:	c0 f0       	brcs	.+48     	; 0x93a <__stack+0x3b>
     90a:	94 30       	cpi	r25, 0x04	; 4
     90c:	19 f4       	brne	.+6      	; 0x914 <__stack+0x15>
     90e:	82 30       	cpi	r24, 0x02	; 2
     910:	41 f4       	brne	.+16     	; 0x922 <__stack+0x23>
     912:	cb c0       	rjmp	.+406    	; 0xaaa <__stack+0x1ab>
     914:	84 30       	cpi	r24, 0x04	; 4
     916:	19 f4       	brne	.+6      	; 0x91e <__stack+0x1f>
     918:	92 30       	cpi	r25, 0x02	; 2
     91a:	79 f4       	brne	.+30     	; 0x93a <__stack+0x3b>
     91c:	c6 c0       	rjmp	.+396    	; 0xaaa <__stack+0x1ab>
     91e:	92 30       	cpi	r25, 0x02	; 2
     920:	51 f4       	brne	.+20     	; 0x936 <__stack+0x37>
     922:	81 e0       	ldi	r24, 0x01	; 1
     924:	2a 85       	ldd	r18, Y+10	; 0x0a
     926:	9a 89       	ldd	r25, Y+18	; 0x12
     928:	29 17       	cp	r18, r25
     92a:	09 f4       	brne	.+2      	; 0x92e <__stack+0x2f>
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	8a 87       	std	Y+10, r24	; 0x0a
     930:	ce 01       	movw	r24, r28
     932:	09 96       	adiw	r24, 0x09	; 9
     934:	bc c0       	rjmp	.+376    	; 0xaae <__stack+0x1af>
     936:	82 30       	cpi	r24, 0x02	; 2
     938:	51 f4       	brne	.+20     	; 0x94e <__stack+0x4f>
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	2a 85       	ldd	r18, Y+10	; 0x0a
     93e:	9a 89       	ldd	r25, Y+18	; 0x12
     940:	29 17       	cp	r18, r25
     942:	09 f4       	brne	.+2      	; 0x946 <__stack+0x47>
     944:	80 e0       	ldi	r24, 0x00	; 0
     946:	8a 8b       	std	Y+18, r24	; 0x12
     948:	ce 01       	movw	r24, r28
     94a:	41 96       	adiw	r24, 0x11	; 17
     94c:	b0 c0       	rjmp	.+352    	; 0xaae <__stack+0x1af>
     94e:	6d 84       	ldd	r6, Y+13	; 0x0d
     950:	7e 84       	ldd	r7, Y+14	; 0x0e
     952:	8f 84       	ldd	r8, Y+15	; 0x0f
     954:	98 88       	ldd	r9, Y+16	; 0x10
     956:	ed 88       	ldd	r14, Y+21	; 0x15
     958:	fe 88       	ldd	r15, Y+22	; 0x16
     95a:	0f 89       	ldd	r16, Y+23	; 0x17
     95c:	18 8d       	ldd	r17, Y+24	; 0x18
     95e:	e0 e2       	ldi	r30, 0x20	; 32
     960:	f0 e0       	ldi	r31, 0x00	; 0
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	dc 01       	movw	r26, r24
     968:	aa 24       	eor	r10, r10
     96a:	bb 24       	eor	r11, r11
     96c:	65 01       	movw	r12, r10
     96e:	20 e0       	ldi	r18, 0x00	; 0
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	a9 01       	movw	r20, r18
     974:	b3 01       	movw	r22, r6
     976:	61 70       	andi	r22, 0x01	; 1
     978:	70 70       	andi	r23, 0x00	; 0
     97a:	61 15       	cp	r22, r1
     97c:	71 05       	cpc	r23, r1
     97e:	d1 f0       	breq	.+52     	; 0x9b4 <__stack+0xb5>
     980:	2e 0d       	add	r18, r14
     982:	3f 1d       	adc	r19, r15
     984:	40 1f       	adc	r20, r16
     986:	51 1f       	adc	r21, r17
     988:	15 01       	movw	r2, r10
     98a:	26 01       	movw	r4, r12
     98c:	28 0e       	add	r2, r24
     98e:	39 1e       	adc	r3, r25
     990:	4a 1e       	adc	r4, r26
     992:	5b 1e       	adc	r5, r27
     994:	81 e0       	ldi	r24, 0x01	; 1
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	a0 e0       	ldi	r26, 0x00	; 0
     99a:	b0 e0       	ldi	r27, 0x00	; 0
     99c:	2e 15       	cp	r18, r14
     99e:	3f 05       	cpc	r19, r15
     9a0:	40 07       	cpc	r20, r16
     9a2:	51 07       	cpc	r21, r17
     9a4:	18 f0       	brcs	.+6      	; 0x9ac <__stack+0xad>
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	dc 01       	movw	r26, r24
     9ac:	82 0d       	add	r24, r2
     9ae:	93 1d       	adc	r25, r3
     9b0:	a4 1d       	adc	r26, r4
     9b2:	b5 1d       	adc	r27, r5
     9b4:	aa 0c       	add	r10, r10
     9b6:	bb 1c       	adc	r11, r11
     9b8:	cc 1c       	adc	r12, r12
     9ba:	dd 1c       	adc	r13, r13
     9bc:	17 ff       	sbrs	r17, 7
     9be:	09 c0       	rjmp	.+18     	; 0x9d2 <__stack+0xd3>
     9c0:	61 e0       	ldi	r22, 0x01	; 1
     9c2:	26 2e       	mov	r2, r22
     9c4:	31 2c       	mov	r3, r1
     9c6:	41 2c       	mov	r4, r1
     9c8:	51 2c       	mov	r5, r1
     9ca:	a2 28       	or	r10, r2
     9cc:	b3 28       	or	r11, r3
     9ce:	c4 28       	or	r12, r4
     9d0:	d5 28       	or	r13, r5
     9d2:	31 97       	sbiw	r30, 0x01	; 1
     9d4:	49 f0       	breq	.+18     	; 0x9e8 <__stack+0xe9>
     9d6:	ee 0c       	add	r14, r14
     9d8:	ff 1c       	adc	r15, r15
     9da:	00 1f       	adc	r16, r16
     9dc:	11 1f       	adc	r17, r17
     9de:	96 94       	lsr	r9
     9e0:	87 94       	ror	r8
     9e2:	77 94       	ror	r7
     9e4:	67 94       	ror	r6
     9e6:	c6 cf       	rjmp	.-116    	; 0x974 <__stack+0x75>
     9e8:	6b 89       	ldd	r22, Y+19	; 0x13
     9ea:	7c 89       	ldd	r23, Y+20	; 0x14
     9ec:	eb 85       	ldd	r30, Y+11	; 0x0b
     9ee:	fc 85       	ldd	r31, Y+12	; 0x0c
     9f0:	6e 0f       	add	r22, r30
     9f2:	7f 1f       	adc	r23, r31
     9f4:	6e 5f       	subi	r22, 0xFE	; 254
     9f6:	7f 4f       	sbci	r23, 0xFF	; 255
     9f8:	7c 8f       	std	Y+28, r23	; 0x1c
     9fa:	6b 8f       	std	Y+27, r22	; 0x1b
     9fc:	61 e0       	ldi	r22, 0x01	; 1
     9fe:	ea 85       	ldd	r30, Y+10	; 0x0a
     a00:	7a 89       	ldd	r23, Y+18	; 0x12
     a02:	e7 17       	cp	r30, r23
     a04:	09 f4       	brne	.+2      	; 0xa08 <__stack+0x109>
     a06:	60 e0       	ldi	r22, 0x00	; 0
     a08:	6a 8f       	std	Y+26, r22	; 0x1a
     a0a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     a0c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     a0e:	10 c0       	rjmp	.+32     	; 0xa30 <__stack+0x131>
     a10:	fc 01       	movw	r30, r24
     a12:	e1 70       	andi	r30, 0x01	; 1
     a14:	f0 70       	andi	r31, 0x00	; 0
     a16:	30 97       	sbiw	r30, 0x00	; 0
     a18:	29 f0       	breq	.+10     	; 0xa24 <__stack+0x125>
     a1a:	56 95       	lsr	r21
     a1c:	47 95       	ror	r20
     a1e:	37 95       	ror	r19
     a20:	27 95       	ror	r18
     a22:	50 68       	ori	r21, 0x80	; 128
     a24:	b6 95       	lsr	r27
     a26:	a7 95       	ror	r26
     a28:	97 95       	ror	r25
     a2a:	87 95       	ror	r24
     a2c:	6f 5f       	subi	r22, 0xFF	; 255
     a2e:	7f 4f       	sbci	r23, 0xFF	; 255
     a30:	b7 fd       	sbrc	r27, 7
     a32:	ee cf       	rjmp	.-36     	; 0xa10 <__stack+0x111>
     a34:	0c c0       	rjmp	.+24     	; 0xa4e <__stack+0x14f>
     a36:	88 0f       	add	r24, r24
     a38:	99 1f       	adc	r25, r25
     a3a:	aa 1f       	adc	r26, r26
     a3c:	bb 1f       	adc	r27, r27
     a3e:	57 fd       	sbrc	r21, 7
     a40:	81 60       	ori	r24, 0x01	; 1
     a42:	22 0f       	add	r18, r18
     a44:	33 1f       	adc	r19, r19
     a46:	44 1f       	adc	r20, r20
     a48:	55 1f       	adc	r21, r21
     a4a:	61 50       	subi	r22, 0x01	; 1
     a4c:	70 40       	sbci	r23, 0x00	; 0
     a4e:	80 30       	cpi	r24, 0x00	; 0
     a50:	e0 e0       	ldi	r30, 0x00	; 0
     a52:	9e 07       	cpc	r25, r30
     a54:	e0 e0       	ldi	r30, 0x00	; 0
     a56:	ae 07       	cpc	r26, r30
     a58:	e0 e4       	ldi	r30, 0x40	; 64
     a5a:	be 07       	cpc	r27, r30
     a5c:	60 f3       	brcs	.-40     	; 0xa36 <__stack+0x137>
     a5e:	6b 8f       	std	Y+27, r22	; 0x1b
     a60:	7c 8f       	std	Y+28, r23	; 0x1c
     a62:	6f e7       	ldi	r22, 0x7F	; 127
     a64:	e6 2e       	mov	r14, r22
     a66:	f1 2c       	mov	r15, r1
     a68:	01 2d       	mov	r16, r1
     a6a:	11 2d       	mov	r17, r1
     a6c:	e8 22       	and	r14, r24
     a6e:	f9 22       	and	r15, r25
     a70:	0a 23       	and	r16, r26
     a72:	1b 23       	and	r17, r27
     a74:	60 e4       	ldi	r22, 0x40	; 64
     a76:	e6 16       	cp	r14, r22
     a78:	f1 04       	cpc	r15, r1
     a7a:	01 05       	cpc	r16, r1
     a7c:	11 05       	cpc	r17, r1
     a7e:	61 f4       	brne	.+24     	; 0xa98 <__stack+0x199>
     a80:	87 fd       	sbrc	r24, 7
     a82:	0a c0       	rjmp	.+20     	; 0xa98 <__stack+0x199>
     a84:	21 15       	cp	r18, r1
     a86:	31 05       	cpc	r19, r1
     a88:	41 05       	cpc	r20, r1
     a8a:	51 05       	cpc	r21, r1
     a8c:	29 f0       	breq	.+10     	; 0xa98 <__stack+0x199>
     a8e:	80 5c       	subi	r24, 0xC0	; 192
     a90:	9f 4f       	sbci	r25, 0xFF	; 255
     a92:	af 4f       	sbci	r26, 0xFF	; 255
     a94:	bf 4f       	sbci	r27, 0xFF	; 255
     a96:	80 78       	andi	r24, 0x80	; 128
     a98:	8d 8f       	std	Y+29, r24	; 0x1d
     a9a:	9e 8f       	std	Y+30, r25	; 0x1e
     a9c:	af 8f       	std	Y+31, r26	; 0x1f
     a9e:	b8 a3       	std	Y+32, r27	; 0x20
     aa0:	83 e0       	ldi	r24, 0x03	; 3
     aa2:	89 8f       	std	Y+25, r24	; 0x19
     aa4:	ce 01       	movw	r24, r28
     aa6:	49 96       	adiw	r24, 0x19	; 25
     aa8:	02 c0       	rjmp	.+4      	; 0xaae <__stack+0x1af>
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__pack_f>
     ab2:	a0 96       	adiw	r28, 0x20	; 32
     ab4:	e2 e1       	ldi	r30, 0x12	; 18
     ab6:	0c 94 eb 07 	jmp	0xfd6	; 0xfd6 <__epilogue_restores__>

00000aba <__gtsf2>:
     aba:	a8 e1       	ldi	r26, 0x18	; 24
     abc:	b0 e0       	ldi	r27, 0x00	; 0
     abe:	e3 e6       	ldi	r30, 0x63	; 99
     ac0:	f5 e0       	ldi	r31, 0x05	; 5
     ac2:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__prologue_saves__+0x18>
     ac6:	69 83       	std	Y+1, r22	; 0x01
     ac8:	7a 83       	std	Y+2, r23	; 0x02
     aca:	8b 83       	std	Y+3, r24	; 0x03
     acc:	9c 83       	std	Y+4, r25	; 0x04
     ace:	2d 83       	std	Y+5, r18	; 0x05
     ad0:	3e 83       	std	Y+6, r19	; 0x06
     ad2:	4f 83       	std	Y+7, r20	; 0x07
     ad4:	58 87       	std	Y+8, r21	; 0x08
     ad6:	8e 01       	movw	r16, r28
     ad8:	07 5f       	subi	r16, 0xF7	; 247
     ada:	1f 4f       	sbci	r17, 0xFF	; 255
     adc:	ce 01       	movw	r24, r28
     ade:	01 96       	adiw	r24, 0x01	; 1
     ae0:	b8 01       	movw	r22, r16
     ae2:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     ae6:	81 e1       	ldi	r24, 0x11	; 17
     ae8:	e8 2e       	mov	r14, r24
     aea:	f1 2c       	mov	r15, r1
     aec:	ec 0e       	add	r14, r28
     aee:	fd 1e       	adc	r15, r29
     af0:	ce 01       	movw	r24, r28
     af2:	05 96       	adiw	r24, 0x05	; 5
     af4:	b7 01       	movw	r22, r14
     af6:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     afa:	89 85       	ldd	r24, Y+9	; 0x09
     afc:	82 30       	cpi	r24, 0x02	; 2
     afe:	40 f0       	brcs	.+16     	; 0xb10 <__gtsf2+0x56>
     b00:	89 89       	ldd	r24, Y+17	; 0x11
     b02:	82 30       	cpi	r24, 0x02	; 2
     b04:	28 f0       	brcs	.+10     	; 0xb10 <__gtsf2+0x56>
     b06:	c8 01       	movw	r24, r16
     b08:	b7 01       	movw	r22, r14
     b0a:	0e 94 76 07 	call	0xeec	; 0xeec <__fpcmp_parts_f>
     b0e:	01 c0       	rjmp	.+2      	; 0xb12 <__gtsf2+0x58>
     b10:	8f ef       	ldi	r24, 0xFF	; 255
     b12:	68 96       	adiw	r28, 0x18	; 24
     b14:	e6 e0       	ldi	r30, 0x06	; 6
     b16:	0c 94 f7 07 	jmp	0xfee	; 0xfee <__epilogue_restores__+0x18>

00000b1a <__gesf2>:
     b1a:	a8 e1       	ldi	r26, 0x18	; 24
     b1c:	b0 e0       	ldi	r27, 0x00	; 0
     b1e:	e3 e9       	ldi	r30, 0x93	; 147
     b20:	f5 e0       	ldi	r31, 0x05	; 5
     b22:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__prologue_saves__+0x18>
     b26:	69 83       	std	Y+1, r22	; 0x01
     b28:	7a 83       	std	Y+2, r23	; 0x02
     b2a:	8b 83       	std	Y+3, r24	; 0x03
     b2c:	9c 83       	std	Y+4, r25	; 0x04
     b2e:	2d 83       	std	Y+5, r18	; 0x05
     b30:	3e 83       	std	Y+6, r19	; 0x06
     b32:	4f 83       	std	Y+7, r20	; 0x07
     b34:	58 87       	std	Y+8, r21	; 0x08
     b36:	8e 01       	movw	r16, r28
     b38:	07 5f       	subi	r16, 0xF7	; 247
     b3a:	1f 4f       	sbci	r17, 0xFF	; 255
     b3c:	ce 01       	movw	r24, r28
     b3e:	01 96       	adiw	r24, 0x01	; 1
     b40:	b8 01       	movw	r22, r16
     b42:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     b46:	81 e1       	ldi	r24, 0x11	; 17
     b48:	e8 2e       	mov	r14, r24
     b4a:	f1 2c       	mov	r15, r1
     b4c:	ec 0e       	add	r14, r28
     b4e:	fd 1e       	adc	r15, r29
     b50:	ce 01       	movw	r24, r28
     b52:	05 96       	adiw	r24, 0x05	; 5
     b54:	b7 01       	movw	r22, r14
     b56:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     b5a:	89 85       	ldd	r24, Y+9	; 0x09
     b5c:	82 30       	cpi	r24, 0x02	; 2
     b5e:	40 f0       	brcs	.+16     	; 0xb70 <__gesf2+0x56>
     b60:	89 89       	ldd	r24, Y+17	; 0x11
     b62:	82 30       	cpi	r24, 0x02	; 2
     b64:	28 f0       	brcs	.+10     	; 0xb70 <__gesf2+0x56>
     b66:	c8 01       	movw	r24, r16
     b68:	b7 01       	movw	r22, r14
     b6a:	0e 94 76 07 	call	0xeec	; 0xeec <__fpcmp_parts_f>
     b6e:	01 c0       	rjmp	.+2      	; 0xb72 <__gesf2+0x58>
     b70:	8f ef       	ldi	r24, 0xFF	; 255
     b72:	68 96       	adiw	r28, 0x18	; 24
     b74:	e6 e0       	ldi	r30, 0x06	; 6
     b76:	0c 94 f7 07 	jmp	0xfee	; 0xfee <__epilogue_restores__+0x18>

00000b7a <__ltsf2>:
     b7a:	a8 e1       	ldi	r26, 0x18	; 24
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	e3 ec       	ldi	r30, 0xC3	; 195
     b80:	f5 e0       	ldi	r31, 0x05	; 5
     b82:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__prologue_saves__+0x18>
     b86:	69 83       	std	Y+1, r22	; 0x01
     b88:	7a 83       	std	Y+2, r23	; 0x02
     b8a:	8b 83       	std	Y+3, r24	; 0x03
     b8c:	9c 83       	std	Y+4, r25	; 0x04
     b8e:	2d 83       	std	Y+5, r18	; 0x05
     b90:	3e 83       	std	Y+6, r19	; 0x06
     b92:	4f 83       	std	Y+7, r20	; 0x07
     b94:	58 87       	std	Y+8, r21	; 0x08
     b96:	8e 01       	movw	r16, r28
     b98:	07 5f       	subi	r16, 0xF7	; 247
     b9a:	1f 4f       	sbci	r17, 0xFF	; 255
     b9c:	ce 01       	movw	r24, r28
     b9e:	01 96       	adiw	r24, 0x01	; 1
     ba0:	b8 01       	movw	r22, r16
     ba2:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     ba6:	81 e1       	ldi	r24, 0x11	; 17
     ba8:	e8 2e       	mov	r14, r24
     baa:	f1 2c       	mov	r15, r1
     bac:	ec 0e       	add	r14, r28
     bae:	fd 1e       	adc	r15, r29
     bb0:	ce 01       	movw	r24, r28
     bb2:	05 96       	adiw	r24, 0x05	; 5
     bb4:	b7 01       	movw	r22, r14
     bb6:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     bba:	89 85       	ldd	r24, Y+9	; 0x09
     bbc:	82 30       	cpi	r24, 0x02	; 2
     bbe:	40 f0       	brcs	.+16     	; 0xbd0 <__ltsf2+0x56>
     bc0:	89 89       	ldd	r24, Y+17	; 0x11
     bc2:	82 30       	cpi	r24, 0x02	; 2
     bc4:	28 f0       	brcs	.+10     	; 0xbd0 <__ltsf2+0x56>
     bc6:	c8 01       	movw	r24, r16
     bc8:	b7 01       	movw	r22, r14
     bca:	0e 94 76 07 	call	0xeec	; 0xeec <__fpcmp_parts_f>
     bce:	01 c0       	rjmp	.+2      	; 0xbd2 <__ltsf2+0x58>
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	68 96       	adiw	r28, 0x18	; 24
     bd4:	e6 e0       	ldi	r30, 0x06	; 6
     bd6:	0c 94 f7 07 	jmp	0xfee	; 0xfee <__epilogue_restores__+0x18>

00000bda <__fixsfsi>:
     bda:	ac e0       	ldi	r26, 0x0C	; 12
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	e3 ef       	ldi	r30, 0xF3	; 243
     be0:	f5 e0       	ldi	r31, 0x05	; 5
     be2:	0c 94 df 07 	jmp	0xfbe	; 0xfbe <__prologue_saves__+0x20>
     be6:	69 83       	std	Y+1, r22	; 0x01
     be8:	7a 83       	std	Y+2, r23	; 0x02
     bea:	8b 83       	std	Y+3, r24	; 0x03
     bec:	9c 83       	std	Y+4, r25	; 0x04
     bee:	ce 01       	movw	r24, r28
     bf0:	01 96       	adiw	r24, 0x01	; 1
     bf2:	be 01       	movw	r22, r28
     bf4:	6b 5f       	subi	r22, 0xFB	; 251
     bf6:	7f 4f       	sbci	r23, 0xFF	; 255
     bf8:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__unpack_f>
     bfc:	8d 81       	ldd	r24, Y+5	; 0x05
     bfe:	82 30       	cpi	r24, 0x02	; 2
     c00:	81 f1       	breq	.+96     	; 0xc62 <__fixsfsi+0x88>
     c02:	82 30       	cpi	r24, 0x02	; 2
     c04:	70 f1       	brcs	.+92     	; 0xc62 <__fixsfsi+0x88>
     c06:	84 30       	cpi	r24, 0x04	; 4
     c08:	21 f4       	brne	.+8      	; 0xc12 <__fixsfsi+0x38>
     c0a:	8e 81       	ldd	r24, Y+6	; 0x06
     c0c:	88 23       	and	r24, r24
     c0e:	69 f1       	breq	.+90     	; 0xc6a <__fixsfsi+0x90>
     c10:	0a c0       	rjmp	.+20     	; 0xc26 <__fixsfsi+0x4c>
     c12:	2f 81       	ldd	r18, Y+7	; 0x07
     c14:	38 85       	ldd	r19, Y+8	; 0x08
     c16:	37 fd       	sbrc	r19, 7
     c18:	24 c0       	rjmp	.+72     	; 0xc62 <__fixsfsi+0x88>
     c1a:	6e 81       	ldd	r22, Y+6	; 0x06
     c1c:	2f 31       	cpi	r18, 0x1F	; 31
     c1e:	31 05       	cpc	r19, r1
     c20:	3c f0       	brlt	.+14     	; 0xc30 <__fixsfsi+0x56>
     c22:	66 23       	and	r22, r22
     c24:	11 f1       	breq	.+68     	; 0xc6a <__fixsfsi+0x90>
     c26:	20 e0       	ldi	r18, 0x00	; 0
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	40 e0       	ldi	r20, 0x00	; 0
     c2c:	50 e8       	ldi	r21, 0x80	; 128
     c2e:	21 c0       	rjmp	.+66     	; 0xc72 <__fixsfsi+0x98>
     c30:	8e e1       	ldi	r24, 0x1E	; 30
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	82 1b       	sub	r24, r18
     c36:	93 0b       	sbc	r25, r19
     c38:	29 85       	ldd	r18, Y+9	; 0x09
     c3a:	3a 85       	ldd	r19, Y+10	; 0x0a
     c3c:	4b 85       	ldd	r20, Y+11	; 0x0b
     c3e:	5c 85       	ldd	r21, Y+12	; 0x0c
     c40:	04 c0       	rjmp	.+8      	; 0xc4a <__fixsfsi+0x70>
     c42:	56 95       	lsr	r21
     c44:	47 95       	ror	r20
     c46:	37 95       	ror	r19
     c48:	27 95       	ror	r18
     c4a:	8a 95       	dec	r24
     c4c:	d2 f7       	brpl	.-12     	; 0xc42 <__fixsfsi+0x68>
     c4e:	66 23       	and	r22, r22
     c50:	81 f0       	breq	.+32     	; 0xc72 <__fixsfsi+0x98>
     c52:	50 95       	com	r21
     c54:	40 95       	com	r20
     c56:	30 95       	com	r19
     c58:	21 95       	neg	r18
     c5a:	3f 4f       	sbci	r19, 0xFF	; 255
     c5c:	4f 4f       	sbci	r20, 0xFF	; 255
     c5e:	5f 4f       	sbci	r21, 0xFF	; 255
     c60:	08 c0       	rjmp	.+16     	; 0xc72 <__fixsfsi+0x98>
     c62:	20 e0       	ldi	r18, 0x00	; 0
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	a9 01       	movw	r20, r18
     c68:	04 c0       	rjmp	.+8      	; 0xc72 <__fixsfsi+0x98>
     c6a:	2f ef       	ldi	r18, 0xFF	; 255
     c6c:	3f ef       	ldi	r19, 0xFF	; 255
     c6e:	4f ef       	ldi	r20, 0xFF	; 255
     c70:	5f e7       	ldi	r21, 0x7F	; 127
     c72:	b9 01       	movw	r22, r18
     c74:	ca 01       	movw	r24, r20
     c76:	2c 96       	adiw	r28, 0x0c	; 12
     c78:	e2 e0       	ldi	r30, 0x02	; 2
     c7a:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__epilogue_restores__+0x20>

00000c7e <__pack_f>:
     c7e:	ef 92       	push	r14
     c80:	ff 92       	push	r15
     c82:	0f 93       	push	r16
     c84:	1f 93       	push	r17
     c86:	cf 93       	push	r28
     c88:	df 93       	push	r29
     c8a:	fc 01       	movw	r30, r24
     c8c:	24 81       	ldd	r18, Z+4	; 0x04
     c8e:	35 81       	ldd	r19, Z+5	; 0x05
     c90:	46 81       	ldd	r20, Z+6	; 0x06
     c92:	57 81       	ldd	r21, Z+7	; 0x07
     c94:	61 81       	ldd	r22, Z+1	; 0x01
     c96:	80 81       	ld	r24, Z
     c98:	82 30       	cpi	r24, 0x02	; 2
     c9a:	20 f4       	brcc	.+8      	; 0xca4 <__pack_f+0x26>
     c9c:	40 61       	ori	r20, 0x10	; 16
     c9e:	ef ef       	ldi	r30, 0xFF	; 255
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	a3 c0       	rjmp	.+326    	; 0xdea <__pack_f+0x16c>
     ca4:	84 30       	cpi	r24, 0x04	; 4
     ca6:	09 f4       	brne	.+2      	; 0xcaa <__pack_f+0x2c>
     ca8:	9b c0       	rjmp	.+310    	; 0xde0 <__pack_f+0x162>
     caa:	82 30       	cpi	r24, 0x02	; 2
     cac:	09 f4       	brne	.+2      	; 0xcb0 <__pack_f+0x32>
     cae:	92 c0       	rjmp	.+292    	; 0xdd4 <__pack_f+0x156>
     cb0:	21 15       	cp	r18, r1
     cb2:	31 05       	cpc	r19, r1
     cb4:	41 05       	cpc	r20, r1
     cb6:	51 05       	cpc	r21, r1
     cb8:	09 f4       	brne	.+2      	; 0xcbc <__pack_f+0x3e>
     cba:	8f c0       	rjmp	.+286    	; 0xdda <__pack_f+0x15c>
     cbc:	02 80       	ldd	r0, Z+2	; 0x02
     cbe:	f3 81       	ldd	r31, Z+3	; 0x03
     cc0:	e0 2d       	mov	r30, r0
     cc2:	8f ef       	ldi	r24, 0xFF	; 255
     cc4:	e2 38       	cpi	r30, 0x82	; 130
     cc6:	f8 07       	cpc	r31, r24
     cc8:	0c f0       	brlt	.+2      	; 0xccc <__pack_f+0x4e>
     cca:	5a c0       	rjmp	.+180    	; 0xd80 <__pack_f+0x102>
     ccc:	c2 e8       	ldi	r28, 0x82	; 130
     cce:	df ef       	ldi	r29, 0xFF	; 255
     cd0:	ce 1b       	sub	r28, r30
     cd2:	df 0b       	sbc	r29, r31
     cd4:	ca 31       	cpi	r28, 0x1A	; 26
     cd6:	d1 05       	cpc	r29, r1
     cd8:	6c f5       	brge	.+90     	; 0xd34 <__pack_f+0xb6>
     cda:	79 01       	movw	r14, r18
     cdc:	8a 01       	movw	r16, r20
     cde:	0c 2e       	mov	r0, r28
     ce0:	04 c0       	rjmp	.+8      	; 0xcea <__pack_f+0x6c>
     ce2:	16 95       	lsr	r17
     ce4:	07 95       	ror	r16
     ce6:	f7 94       	ror	r15
     ce8:	e7 94       	ror	r14
     cea:	0a 94       	dec	r0
     cec:	d2 f7       	brpl	.-12     	; 0xce2 <__pack_f+0x64>
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	a0 e0       	ldi	r26, 0x00	; 0
     cf4:	b0 e0       	ldi	r27, 0x00	; 0
     cf6:	0c 2e       	mov	r0, r28
     cf8:	04 c0       	rjmp	.+8      	; 0xd02 <__pack_f+0x84>
     cfa:	88 0f       	add	r24, r24
     cfc:	99 1f       	adc	r25, r25
     cfe:	aa 1f       	adc	r26, r26
     d00:	bb 1f       	adc	r27, r27
     d02:	0a 94       	dec	r0
     d04:	d2 f7       	brpl	.-12     	; 0xcfa <__pack_f+0x7c>
     d06:	01 97       	sbiw	r24, 0x01	; 1
     d08:	a1 09       	sbc	r26, r1
     d0a:	b1 09       	sbc	r27, r1
     d0c:	82 23       	and	r24, r18
     d0e:	93 23       	and	r25, r19
     d10:	a4 23       	and	r26, r20
     d12:	b5 23       	and	r27, r21
     d14:	21 e0       	ldi	r18, 0x01	; 1
     d16:	30 e0       	ldi	r19, 0x00	; 0
     d18:	40 e0       	ldi	r20, 0x00	; 0
     d1a:	50 e0       	ldi	r21, 0x00	; 0
     d1c:	00 97       	sbiw	r24, 0x00	; 0
     d1e:	a1 05       	cpc	r26, r1
     d20:	b1 05       	cpc	r27, r1
     d22:	19 f4       	brne	.+6      	; 0xd2a <__pack_f+0xac>
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	a9 01       	movw	r20, r18
     d2a:	2e 29       	or	r18, r14
     d2c:	3f 29       	or	r19, r15
     d2e:	40 2b       	or	r20, r16
     d30:	51 2b       	or	r21, r17
     d32:	03 c0       	rjmp	.+6      	; 0xd3a <__pack_f+0xbc>
     d34:	20 e0       	ldi	r18, 0x00	; 0
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	a9 01       	movw	r20, r18
     d3a:	da 01       	movw	r26, r20
     d3c:	c9 01       	movw	r24, r18
     d3e:	8f 77       	andi	r24, 0x7F	; 127
     d40:	90 70       	andi	r25, 0x00	; 0
     d42:	a0 70       	andi	r26, 0x00	; 0
     d44:	b0 70       	andi	r27, 0x00	; 0
     d46:	80 34       	cpi	r24, 0x40	; 64
     d48:	91 05       	cpc	r25, r1
     d4a:	a1 05       	cpc	r26, r1
     d4c:	b1 05       	cpc	r27, r1
     d4e:	39 f4       	brne	.+14     	; 0xd5e <__pack_f+0xe0>
     d50:	27 ff       	sbrs	r18, 7
     d52:	09 c0       	rjmp	.+18     	; 0xd66 <__pack_f+0xe8>
     d54:	20 5c       	subi	r18, 0xC0	; 192
     d56:	3f 4f       	sbci	r19, 0xFF	; 255
     d58:	4f 4f       	sbci	r20, 0xFF	; 255
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	04 c0       	rjmp	.+8      	; 0xd66 <__pack_f+0xe8>
     d5e:	21 5c       	subi	r18, 0xC1	; 193
     d60:	3f 4f       	sbci	r19, 0xFF	; 255
     d62:	4f 4f       	sbci	r20, 0xFF	; 255
     d64:	5f 4f       	sbci	r21, 0xFF	; 255
     d66:	e1 e0       	ldi	r30, 0x01	; 1
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	20 30       	cpi	r18, 0x00	; 0
     d6c:	80 e0       	ldi	r24, 0x00	; 0
     d6e:	38 07       	cpc	r19, r24
     d70:	80 e0       	ldi	r24, 0x00	; 0
     d72:	48 07       	cpc	r20, r24
     d74:	80 e4       	ldi	r24, 0x40	; 64
     d76:	58 07       	cpc	r21, r24
     d78:	28 f5       	brcc	.+74     	; 0xdc4 <__pack_f+0x146>
     d7a:	e0 e0       	ldi	r30, 0x00	; 0
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	22 c0       	rjmp	.+68     	; 0xdc4 <__pack_f+0x146>
     d80:	e0 38       	cpi	r30, 0x80	; 128
     d82:	f1 05       	cpc	r31, r1
     d84:	6c f5       	brge	.+90     	; 0xde0 <__pack_f+0x162>
     d86:	e1 58       	subi	r30, 0x81	; 129
     d88:	ff 4f       	sbci	r31, 0xFF	; 255
     d8a:	da 01       	movw	r26, r20
     d8c:	c9 01       	movw	r24, r18
     d8e:	8f 77       	andi	r24, 0x7F	; 127
     d90:	90 70       	andi	r25, 0x00	; 0
     d92:	a0 70       	andi	r26, 0x00	; 0
     d94:	b0 70       	andi	r27, 0x00	; 0
     d96:	80 34       	cpi	r24, 0x40	; 64
     d98:	91 05       	cpc	r25, r1
     d9a:	a1 05       	cpc	r26, r1
     d9c:	b1 05       	cpc	r27, r1
     d9e:	39 f4       	brne	.+14     	; 0xdae <__pack_f+0x130>
     da0:	27 ff       	sbrs	r18, 7
     da2:	09 c0       	rjmp	.+18     	; 0xdb6 <__pack_f+0x138>
     da4:	20 5c       	subi	r18, 0xC0	; 192
     da6:	3f 4f       	sbci	r19, 0xFF	; 255
     da8:	4f 4f       	sbci	r20, 0xFF	; 255
     daa:	5f 4f       	sbci	r21, 0xFF	; 255
     dac:	04 c0       	rjmp	.+8      	; 0xdb6 <__pack_f+0x138>
     dae:	21 5c       	subi	r18, 0xC1	; 193
     db0:	3f 4f       	sbci	r19, 0xFF	; 255
     db2:	4f 4f       	sbci	r20, 0xFF	; 255
     db4:	5f 4f       	sbci	r21, 0xFF	; 255
     db6:	57 ff       	sbrs	r21, 7
     db8:	05 c0       	rjmp	.+10     	; 0xdc4 <__pack_f+0x146>
     dba:	56 95       	lsr	r21
     dbc:	47 95       	ror	r20
     dbe:	37 95       	ror	r19
     dc0:	27 95       	ror	r18
     dc2:	31 96       	adiw	r30, 0x01	; 1
     dc4:	87 e0       	ldi	r24, 0x07	; 7
     dc6:	56 95       	lsr	r21
     dc8:	47 95       	ror	r20
     dca:	37 95       	ror	r19
     dcc:	27 95       	ror	r18
     dce:	8a 95       	dec	r24
     dd0:	d1 f7       	brne	.-12     	; 0xdc6 <__pack_f+0x148>
     dd2:	0b c0       	rjmp	.+22     	; 0xdea <__pack_f+0x16c>
     dd4:	e0 e0       	ldi	r30, 0x00	; 0
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	05 c0       	rjmp	.+10     	; 0xde4 <__pack_f+0x166>
     dda:	e0 e0       	ldi	r30, 0x00	; 0
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	05 c0       	rjmp	.+10     	; 0xdea <__pack_f+0x16c>
     de0:	ef ef       	ldi	r30, 0xFF	; 255
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	20 e0       	ldi	r18, 0x00	; 0
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	a9 01       	movw	r20, r18
     dea:	8e 2f       	mov	r24, r30
     dec:	87 95       	ror	r24
     dee:	88 27       	eor	r24, r24
     df0:	87 95       	ror	r24
     df2:	94 2f       	mov	r25, r20
     df4:	9f 77       	andi	r25, 0x7F	; 127
     df6:	67 95       	ror	r22
     df8:	66 27       	eor	r22, r22
     dfa:	67 95       	ror	r22
     dfc:	e6 95       	lsr	r30
     dfe:	e2 2e       	mov	r14, r18
     e00:	a9 2f       	mov	r26, r25
     e02:	a8 2b       	or	r26, r24
     e04:	fe 2f       	mov	r31, r30
     e06:	f6 2b       	or	r31, r22
     e08:	62 2f       	mov	r22, r18
     e0a:	73 2f       	mov	r23, r19
     e0c:	8a 2f       	mov	r24, r26
     e0e:	9f 2f       	mov	r25, r31
     e10:	cd b7       	in	r28, 0x3d	; 61
     e12:	de b7       	in	r29, 0x3e	; 62
     e14:	e6 e0       	ldi	r30, 0x06	; 6
     e16:	0c 94 f7 07 	jmp	0xfee	; 0xfee <__epilogue_restores__+0x18>

00000e1a <__unpack_f>:
     e1a:	dc 01       	movw	r26, r24
     e1c:	fb 01       	movw	r30, r22
     e1e:	2c 91       	ld	r18, X
     e20:	11 96       	adiw	r26, 0x01	; 1
     e22:	3c 91       	ld	r19, X
     e24:	11 97       	sbiw	r26, 0x01	; 1
     e26:	12 96       	adiw	r26, 0x02	; 2
     e28:	8c 91       	ld	r24, X
     e2a:	12 97       	sbiw	r26, 0x02	; 2
     e2c:	48 2f       	mov	r20, r24
     e2e:	4f 77       	andi	r20, 0x7F	; 127
     e30:	50 e0       	ldi	r21, 0x00	; 0
     e32:	98 2f       	mov	r25, r24
     e34:	99 1f       	adc	r25, r25
     e36:	99 27       	eor	r25, r25
     e38:	99 1f       	adc	r25, r25
     e3a:	13 96       	adiw	r26, 0x03	; 3
     e3c:	6c 91       	ld	r22, X
     e3e:	13 97       	sbiw	r26, 0x03	; 3
     e40:	86 2f       	mov	r24, r22
     e42:	88 0f       	add	r24, r24
     e44:	89 2b       	or	r24, r25
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	66 1f       	adc	r22, r22
     e4a:	66 27       	eor	r22, r22
     e4c:	66 1f       	adc	r22, r22
     e4e:	61 83       	std	Z+1, r22	; 0x01
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	39 f5       	brne	.+78     	; 0xea2 <__unpack_f+0x88>
     e54:	21 15       	cp	r18, r1
     e56:	31 05       	cpc	r19, r1
     e58:	41 05       	cpc	r20, r1
     e5a:	51 05       	cpc	r21, r1
     e5c:	11 f4       	brne	.+4      	; 0xe62 <__unpack_f+0x48>
     e5e:	82 e0       	ldi	r24, 0x02	; 2
     e60:	29 c0       	rjmp	.+82     	; 0xeb4 <__unpack_f+0x9a>
     e62:	82 e8       	ldi	r24, 0x82	; 130
     e64:	9f ef       	ldi	r25, 0xFF	; 255
     e66:	93 83       	std	Z+3, r25	; 0x03
     e68:	82 83       	std	Z+2, r24	; 0x02
     e6a:	67 e0       	ldi	r22, 0x07	; 7
     e6c:	22 0f       	add	r18, r18
     e6e:	33 1f       	adc	r19, r19
     e70:	44 1f       	adc	r20, r20
     e72:	55 1f       	adc	r21, r21
     e74:	6a 95       	dec	r22
     e76:	d1 f7       	brne	.-12     	; 0xe6c <__unpack_f+0x52>
     e78:	83 e0       	ldi	r24, 0x03	; 3
     e7a:	80 83       	st	Z, r24
     e7c:	09 c0       	rjmp	.+18     	; 0xe90 <__unpack_f+0x76>
     e7e:	22 0f       	add	r18, r18
     e80:	33 1f       	adc	r19, r19
     e82:	44 1f       	adc	r20, r20
     e84:	55 1f       	adc	r21, r21
     e86:	82 81       	ldd	r24, Z+2	; 0x02
     e88:	93 81       	ldd	r25, Z+3	; 0x03
     e8a:	01 97       	sbiw	r24, 0x01	; 1
     e8c:	93 83       	std	Z+3, r25	; 0x03
     e8e:	82 83       	std	Z+2, r24	; 0x02
     e90:	20 30       	cpi	r18, 0x00	; 0
     e92:	80 e0       	ldi	r24, 0x00	; 0
     e94:	38 07       	cpc	r19, r24
     e96:	80 e0       	ldi	r24, 0x00	; 0
     e98:	48 07       	cpc	r20, r24
     e9a:	80 e4       	ldi	r24, 0x40	; 64
     e9c:	58 07       	cpc	r21, r24
     e9e:	78 f3       	brcs	.-34     	; 0xe7e <__unpack_f+0x64>
     ea0:	20 c0       	rjmp	.+64     	; 0xee2 <__unpack_f+0xc8>
     ea2:	8f 3f       	cpi	r24, 0xFF	; 255
     ea4:	91 05       	cpc	r25, r1
     ea6:	79 f4       	brne	.+30     	; 0xec6 <__unpack_f+0xac>
     ea8:	21 15       	cp	r18, r1
     eaa:	31 05       	cpc	r19, r1
     eac:	41 05       	cpc	r20, r1
     eae:	51 05       	cpc	r21, r1
     eb0:	19 f4       	brne	.+6      	; 0xeb8 <__unpack_f+0x9e>
     eb2:	84 e0       	ldi	r24, 0x04	; 4
     eb4:	80 83       	st	Z, r24
     eb6:	08 95       	ret
     eb8:	44 ff       	sbrs	r20, 4
     eba:	03 c0       	rjmp	.+6      	; 0xec2 <__unpack_f+0xa8>
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	80 83       	st	Z, r24
     ec0:	10 c0       	rjmp	.+32     	; 0xee2 <__unpack_f+0xc8>
     ec2:	10 82       	st	Z, r1
     ec4:	0e c0       	rjmp	.+28     	; 0xee2 <__unpack_f+0xc8>
     ec6:	8f 57       	subi	r24, 0x7F	; 127
     ec8:	90 40       	sbci	r25, 0x00	; 0
     eca:	93 83       	std	Z+3, r25	; 0x03
     ecc:	82 83       	std	Z+2, r24	; 0x02
     ece:	83 e0       	ldi	r24, 0x03	; 3
     ed0:	80 83       	st	Z, r24
     ed2:	87 e0       	ldi	r24, 0x07	; 7
     ed4:	22 0f       	add	r18, r18
     ed6:	33 1f       	adc	r19, r19
     ed8:	44 1f       	adc	r20, r20
     eda:	55 1f       	adc	r21, r21
     edc:	8a 95       	dec	r24
     ede:	d1 f7       	brne	.-12     	; 0xed4 <__unpack_f+0xba>
     ee0:	50 64       	ori	r21, 0x40	; 64
     ee2:	24 83       	std	Z+4, r18	; 0x04
     ee4:	35 83       	std	Z+5, r19	; 0x05
     ee6:	46 83       	std	Z+6, r20	; 0x06
     ee8:	57 83       	std	Z+7, r21	; 0x07
     eea:	08 95       	ret

00000eec <__fpcmp_parts_f>:
     eec:	fc 01       	movw	r30, r24
     eee:	db 01       	movw	r26, r22
     ef0:	90 81       	ld	r25, Z
     ef2:	92 30       	cpi	r25, 0x02	; 2
     ef4:	08 f4       	brcc	.+2      	; 0xef8 <__fpcmp_parts_f+0xc>
     ef6:	49 c0       	rjmp	.+146    	; 0xf8a <__fpcmp_parts_f+0x9e>
     ef8:	8c 91       	ld	r24, X
     efa:	82 30       	cpi	r24, 0x02	; 2
     efc:	08 f4       	brcc	.+2      	; 0xf00 <__fpcmp_parts_f+0x14>
     efe:	45 c0       	rjmp	.+138    	; 0xf8a <__fpcmp_parts_f+0x9e>
     f00:	94 30       	cpi	r25, 0x04	; 4
     f02:	51 f4       	brne	.+20     	; 0xf18 <__fpcmp_parts_f+0x2c>
     f04:	61 81       	ldd	r22, Z+1	; 0x01
     f06:	84 30       	cpi	r24, 0x04	; 4
     f08:	b1 f5       	brne	.+108    	; 0xf76 <__fpcmp_parts_f+0x8a>
     f0a:	11 96       	adiw	r26, 0x01	; 1
     f0c:	2c 91       	ld	r18, X
     f0e:	11 97       	sbiw	r26, 0x01	; 1
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	26 1b       	sub	r18, r22
     f14:	31 09       	sbc	r19, r1
     f16:	41 c0       	rjmp	.+130    	; 0xf9a <__fpcmp_parts_f+0xae>
     f18:	84 30       	cpi	r24, 0x04	; 4
     f1a:	21 f0       	breq	.+8      	; 0xf24 <__fpcmp_parts_f+0x38>
     f1c:	92 30       	cpi	r25, 0x02	; 2
     f1e:	41 f4       	brne	.+16     	; 0xf30 <__fpcmp_parts_f+0x44>
     f20:	82 30       	cpi	r24, 0x02	; 2
     f22:	b1 f1       	breq	.+108    	; 0xf90 <__fpcmp_parts_f+0xa4>
     f24:	11 96       	adiw	r26, 0x01	; 1
     f26:	8c 91       	ld	r24, X
     f28:	11 97       	sbiw	r26, 0x01	; 1
     f2a:	88 23       	and	r24, r24
     f2c:	a1 f1       	breq	.+104    	; 0xf96 <__fpcmp_parts_f+0xaa>
     f2e:	2d c0       	rjmp	.+90     	; 0xf8a <__fpcmp_parts_f+0x9e>
     f30:	61 81       	ldd	r22, Z+1	; 0x01
     f32:	82 30       	cpi	r24, 0x02	; 2
     f34:	01 f1       	breq	.+64     	; 0xf76 <__fpcmp_parts_f+0x8a>
     f36:	11 96       	adiw	r26, 0x01	; 1
     f38:	8c 91       	ld	r24, X
     f3a:	11 97       	sbiw	r26, 0x01	; 1
     f3c:	68 17       	cp	r22, r24
     f3e:	d9 f4       	brne	.+54     	; 0xf76 <__fpcmp_parts_f+0x8a>
     f40:	22 81       	ldd	r18, Z+2	; 0x02
     f42:	33 81       	ldd	r19, Z+3	; 0x03
     f44:	12 96       	adiw	r26, 0x02	; 2
     f46:	8d 91       	ld	r24, X+
     f48:	9c 91       	ld	r25, X
     f4a:	13 97       	sbiw	r26, 0x03	; 3
     f4c:	82 17       	cp	r24, r18
     f4e:	93 07       	cpc	r25, r19
     f50:	94 f0       	brlt	.+36     	; 0xf76 <__fpcmp_parts_f+0x8a>
     f52:	28 17       	cp	r18, r24
     f54:	39 07       	cpc	r19, r25
     f56:	bc f0       	brlt	.+46     	; 0xf86 <__fpcmp_parts_f+0x9a>
     f58:	24 81       	ldd	r18, Z+4	; 0x04
     f5a:	35 81       	ldd	r19, Z+5	; 0x05
     f5c:	46 81       	ldd	r20, Z+6	; 0x06
     f5e:	57 81       	ldd	r21, Z+7	; 0x07
     f60:	14 96       	adiw	r26, 0x04	; 4
     f62:	8d 91       	ld	r24, X+
     f64:	9d 91       	ld	r25, X+
     f66:	0d 90       	ld	r0, X+
     f68:	bc 91       	ld	r27, X
     f6a:	a0 2d       	mov	r26, r0
     f6c:	82 17       	cp	r24, r18
     f6e:	93 07       	cpc	r25, r19
     f70:	a4 07       	cpc	r26, r20
     f72:	b5 07       	cpc	r27, r21
     f74:	18 f4       	brcc	.+6      	; 0xf7c <__fpcmp_parts_f+0x90>
     f76:	66 23       	and	r22, r22
     f78:	41 f0       	breq	.+16     	; 0xf8a <__fpcmp_parts_f+0x9e>
     f7a:	0d c0       	rjmp	.+26     	; 0xf96 <__fpcmp_parts_f+0xaa>
     f7c:	28 17       	cp	r18, r24
     f7e:	39 07       	cpc	r19, r25
     f80:	4a 07       	cpc	r20, r26
     f82:	5b 07       	cpc	r21, r27
     f84:	28 f4       	brcc	.+10     	; 0xf90 <__fpcmp_parts_f+0xa4>
     f86:	66 23       	and	r22, r22
     f88:	31 f0       	breq	.+12     	; 0xf96 <__fpcmp_parts_f+0xaa>
     f8a:	21 e0       	ldi	r18, 0x01	; 1
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	05 c0       	rjmp	.+10     	; 0xf9a <__fpcmp_parts_f+0xae>
     f90:	20 e0       	ldi	r18, 0x00	; 0
     f92:	30 e0       	ldi	r19, 0x00	; 0
     f94:	02 c0       	rjmp	.+4      	; 0xf9a <__fpcmp_parts_f+0xae>
     f96:	2f ef       	ldi	r18, 0xFF	; 255
     f98:	3f ef       	ldi	r19, 0xFF	; 255
     f9a:	c9 01       	movw	r24, r18
     f9c:	08 95       	ret

00000f9e <__prologue_saves__>:
     f9e:	2f 92       	push	r2
     fa0:	3f 92       	push	r3
     fa2:	4f 92       	push	r4
     fa4:	5f 92       	push	r5
     fa6:	6f 92       	push	r6
     fa8:	7f 92       	push	r7
     faa:	8f 92       	push	r8
     fac:	9f 92       	push	r9
     fae:	af 92       	push	r10
     fb0:	bf 92       	push	r11
     fb2:	cf 92       	push	r12
     fb4:	df 92       	push	r13
     fb6:	ef 92       	push	r14
     fb8:	ff 92       	push	r15
     fba:	0f 93       	push	r16
     fbc:	1f 93       	push	r17
     fbe:	cf 93       	push	r28
     fc0:	df 93       	push	r29
     fc2:	cd b7       	in	r28, 0x3d	; 61
     fc4:	de b7       	in	r29, 0x3e	; 62
     fc6:	ca 1b       	sub	r28, r26
     fc8:	db 0b       	sbc	r29, r27
     fca:	0f b6       	in	r0, 0x3f	; 63
     fcc:	f8 94       	cli
     fce:	de bf       	out	0x3e, r29	; 62
     fd0:	0f be       	out	0x3f, r0	; 63
     fd2:	cd bf       	out	0x3d, r28	; 61
     fd4:	09 94       	ijmp

00000fd6 <__epilogue_restores__>:
     fd6:	2a 88       	ldd	r2, Y+18	; 0x12
     fd8:	39 88       	ldd	r3, Y+17	; 0x11
     fda:	48 88       	ldd	r4, Y+16	; 0x10
     fdc:	5f 84       	ldd	r5, Y+15	; 0x0f
     fde:	6e 84       	ldd	r6, Y+14	; 0x0e
     fe0:	7d 84       	ldd	r7, Y+13	; 0x0d
     fe2:	8c 84       	ldd	r8, Y+12	; 0x0c
     fe4:	9b 84       	ldd	r9, Y+11	; 0x0b
     fe6:	aa 84       	ldd	r10, Y+10	; 0x0a
     fe8:	b9 84       	ldd	r11, Y+9	; 0x09
     fea:	c8 84       	ldd	r12, Y+8	; 0x08
     fec:	df 80       	ldd	r13, Y+7	; 0x07
     fee:	ee 80       	ldd	r14, Y+6	; 0x06
     ff0:	fd 80       	ldd	r15, Y+5	; 0x05
     ff2:	0c 81       	ldd	r16, Y+4	; 0x04
     ff4:	1b 81       	ldd	r17, Y+3	; 0x03
     ff6:	aa 81       	ldd	r26, Y+2	; 0x02
     ff8:	b9 81       	ldd	r27, Y+1	; 0x01
     ffa:	ce 0f       	add	r28, r30
     ffc:	d1 1d       	adc	r29, r1
     ffe:	0f b6       	in	r0, 0x3f	; 63
    1000:	f8 94       	cli
    1002:	de bf       	out	0x3e, r29	; 62
    1004:	0f be       	out	0x3f, r0	; 63
    1006:	cd bf       	out	0x3d, r28	; 61
    1008:	ed 01       	movw	r28, r26
    100a:	08 95       	ret

0000100c <_exit>:
    100c:	f8 94       	cli

0000100e <__stop_program>:
    100e:	ff cf       	rjmp	.-2      	; 0x100e <__stop_program>
