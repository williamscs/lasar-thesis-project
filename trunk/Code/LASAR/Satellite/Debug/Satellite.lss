
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001426  000014ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001426  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010c  0080010c  000014c6  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000014c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001b94  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00001c19  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000278  00000000  00000000  00001db9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000241d  00000000  00000000  00002031  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000117f  00000000  00000000  0000444e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001857  00000000  00000000  000055cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  00006e24  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000475  00000000  00000000  00007064  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  000074d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000062c  00000000  00000000  000080fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  0000872a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 93 03 	jmp	0x726	; 0x726 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 37 02 	jmp	0x46e	; 0x46e <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 e2       	ldi	r30, 0x26	; 38
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 30       	cpi	r26, 0x0F	; 15
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile unsigned int count = 0;
volatile uint8_t rxflag = 0;
volatile uint8_t zerocross = 1;

int main(void)
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	a0 97       	sbiw	r28, 0x20	; 32
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	DDRB = (1<<PORTB0);
      be:	84 e2       	ldi	r24, 0x24	; 36
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
	//DDRB = (1 << PORTD6);
	DDRD = (1 << PORTD3);
      c8:	8a e2       	ldi	r24, 0x2A	; 42
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	28 e0       	ldi	r18, 0x08	; 8
      ce:	fc 01       	movw	r30, r24
      d0:	20 83       	st	Z, r18
	DDRD &= ~(1 << PORTD2);
      d2:	8a e2       	ldi	r24, 0x2A	; 42
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	2a e2       	ldi	r18, 0x2A	; 42
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	f9 01       	movw	r30, r18
      dc:	20 81       	ld	r18, Z
      de:	2b 7f       	andi	r18, 0xFB	; 251
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
	PORTB &= ~(1 << PORTB0);
      e4:	85 e2       	ldi	r24, 0x25	; 37
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	25 e2       	ldi	r18, 0x25	; 37
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	2e 7f       	andi	r18, 0xFE	; 254
      f2:	fc 01       	movw	r30, r24
      f4:	20 83       	st	Z, r18
	//PORTD &= (1 << PORTD6);
	
	initTimer(65);
      f6:	81 e4       	ldi	r24, 0x41	; 65
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	0e 94 c7 01 	call	0x38e	; 0x38e <initTimer>
	initInterrupt0();
      fe:	0e 94 06 02 	call	0x40c	; 0x40c <initInterrupt0>
	dim = 10;
     102:	8a e0       	ldi	r24, 0x0A	; 10
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	90 93 01 01 	sts	0x0101, r25
     10a:	80 93 00 01 	sts	0x0100, r24
	
	// turn on interrupts
	sei();
     10e:	78 94       	sei
	
	while(1)
	{
		for( int j = 1; j < 115; ++j )
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	9a 83       	std	Y+2, r25	; 0x02
     116:	89 83       	std	Y+1, r24	; 0x01
     118:	94 c0       	rjmp	.+296    	; 0x242 <main+0x19c>
		{
			PORTD |= (1 << PORTD3);
     11a:	8b e2       	ldi	r24, 0x2B	; 43
     11c:	90 e0       	ldi	r25, 0x00	; 0
     11e:	2b e2       	ldi	r18, 0x2B	; 43
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	f9 01       	movw	r30, r18
     124:	20 81       	ld	r18, Z
     126:	28 60       	ori	r18, 0x08	; 8
     128:	fc 01       	movw	r30, r24
     12a:	20 83       	st	Z, r18
			dim = j;
     12c:	89 81       	ldd	r24, Y+1	; 0x01
     12e:	9a 81       	ldd	r25, Y+2	; 0x02
     130:	90 93 01 01 	sts	0x0101, r25
     134:	80 93 00 01 	sts	0x0100, r24
     138:	80 e0       	ldi	r24, 0x00	; 0
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	a0 e2       	ldi	r26, 0x20	; 32
     13e:	b2 e4       	ldi	r27, 0x42	; 66
     140:	8d 83       	std	Y+5, r24	; 0x05
     142:	9e 83       	std	Y+6, r25	; 0x06
     144:	af 83       	std	Y+7, r26	; 0x07
     146:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     148:	6d 81       	ldd	r22, Y+5	; 0x05
     14a:	7e 81       	ldd	r23, Y+6	; 0x06
     14c:	8f 81       	ldd	r24, Y+7	; 0x07
     14e:	98 85       	ldd	r25, Y+8	; 0x08
     150:	20 e0       	ldi	r18, 0x00	; 0
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	4a e7       	ldi	r20, 0x7A	; 122
     156:	55 e4       	ldi	r21, 0x45	; 69
     158:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulsf3>
     15c:	dc 01       	movw	r26, r24
     15e:	cb 01       	movw	r24, r22
     160:	89 87       	std	Y+9, r24	; 0x09
     162:	9a 87       	std	Y+10, r25	; 0x0a
     164:	ab 87       	std	Y+11, r26	; 0x0b
     166:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     168:	11 e0       	ldi	r17, 0x01	; 1
     16a:	69 85       	ldd	r22, Y+9	; 0x09
     16c:	7a 85       	ldd	r23, Y+10	; 0x0a
     16e:	8b 85       	ldd	r24, Y+11	; 0x0b
     170:	9c 85       	ldd	r25, Y+12	; 0x0c
     172:	20 e0       	ldi	r18, 0x00	; 0
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	40 e8       	ldi	r20, 0x80	; 128
     178:	5f e3       	ldi	r21, 0x3F	; 63
     17a:	0e 94 c8 07 	call	0xf90	; 0xf90 <__ltsf2>
     17e:	88 23       	and	r24, r24
     180:	0c f0       	brlt	.+2      	; 0x184 <main+0xde>
     182:	10 e0       	ldi	r17, 0x00	; 0
     184:	11 23       	and	r17, r17
     186:	29 f0       	breq	.+10     	; 0x192 <main+0xec>
		__ticks = 1;
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	9e 87       	std	Y+14, r25	; 0x0e
     18e:	8d 87       	std	Y+13, r24	; 0x0d
     190:	46 c0       	rjmp	.+140    	; 0x21e <main+0x178>
	else if (__tmp > 65535)
     192:	11 e0       	ldi	r17, 0x01	; 1
     194:	69 85       	ldd	r22, Y+9	; 0x09
     196:	7a 85       	ldd	r23, Y+10	; 0x0a
     198:	8b 85       	ldd	r24, Y+11	; 0x0b
     19a:	9c 85       	ldd	r25, Y+12	; 0x0c
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	3f ef       	ldi	r19, 0xFF	; 255
     1a0:	4f e7       	ldi	r20, 0x7F	; 127
     1a2:	57 e4       	ldi	r21, 0x47	; 71
     1a4:	0e 94 68 07 	call	0xed0	; 0xed0 <__gtsf2>
     1a8:	18 16       	cp	r1, r24
     1aa:	0c f0       	brlt	.+2      	; 0x1ae <main+0x108>
     1ac:	10 e0       	ldi	r17, 0x00	; 0
     1ae:	11 23       	and	r17, r17
     1b0:	61 f1       	breq	.+88     	; 0x20a <main+0x164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1b2:	6d 81       	ldd	r22, Y+5	; 0x05
     1b4:	7e 81       	ldd	r23, Y+6	; 0x06
     1b6:	8f 81       	ldd	r24, Y+7	; 0x07
     1b8:	98 85       	ldd	r25, Y+8	; 0x08
     1ba:	20 e0       	ldi	r18, 0x00	; 0
     1bc:	30 e0       	ldi	r19, 0x00	; 0
     1be:	40 e2       	ldi	r20, 0x20	; 32
     1c0:	51 e4       	ldi	r21, 0x41	; 65
     1c2:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulsf3>
     1c6:	dc 01       	movw	r26, r24
     1c8:	cb 01       	movw	r24, r22
     1ca:	bc 01       	movw	r22, r24
     1cc:	cd 01       	movw	r24, r26
     1ce:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixunssfsi>
     1d2:	dc 01       	movw	r26, r24
     1d4:	cb 01       	movw	r24, r22
     1d6:	9e 87       	std	Y+14, r25	; 0x0e
     1d8:	8d 87       	std	Y+13, r24	; 0x0d
     1da:	12 c0       	rjmp	.+36     	; 0x200 <main+0x15a>
     1dc:	80 e9       	ldi	r24, 0x90	; 144
     1de:	91 e0       	ldi	r25, 0x01	; 1
     1e0:	98 8b       	std	Y+16, r25	; 0x10
     1e2:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1e4:	8f 85       	ldd	r24, Y+15	; 0x0f
     1e6:	98 89       	ldd	r25, Y+16	; 0x10
     1e8:	8c 01       	movw	r16, r24
     1ea:	c8 01       	movw	r24, r16
     1ec:	01 97       	sbiw	r24, 0x01	; 1
     1ee:	f1 f7       	brne	.-4      	; 0x1ec <main+0x146>
     1f0:	8c 01       	movw	r16, r24
     1f2:	18 8b       	std	Y+16, r17	; 0x10
     1f4:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1f6:	8d 85       	ldd	r24, Y+13	; 0x0d
     1f8:	9e 85       	ldd	r25, Y+14	; 0x0e
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	9e 87       	std	Y+14, r25	; 0x0e
     1fe:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     200:	8d 85       	ldd	r24, Y+13	; 0x0d
     202:	9e 85       	ldd	r25, Y+14	; 0x0e
     204:	00 97       	sbiw	r24, 0x00	; 0
     206:	51 f7       	brne	.-44     	; 0x1dc <main+0x136>
     208:	17 c0       	rjmp	.+46     	; 0x238 <main+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     20a:	69 85       	ldd	r22, Y+9	; 0x09
     20c:	7a 85       	ldd	r23, Y+10	; 0x0a
     20e:	8b 85       	ldd	r24, Y+11	; 0x0b
     210:	9c 85       	ldd	r25, Y+12	; 0x0c
     212:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixunssfsi>
     216:	dc 01       	movw	r26, r24
     218:	cb 01       	movw	r24, r22
     21a:	9e 87       	std	Y+14, r25	; 0x0e
     21c:	8d 87       	std	Y+13, r24	; 0x0d
     21e:	8d 85       	ldd	r24, Y+13	; 0x0d
     220:	9e 85       	ldd	r25, Y+14	; 0x0e
     222:	9a 8b       	std	Y+18, r25	; 0x12
     224:	89 8b       	std	Y+17, r24	; 0x11
     226:	89 89       	ldd	r24, Y+17	; 0x11
     228:	9a 89       	ldd	r25, Y+18	; 0x12
     22a:	8c 01       	movw	r16, r24
     22c:	f8 01       	movw	r30, r16
     22e:	31 97       	sbiw	r30, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <main+0x188>
     232:	8f 01       	movw	r16, r30
     234:	1a 8b       	std	Y+18, r17	; 0x12
     236:	09 8b       	std	Y+17, r16	; 0x11
	// turn on interrupts
	sei();
	
	while(1)
	{
		for( int j = 1; j < 115; ++j )
     238:	89 81       	ldd	r24, Y+1	; 0x01
     23a:	9a 81       	ldd	r25, Y+2	; 0x02
     23c:	01 96       	adiw	r24, 0x01	; 1
     23e:	9a 83       	std	Y+2, r25	; 0x02
     240:	89 83       	std	Y+1, r24	; 0x01
     242:	89 81       	ldd	r24, Y+1	; 0x01
     244:	9a 81       	ldd	r25, Y+2	; 0x02
     246:	83 37       	cpi	r24, 0x73	; 115
     248:	91 05       	cpc	r25, r1
     24a:	0c f4       	brge	.+2      	; 0x24e <main+0x1a8>
     24c:	66 cf       	rjmp	.-308    	; 0x11a <main+0x74>
		{
			PORTD |= (1 << PORTD3);
			dim = j;
			_delay_ms(40);
		}
		for( int j = 115; j > 1; --j)
     24e:	83 e7       	ldi	r24, 0x73	; 115
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	9c 83       	std	Y+4, r25	; 0x04
     254:	8b 83       	std	Y+3, r24	; 0x03
     256:	94 c0       	rjmp	.+296    	; 0x380 <main+0x2da>
		{
			PORTD &= ~(1 << PORTD3);
     258:	8b e2       	ldi	r24, 0x2B	; 43
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	2b e2       	ldi	r18, 0x2B	; 43
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	f9 01       	movw	r30, r18
     262:	20 81       	ld	r18, Z
     264:	27 7f       	andi	r18, 0xF7	; 247
     266:	fc 01       	movw	r30, r24
     268:	20 83       	st	Z, r18
			dim = j;
     26a:	8b 81       	ldd	r24, Y+3	; 0x03
     26c:	9c 81       	ldd	r25, Y+4	; 0x04
     26e:	90 93 01 01 	sts	0x0101, r25
     272:	80 93 00 01 	sts	0x0100, r24
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	a0 e2       	ldi	r26, 0x20	; 32
     27c:	b2 e4       	ldi	r27, 0x42	; 66
     27e:	8b 8b       	std	Y+19, r24	; 0x13
     280:	9c 8b       	std	Y+20, r25	; 0x14
     282:	ad 8b       	std	Y+21, r26	; 0x15
     284:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     286:	6b 89       	ldd	r22, Y+19	; 0x13
     288:	7c 89       	ldd	r23, Y+20	; 0x14
     28a:	8d 89       	ldd	r24, Y+21	; 0x15
     28c:	9e 89       	ldd	r25, Y+22	; 0x16
     28e:	20 e0       	ldi	r18, 0x00	; 0
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	4a e7       	ldi	r20, 0x7A	; 122
     294:	55 e4       	ldi	r21, 0x45	; 69
     296:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulsf3>
     29a:	dc 01       	movw	r26, r24
     29c:	cb 01       	movw	r24, r22
     29e:	8f 8b       	std	Y+23, r24	; 0x17
     2a0:	98 8f       	std	Y+24, r25	; 0x18
     2a2:	a9 8f       	std	Y+25, r26	; 0x19
     2a4:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     2a6:	11 e0       	ldi	r17, 0x01	; 1
     2a8:	6f 89       	ldd	r22, Y+23	; 0x17
     2aa:	78 8d       	ldd	r23, Y+24	; 0x18
     2ac:	89 8d       	ldd	r24, Y+25	; 0x19
     2ae:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	30 e0       	ldi	r19, 0x00	; 0
     2b4:	40 e8       	ldi	r20, 0x80	; 128
     2b6:	5f e3       	ldi	r21, 0x3F	; 63
     2b8:	0e 94 c8 07 	call	0xf90	; 0xf90 <__ltsf2>
     2bc:	88 23       	and	r24, r24
     2be:	0c f0       	brlt	.+2      	; 0x2c2 <main+0x21c>
     2c0:	10 e0       	ldi	r17, 0x00	; 0
     2c2:	11 23       	and	r17, r17
     2c4:	29 f0       	breq	.+10     	; 0x2d0 <main+0x22a>
		__ticks = 1;
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	9c 8f       	std	Y+28, r25	; 0x1c
     2cc:	8b 8f       	std	Y+27, r24	; 0x1b
     2ce:	46 c0       	rjmp	.+140    	; 0x35c <main+0x2b6>
	else if (__tmp > 65535)
     2d0:	11 e0       	ldi	r17, 0x01	; 1
     2d2:	6f 89       	ldd	r22, Y+23	; 0x17
     2d4:	78 8d       	ldd	r23, Y+24	; 0x18
     2d6:	89 8d       	ldd	r24, Y+25	; 0x19
     2d8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2da:	20 e0       	ldi	r18, 0x00	; 0
     2dc:	3f ef       	ldi	r19, 0xFF	; 255
     2de:	4f e7       	ldi	r20, 0x7F	; 127
     2e0:	57 e4       	ldi	r21, 0x47	; 71
     2e2:	0e 94 68 07 	call	0xed0	; 0xed0 <__gtsf2>
     2e6:	18 16       	cp	r1, r24
     2e8:	0c f0       	brlt	.+2      	; 0x2ec <main+0x246>
     2ea:	10 e0       	ldi	r17, 0x00	; 0
     2ec:	11 23       	and	r17, r17
     2ee:	61 f1       	breq	.+88     	; 0x348 <main+0x2a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2f0:	6b 89       	ldd	r22, Y+19	; 0x13
     2f2:	7c 89       	ldd	r23, Y+20	; 0x14
     2f4:	8d 89       	ldd	r24, Y+21	; 0x15
     2f6:	9e 89       	ldd	r25, Y+22	; 0x16
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	40 e2       	ldi	r20, 0x20	; 32
     2fe:	51 e4       	ldi	r21, 0x41	; 65
     300:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulsf3>
     304:	dc 01       	movw	r26, r24
     306:	cb 01       	movw	r24, r22
     308:	bc 01       	movw	r22, r24
     30a:	cd 01       	movw	r24, r26
     30c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixunssfsi>
     310:	dc 01       	movw	r26, r24
     312:	cb 01       	movw	r24, r22
     314:	9c 8f       	std	Y+28, r25	; 0x1c
     316:	8b 8f       	std	Y+27, r24	; 0x1b
     318:	12 c0       	rjmp	.+36     	; 0x33e <main+0x298>
     31a:	80 e9       	ldi	r24, 0x90	; 144
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	9e 8f       	std	Y+30, r25	; 0x1e
     320:	8d 8f       	std	Y+29, r24	; 0x1d
     322:	8d 8d       	ldd	r24, Y+29	; 0x1d
     324:	9e 8d       	ldd	r25, Y+30	; 0x1e
     326:	8c 01       	movw	r16, r24
     328:	c8 01       	movw	r24, r16
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	f1 f7       	brne	.-4      	; 0x32a <main+0x284>
     32e:	8c 01       	movw	r16, r24
     330:	1e 8f       	std	Y+30, r17	; 0x1e
     332:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     334:	8b 8d       	ldd	r24, Y+27	; 0x1b
     336:	9c 8d       	ldd	r25, Y+28	; 0x1c
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	9c 8f       	std	Y+28, r25	; 0x1c
     33c:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     33e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     340:	9c 8d       	ldd	r25, Y+28	; 0x1c
     342:	00 97       	sbiw	r24, 0x00	; 0
     344:	51 f7       	brne	.-44     	; 0x31a <main+0x274>
     346:	17 c0       	rjmp	.+46     	; 0x376 <main+0x2d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     348:	6f 89       	ldd	r22, Y+23	; 0x17
     34a:	78 8d       	ldd	r23, Y+24	; 0x18
     34c:	89 8d       	ldd	r24, Y+25	; 0x19
     34e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     350:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixunssfsi>
     354:	dc 01       	movw	r26, r24
     356:	cb 01       	movw	r24, r22
     358:	9c 8f       	std	Y+28, r25	; 0x1c
     35a:	8b 8f       	std	Y+27, r24	; 0x1b
     35c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     35e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     360:	98 a3       	std	Y+32, r25	; 0x20
     362:	8f 8f       	std	Y+31, r24	; 0x1f
     364:	8f 8d       	ldd	r24, Y+31	; 0x1f
     366:	98 a1       	ldd	r25, Y+32	; 0x20
     368:	8c 01       	movw	r16, r24
     36a:	f8 01       	movw	r30, r16
     36c:	31 97       	sbiw	r30, 0x01	; 1
     36e:	f1 f7       	brne	.-4      	; 0x36c <main+0x2c6>
     370:	8f 01       	movw	r16, r30
     372:	18 a3       	std	Y+32, r17	; 0x20
     374:	0f 8f       	std	Y+31, r16	; 0x1f
		{
			PORTD |= (1 << PORTD3);
			dim = j;
			_delay_ms(40);
		}
		for( int j = 115; j > 1; --j)
     376:	8b 81       	ldd	r24, Y+3	; 0x03
     378:	9c 81       	ldd	r25, Y+4	; 0x04
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	9c 83       	std	Y+4, r25	; 0x04
     37e:	8b 83       	std	Y+3, r24	; 0x03
     380:	8b 81       	ldd	r24, Y+3	; 0x03
     382:	9c 81       	ldd	r25, Y+4	; 0x04
     384:	82 30       	cpi	r24, 0x02	; 2
     386:	91 05       	cpc	r25, r1
     388:	0c f0       	brlt	.+2      	; 0x38c <main+0x2e6>
     38a:	66 cf       	rjmp	.-308    	; 0x258 <main+0x1b2>
		{
			PORTD &= ~(1 << PORTD3);
			dim = j;
			_delay_ms(40);
		}
	}				
     38c:	c1 ce       	rjmp	.-638    	; 0x110 <main+0x6a>

0000038e <initTimer>:
/*
 * Function Name:
 * Author: Chris Williams
 */
void initTimer( int dutycycle )
{
     38e:	df 93       	push	r29
     390:	cf 93       	push	r28
     392:	00 d0       	rcall	.+0      	; 0x394 <initTimer+0x6>
     394:	cd b7       	in	r28, 0x3d	; 61
     396:	de b7       	in	r29, 0x3e	; 62
     398:	9a 83       	std	Y+2, r25	; 0x02
     39a:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = 130; //cap of Timer0
     39c:	87 e4       	ldi	r24, 0x47	; 71
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	22 e8       	ldi	r18, 0x82	; 130
     3a2:	fc 01       	movw	r30, r24
     3a4:	20 83       	st	Z, r18
	OCR0B = dutycycle;
     3a6:	88 e4       	ldi	r24, 0x48	; 72
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	29 81       	ldd	r18, Y+1	; 0x01
     3ac:	fc 01       	movw	r30, r24
     3ae:	20 83       	st	Z, r18
	
    DDRD |= (1 << PORTD6);         
     3b0:	8a e2       	ldi	r24, 0x2A	; 42
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	2a e2       	ldi	r18, 0x2A	; 42
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	f9 01       	movw	r30, r18
     3ba:	20 81       	ld	r18, Z
     3bc:	20 64       	ori	r18, 0x40	; 64
     3be:	fc 01       	movw	r30, r24
     3c0:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);
     3c2:	84 e4       	ldi	r24, 0x44	; 68
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	24 e4       	ldi	r18, 0x44	; 68
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	f9 01       	movw	r30, r18
     3cc:	20 81       	ld	r18, Z
     3ce:	20 68       	ori	r18, 0x80	; 128
     3d0:	fc 01       	movw	r30, r24
     3d2:	20 83       	st	Z, r18
    // set non-inverting mode

    TCCR0A |= (1 << WGM01);
     3d4:	84 e4       	ldi	r24, 0x44	; 68
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	24 e4       	ldi	r18, 0x44	; 68
     3da:	30 e0       	ldi	r19, 0x00	; 0
     3dc:	f9 01       	movw	r30, r18
     3de:	20 81       	ld	r18, Z
     3e0:	22 60       	ori	r18, 0x02	; 2
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
    // set CTC (Clear Timer on Compare) Mode

    TCCR0B |= (1 << CS01);
     3e6:	85 e4       	ldi	r24, 0x45	; 69
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	25 e4       	ldi	r18, 0x45	; 69
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	f9 01       	movw	r30, r18
     3f0:	20 81       	ld	r18, Z
     3f2:	22 60       	ori	r18, 0x02	; 2
     3f4:	fc 01       	movw	r30, r24
     3f6:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0A) | (1 << TOIE0);
     3f8:	8e e6       	ldi	r24, 0x6E	; 110
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	23 e0       	ldi	r18, 0x03	; 3
     3fe:	fc 01       	movw	r30, r24
     400:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0B);
	//Enable COMPA
	*/
}
     402:	0f 90       	pop	r0
     404:	0f 90       	pop	r0
     406:	cf 91       	pop	r28
     408:	df 91       	pop	r29
     40a:	08 95       	ret

0000040c <initInterrupt0>:


void initInterrupt0()
{
     40c:	df 93       	push	r29
     40e:	cf 93       	push	r28
     410:	cd b7       	in	r28, 0x3d	; 61
     412:	de b7       	in	r29, 0x3e	; 62
	PORTD |= (1 << PORTD2);
     414:	8b e2       	ldi	r24, 0x2B	; 43
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	2b e2       	ldi	r18, 0x2B	; 43
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	f9 01       	movw	r30, r18
     41e:	20 81       	ld	r18, Z
     420:	24 60       	ori	r18, 0x04	; 4
     422:	fc 01       	movw	r30, r24
     424:	20 83       	st	Z, r18
	EICRA = 0b00000010;
     426:	89 e6       	ldi	r24, 0x69	; 105
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	22 e0       	ldi	r18, 0x02	; 2
     42c:	fc 01       	movw	r30, r24
     42e:	20 83       	st	Z, r18
	EIMSK |= (1 << INT0);
     430:	8d e3       	ldi	r24, 0x3D	; 61
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	2d e3       	ldi	r18, 0x3D	; 61
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	f9 01       	movw	r30, r18
     43a:	20 81       	ld	r18, Z
     43c:	21 60       	ori	r18, 0x01	; 1
     43e:	fc 01       	movw	r30, r24
     440:	20 83       	st	Z, r18
}	
     442:	cf 91       	pop	r28
     444:	df 91       	pop	r29
     446:	08 95       	ret

00000448 <setCycle>:


void setCycle(int dutycycle)
{
     448:	df 93       	push	r29
     44a:	cf 93       	push	r28
     44c:	00 d0       	rcall	.+0      	; 0x44e <setCycle+0x6>
     44e:	cd b7       	in	r28, 0x3d	; 61
     450:	de b7       	in	r29, 0x3e	; 62
     452:	9a 83       	std	Y+2, r25	; 0x02
     454:	89 83       	std	Y+1, r24	; 0x01
	cli();
     456:	f8 94       	cli
	OCR0A = dutycycle;
     458:	87 e4       	ldi	r24, 0x47	; 71
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	29 81       	ldd	r18, Y+1	; 0x01
     45e:	fc 01       	movw	r30, r24
     460:	20 83       	st	Z, r18
	sei();
     462:	78 94       	sei
	return;
}
     464:	0f 90       	pop	r0
     466:	0f 90       	pop	r0
     468:	cf 91       	pop	r28
     46a:	df 91       	pop	r29
     46c:	08 95       	ret

0000046e <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     46e:	1f 92       	push	r1
     470:	0f 92       	push	r0
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	0f 92       	push	r0
     476:	11 24       	eor	r1, r1
     478:	8f 93       	push	r24
     47a:	9f 93       	push	r25
     47c:	ef 93       	push	r30
     47e:	ff 93       	push	r31
     480:	df 93       	push	r29
     482:	cf 93       	push	r28
     484:	cd b7       	in	r28, 0x3d	; 61
     486:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1 << RXC0)) )
     488:	00 00       	nop
     48a:	80 ec       	ldi	r24, 0xC0	; 192
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	fc 01       	movw	r30, r24
     490:	80 81       	ld	r24, Z
     492:	88 23       	and	r24, r24
     494:	d4 f7       	brge	.-12     	; 0x48a <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	//dim = UDR0;
	rxflag = 1;
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	80 93 0e 01 	sts	0x010E, r24
}
     49c:	cf 91       	pop	r28
     49e:	df 91       	pop	r29
     4a0:	ff 91       	pop	r31
     4a2:	ef 91       	pop	r30
     4a4:	9f 91       	pop	r25
     4a6:	8f 91       	pop	r24
     4a8:	0f 90       	pop	r0
     4aa:	0f be       	out	0x3f, r0	; 63
     4ac:	0f 90       	pop	r0
     4ae:	1f 90       	pop	r1
     4b0:	18 95       	reti

000004b2 <__vector_14>:
 
 
//OLD: 2/15/2012
//ISR(TIMER0_OVF_vect)
ISR(TIMER0_COMPA_vect)
{
     4b2:	1f 92       	push	r1
     4b4:	0f 92       	push	r0
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	0f 92       	push	r0
     4ba:	11 24       	eor	r1, r1
     4bc:	0f 93       	push	r16
     4be:	1f 93       	push	r17
     4c0:	2f 93       	push	r18
     4c2:	3f 93       	push	r19
     4c4:	4f 93       	push	r20
     4c6:	5f 93       	push	r21
     4c8:	6f 93       	push	r22
     4ca:	7f 93       	push	r23
     4cc:	8f 93       	push	r24
     4ce:	9f 93       	push	r25
     4d0:	af 93       	push	r26
     4d2:	bf 93       	push	r27
     4d4:	ef 93       	push	r30
     4d6:	ff 93       	push	r31
     4d8:	df 93       	push	r29
     4da:	cf 93       	push	r28
     4dc:	cd b7       	in	r28, 0x3d	; 61
     4de:	de b7       	in	r29, 0x3e	; 62
     4e0:	68 97       	sbiw	r28, 0x18	; 24
     4e2:	de bf       	out	0x3e, r29	; 62
     4e4:	cd bf       	out	0x3d, r28	; 61
	if( zerocross == 1) 
     4e6:	80 91 02 01 	lds	r24, 0x0102
     4ea:	81 30       	cpi	r24, 0x01	; 1
     4ec:	09 f0       	breq	.+2      	; 0x4f0 <__vector_14+0x3e>
     4ee:	03 c1       	rjmp	.+518    	; 0x6f6 <__vector_14+0x244>
	{
		if( count >= dim )
     4f0:	20 91 0c 01 	lds	r18, 0x010C
     4f4:	30 91 0d 01 	lds	r19, 0x010D
     4f8:	80 91 00 01 	lds	r24, 0x0100
     4fc:	90 91 01 01 	lds	r25, 0x0101
     500:	28 17       	cp	r18, r24
     502:	39 07       	cpc	r19, r25
     504:	08 f4       	brcc	.+2      	; 0x508 <__vector_14+0x56>
     506:	ee c0       	rjmp	.+476    	; 0x6e4 <__vector_14+0x232>
		{
			//PORTD |= (1 << PORTD6);
			PORTB |= (1 << PORTB0);
     508:	85 e2       	ldi	r24, 0x25	; 37
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	25 e2       	ldi	r18, 0x25	; 37
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	f9 01       	movw	r30, r18
     512:	20 81       	ld	r18, Z
     514:	21 60       	ori	r18, 0x01	; 1
     516:	fc 01       	movw	r30, r24
     518:	20 83       	st	Z, r18
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	a0 ea       	ldi	r26, 0xA0	; 160
     520:	b0 e4       	ldi	r27, 0x40	; 64
     522:	89 83       	std	Y+1, r24	; 0x01
     524:	9a 83       	std	Y+2, r25	; 0x02
     526:	ab 83       	std	Y+3, r26	; 0x03
     528:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     52a:	69 81       	ldd	r22, Y+1	; 0x01
     52c:	7a 81       	ldd	r23, Y+2	; 0x02
     52e:	8b 81       	ldd	r24, Y+3	; 0x03
     530:	9c 81       	ldd	r25, Y+4	; 0x04
     532:	2b ea       	ldi	r18, 0xAB	; 171
     534:	3a ea       	ldi	r19, 0xAA	; 170
     536:	4a ea       	ldi	r20, 0xAA	; 170
     538:	50 e4       	ldi	r21, 0x40	; 64
     53a:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulsf3>
     53e:	dc 01       	movw	r26, r24
     540:	cb 01       	movw	r24, r22
     542:	8d 83       	std	Y+5, r24	; 0x05
     544:	9e 83       	std	Y+6, r25	; 0x06
     546:	af 83       	std	Y+7, r26	; 0x07
     548:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     54a:	11 e0       	ldi	r17, 0x01	; 1
     54c:	6d 81       	ldd	r22, Y+5	; 0x05
     54e:	7e 81       	ldd	r23, Y+6	; 0x06
     550:	8f 81       	ldd	r24, Y+7	; 0x07
     552:	98 85       	ldd	r25, Y+8	; 0x08
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	30 e0       	ldi	r19, 0x00	; 0
     558:	40 e8       	ldi	r20, 0x80	; 128
     55a:	5f e3       	ldi	r21, 0x3F	; 63
     55c:	0e 94 c8 07 	call	0xf90	; 0xf90 <__ltsf2>
     560:	88 23       	and	r24, r24
     562:	0c f0       	brlt	.+2      	; 0x566 <__vector_14+0xb4>
     564:	10 e0       	ldi	r17, 0x00	; 0
     566:	11 23       	and	r17, r17
     568:	19 f0       	breq	.+6      	; 0x570 <__vector_14+0xbe>
		__ticks = 1;
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	89 87       	std	Y+9, r24	; 0x09
     56e:	a3 c0       	rjmp	.+326    	; 0x6b6 <__vector_14+0x204>
	else if (__tmp > 255)
     570:	11 e0       	ldi	r17, 0x01	; 1
     572:	6d 81       	ldd	r22, Y+5	; 0x05
     574:	7e 81       	ldd	r23, Y+6	; 0x06
     576:	8f 81       	ldd	r24, Y+7	; 0x07
     578:	98 85       	ldd	r25, Y+8	; 0x08
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	4f e7       	ldi	r20, 0x7F	; 127
     580:	53 e4       	ldi	r21, 0x43	; 67
     582:	0e 94 68 07 	call	0xed0	; 0xed0 <__gtsf2>
     586:	18 16       	cp	r1, r24
     588:	0c f0       	brlt	.+2      	; 0x58c <__vector_14+0xda>
     58a:	10 e0       	ldi	r17, 0x00	; 0
     58c:	11 23       	and	r17, r17
     58e:	09 f4       	brne	.+2      	; 0x592 <__vector_14+0xe0>
     590:	89 c0       	rjmp	.+274    	; 0x6a4 <__vector_14+0x1f2>
	{
		_delay_ms(__us / 1000.0);
     592:	69 81       	ldd	r22, Y+1	; 0x01
     594:	7a 81       	ldd	r23, Y+2	; 0x02
     596:	8b 81       	ldd	r24, Y+3	; 0x03
     598:	9c 81       	ldd	r25, Y+4	; 0x04
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	4a e7       	ldi	r20, 0x7A	; 122
     5a0:	54 e4       	ldi	r21, 0x44	; 68
     5a2:	0e 94 ba 06 	call	0xd74	; 0xd74 <__divsf3>
     5a6:	dc 01       	movw	r26, r24
     5a8:	cb 01       	movw	r24, r22
     5aa:	8a 87       	std	Y+10, r24	; 0x0a
     5ac:	9b 87       	std	Y+11, r25	; 0x0b
     5ae:	ac 87       	std	Y+12, r26	; 0x0c
     5b0:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5b2:	6a 85       	ldd	r22, Y+10	; 0x0a
     5b4:	7b 85       	ldd	r23, Y+11	; 0x0b
     5b6:	8c 85       	ldd	r24, Y+12	; 0x0c
     5b8:	9d 85       	ldd	r25, Y+13	; 0x0d
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	4a e7       	ldi	r20, 0x7A	; 122
     5c0:	55 e4       	ldi	r21, 0x45	; 69
     5c2:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulsf3>
     5c6:	dc 01       	movw	r26, r24
     5c8:	cb 01       	movw	r24, r22
     5ca:	8e 87       	std	Y+14, r24	; 0x0e
     5cc:	9f 87       	std	Y+15, r25	; 0x0f
     5ce:	a8 8b       	std	Y+16, r26	; 0x10
     5d0:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     5d2:	11 e0       	ldi	r17, 0x01	; 1
     5d4:	6e 85       	ldd	r22, Y+14	; 0x0e
     5d6:	7f 85       	ldd	r23, Y+15	; 0x0f
     5d8:	88 89       	ldd	r24, Y+16	; 0x10
     5da:	99 89       	ldd	r25, Y+17	; 0x11
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	40 e8       	ldi	r20, 0x80	; 128
     5e2:	5f e3       	ldi	r21, 0x3F	; 63
     5e4:	0e 94 c8 07 	call	0xf90	; 0xf90 <__ltsf2>
     5e8:	88 23       	and	r24, r24
     5ea:	0c f0       	brlt	.+2      	; 0x5ee <__vector_14+0x13c>
     5ec:	10 e0       	ldi	r17, 0x00	; 0
     5ee:	11 23       	and	r17, r17
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__vector_14+0x14a>
		__ticks = 1;
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	9b 8b       	std	Y+19, r25	; 0x13
     5f8:	8a 8b       	std	Y+18, r24	; 0x12
     5fa:	46 c0       	rjmp	.+140    	; 0x688 <__vector_14+0x1d6>
	else if (__tmp > 65535)
     5fc:	11 e0       	ldi	r17, 0x01	; 1
     5fe:	6e 85       	ldd	r22, Y+14	; 0x0e
     600:	7f 85       	ldd	r23, Y+15	; 0x0f
     602:	88 89       	ldd	r24, Y+16	; 0x10
     604:	99 89       	ldd	r25, Y+17	; 0x11
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	3f ef       	ldi	r19, 0xFF	; 255
     60a:	4f e7       	ldi	r20, 0x7F	; 127
     60c:	57 e4       	ldi	r21, 0x47	; 71
     60e:	0e 94 68 07 	call	0xed0	; 0xed0 <__gtsf2>
     612:	18 16       	cp	r1, r24
     614:	0c f0       	brlt	.+2      	; 0x618 <__vector_14+0x166>
     616:	10 e0       	ldi	r17, 0x00	; 0
     618:	11 23       	and	r17, r17
     61a:	61 f1       	breq	.+88     	; 0x674 <__vector_14+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     61c:	6a 85       	ldd	r22, Y+10	; 0x0a
     61e:	7b 85       	ldd	r23, Y+11	; 0x0b
     620:	8c 85       	ldd	r24, Y+12	; 0x0c
     622:	9d 85       	ldd	r25, Y+13	; 0x0d
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	40 e2       	ldi	r20, 0x20	; 32
     62a:	51 e4       	ldi	r21, 0x41	; 65
     62c:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulsf3>
     630:	dc 01       	movw	r26, r24
     632:	cb 01       	movw	r24, r22
     634:	bc 01       	movw	r22, r24
     636:	cd 01       	movw	r24, r26
     638:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixunssfsi>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	9b 8b       	std	Y+19, r25	; 0x13
     642:	8a 8b       	std	Y+18, r24	; 0x12
     644:	12 c0       	rjmp	.+36     	; 0x66a <__vector_14+0x1b8>
     646:	80 e9       	ldi	r24, 0x90	; 144
     648:	91 e0       	ldi	r25, 0x01	; 1
     64a:	9d 8b       	std	Y+21, r25	; 0x15
     64c:	8c 8b       	std	Y+20, r24	; 0x14
     64e:	8c 89       	ldd	r24, Y+20	; 0x14
     650:	9d 89       	ldd	r25, Y+21	; 0x15
     652:	8c 01       	movw	r16, r24
     654:	c8 01       	movw	r24, r16
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <__vector_14+0x1a4>
     65a:	8c 01       	movw	r16, r24
     65c:	1d 8b       	std	Y+21, r17	; 0x15
     65e:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     660:	8a 89       	ldd	r24, Y+18	; 0x12
     662:	9b 89       	ldd	r25, Y+19	; 0x13
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	9b 8b       	std	Y+19, r25	; 0x13
     668:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     66a:	8a 89       	ldd	r24, Y+18	; 0x12
     66c:	9b 89       	ldd	r25, Y+19	; 0x13
     66e:	00 97       	sbiw	r24, 0x00	; 0
     670:	51 f7       	brne	.-44     	; 0x646 <__vector_14+0x194>
     672:	28 c0       	rjmp	.+80     	; 0x6c4 <__vector_14+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     674:	6e 85       	ldd	r22, Y+14	; 0x0e
     676:	7f 85       	ldd	r23, Y+15	; 0x0f
     678:	88 89       	ldd	r24, Y+16	; 0x10
     67a:	99 89       	ldd	r25, Y+17	; 0x11
     67c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixunssfsi>
     680:	dc 01       	movw	r26, r24
     682:	cb 01       	movw	r24, r22
     684:	9b 8b       	std	Y+19, r25	; 0x13
     686:	8a 8b       	std	Y+18, r24	; 0x12
     688:	8a 89       	ldd	r24, Y+18	; 0x12
     68a:	9b 89       	ldd	r25, Y+19	; 0x13
     68c:	9f 8b       	std	Y+23, r25	; 0x17
     68e:	8e 8b       	std	Y+22, r24	; 0x16
     690:	8e 89       	ldd	r24, Y+22	; 0x16
     692:	9f 89       	ldd	r25, Y+23	; 0x17
     694:	8c 01       	movw	r16, r24
     696:	f8 01       	movw	r30, r16
     698:	31 97       	sbiw	r30, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <__vector_14+0x1e6>
     69c:	8f 01       	movw	r16, r30
     69e:	1f 8b       	std	Y+23, r17	; 0x17
     6a0:	0e 8b       	std	Y+22, r16	; 0x16
     6a2:	10 c0       	rjmp	.+32     	; 0x6c4 <__vector_14+0x212>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     6a4:	6d 81       	ldd	r22, Y+5	; 0x05
     6a6:	7e 81       	ldd	r23, Y+6	; 0x06
     6a8:	8f 81       	ldd	r24, Y+7	; 0x07
     6aa:	98 85       	ldd	r25, Y+8	; 0x08
     6ac:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixunssfsi>
     6b0:	dc 01       	movw	r26, r24
     6b2:	cb 01       	movw	r24, r22
     6b4:	89 87       	std	Y+9, r24	; 0x09
     6b6:	89 85       	ldd	r24, Y+9	; 0x09
     6b8:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     6ba:	88 8d       	ldd	r24, Y+24	; 0x18
     6bc:	18 2f       	mov	r17, r24
     6be:	1a 95       	dec	r17
     6c0:	f1 f7       	brne	.-4      	; 0x6be <__vector_14+0x20c>
     6c2:	18 8f       	std	Y+24, r17	; 0x18
			_delay_us( 5 );
			//PORTD &= ~(1 << PORTD6);
			PORTB &= ~(1 << PORTB0);
     6c4:	85 e2       	ldi	r24, 0x25	; 37
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	25 e2       	ldi	r18, 0x25	; 37
     6ca:	30 e0       	ldi	r19, 0x00	; 0
     6cc:	f9 01       	movw	r30, r18
     6ce:	20 81       	ld	r18, Z
     6d0:	2e 7f       	andi	r18, 0xFE	; 254
     6d2:	fc 01       	movw	r30, r24
     6d4:	20 83       	st	Z, r18
			count = 0;
     6d6:	10 92 0d 01 	sts	0x010D, r1
     6da:	10 92 0c 01 	sts	0x010C, r1
			zerocross = 0;
     6de:	10 92 02 01 	sts	0x0102, r1
     6e2:	09 c0       	rjmp	.+18     	; 0x6f6 <__vector_14+0x244>
		}
		else
		{
			
			count = count + 1;
     6e4:	80 91 0c 01 	lds	r24, 0x010C
     6e8:	90 91 0d 01 	lds	r25, 0x010D
     6ec:	01 96       	adiw	r24, 0x01	; 1
     6ee:	90 93 0d 01 	sts	0x010D, r25
     6f2:	80 93 0c 01 	sts	0x010C, r24
		}
	}
}
     6f6:	68 96       	adiw	r28, 0x18	; 24
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	cd bf       	out	0x3d, r28	; 61
     6fc:	cf 91       	pop	r28
     6fe:	df 91       	pop	r29
     700:	ff 91       	pop	r31
     702:	ef 91       	pop	r30
     704:	bf 91       	pop	r27
     706:	af 91       	pop	r26
     708:	9f 91       	pop	r25
     70a:	8f 91       	pop	r24
     70c:	7f 91       	pop	r23
     70e:	6f 91       	pop	r22
     710:	5f 91       	pop	r21
     712:	4f 91       	pop	r20
     714:	3f 91       	pop	r19
     716:	2f 91       	pop	r18
     718:	1f 91       	pop	r17
     71a:	0f 91       	pop	r16
     71c:	0f 90       	pop	r0
     71e:	0f be       	out	0x3f, r0	; 63
     720:	0f 90       	pop	r0
     722:	1f 90       	pop	r1
     724:	18 95       	reti

00000726 <__vector_1>:

ISR(INT0_vect)
{
     726:	1f 92       	push	r1
     728:	0f 92       	push	r0
     72a:	0f b6       	in	r0, 0x3f	; 63
     72c:	0f 92       	push	r0
     72e:	11 24       	eor	r1, r1
     730:	8f 93       	push	r24
     732:	df 93       	push	r29
     734:	cf 93       	push	r28
     736:	cd b7       	in	r28, 0x3d	; 61
     738:	de b7       	in	r29, 0x3e	; 62
	zerocross = 1;
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	80 93 02 01 	sts	0x0102, r24
     740:	cf 91       	pop	r28
     742:	df 91       	pop	r29
     744:	8f 91       	pop	r24
     746:	0f 90       	pop	r0
     748:	0f be       	out	0x3f, r0	; 63
     74a:	0f 90       	pop	r0
     74c:	1f 90       	pop	r1
     74e:	18 95       	reti

00000750 <USART_Init>:
 */ 

#include <avr\io.h> 

void USART_Init( unsigned int ubrr)
{
     750:	df 93       	push	r29
     752:	cf 93       	push	r28
     754:	00 d0       	rcall	.+0      	; 0x756 <USART_Init+0x6>
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
     75a:	9a 83       	std	Y+2, r25	; 0x02
     75c:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     75e:	85 ec       	ldi	r24, 0xC5	; 197
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	29 81       	ldd	r18, Y+1	; 0x01
     764:	3a 81       	ldd	r19, Y+2	; 0x02
     766:	23 2f       	mov	r18, r19
     768:	33 27       	eor	r19, r19
     76a:	fc 01       	movw	r30, r24
     76c:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     76e:	84 ec       	ldi	r24, 0xC4	; 196
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	29 81       	ldd	r18, Y+1	; 0x01
     774:	fc 01       	movw	r30, r24
     776:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     778:	81 ec       	ldi	r24, 0xC1	; 193
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	28 e9       	ldi	r18, 0x98	; 152
     77e:	fc 01       	movw	r30, r24
     780:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     782:	82 ec       	ldi	r24, 0xC2	; 194
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	26 e0       	ldi	r18, 0x06	; 6
     788:	fc 01       	movw	r30, r24
     78a:	20 83       	st	Z, r18
}
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	cf 91       	pop	r28
     792:	df 91       	pop	r29
     794:	08 95       	ret

00000796 <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     796:	df 93       	push	r29
     798:	cf 93       	push	r28
     79a:	0f 92       	push	r0
     79c:	cd b7       	in	r28, 0x3d	; 61
     79e:	de b7       	in	r29, 0x3e	; 62
     7a0:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     7a2:	00 00       	nop
     7a4:	80 ec       	ldi	r24, 0xC0	; 192
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	fc 01       	movw	r30, r24
     7aa:	80 81       	ld	r24, Z
     7ac:	88 2f       	mov	r24, r24
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	80 72       	andi	r24, 0x20	; 32
     7b2:	90 70       	andi	r25, 0x00	; 0
     7b4:	00 97       	sbiw	r24, 0x00	; 0
     7b6:	b1 f3       	breq	.-20     	; 0x7a4 <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     7b8:	86 ec       	ldi	r24, 0xC6	; 198
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	29 81       	ldd	r18, Y+1	; 0x01
     7be:	fc 01       	movw	r30, r24
     7c0:	20 83       	st	Z, r18
}
     7c2:	0f 90       	pop	r0
     7c4:	cf 91       	pop	r28
     7c6:	df 91       	pop	r29
     7c8:	08 95       	ret

000007ca <USART_Receive>:


unsigned char USART_Receive( void )
{
     7ca:	df 93       	push	r29
     7cc:	cf 93       	push	r28
     7ce:	cd b7       	in	r28, 0x3d	; 61
     7d0:	de b7       	in	r29, 0x3e	; 62
	
}
     7d2:	cf 91       	pop	r28
     7d4:	df 91       	pop	r29
     7d6:	08 95       	ret

000007d8 <__fixunssfsi>:
     7d8:	ef 92       	push	r14
     7da:	ff 92       	push	r15
     7dc:	0f 93       	push	r16
     7de:	1f 93       	push	r17
     7e0:	7b 01       	movw	r14, r22
     7e2:	8c 01       	movw	r16, r24
     7e4:	20 e0       	ldi	r18, 0x00	; 0
     7e6:	30 e0       	ldi	r19, 0x00	; 0
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	5f e4       	ldi	r21, 0x4F	; 79
     7ec:	0e 94 98 07 	call	0xf30	; 0xf30 <__gesf2>
     7f0:	87 fd       	sbrc	r24, 7
     7f2:	11 c0       	rjmp	.+34     	; 0x816 <__fixunssfsi+0x3e>
     7f4:	c8 01       	movw	r24, r16
     7f6:	b7 01       	movw	r22, r14
     7f8:	20 e0       	ldi	r18, 0x00	; 0
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	5f e4       	ldi	r21, 0x4F	; 79
     800:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__subsf3>
     804:	0e 94 f8 07 	call	0xff0	; 0xff0 <__fixsfsi>
     808:	9b 01       	movw	r18, r22
     80a:	ac 01       	movw	r20, r24
     80c:	20 50       	subi	r18, 0x00	; 0
     80e:	30 40       	sbci	r19, 0x00	; 0
     810:	40 40       	sbci	r20, 0x00	; 0
     812:	50 48       	sbci	r21, 0x80	; 128
     814:	06 c0       	rjmp	.+12     	; 0x822 <__fixunssfsi+0x4a>
     816:	c8 01       	movw	r24, r16
     818:	b7 01       	movw	r22, r14
     81a:	0e 94 f8 07 	call	0xff0	; 0xff0 <__fixsfsi>
     81e:	9b 01       	movw	r18, r22
     820:	ac 01       	movw	r20, r24
     822:	b9 01       	movw	r22, r18
     824:	ca 01       	movw	r24, r20
     826:	1f 91       	pop	r17
     828:	0f 91       	pop	r16
     82a:	ff 90       	pop	r15
     82c:	ef 90       	pop	r14
     82e:	08 95       	ret

00000830 <_fpadd_parts>:
     830:	a0 e0       	ldi	r26, 0x00	; 0
     832:	b0 e0       	ldi	r27, 0x00	; 0
     834:	ee e1       	ldi	r30, 0x1E	; 30
     836:	f4 e0       	ldi	r31, 0x04	; 4
     838:	0c 94 de 09 	jmp	0x13bc	; 0x13bc <__prologue_saves__+0x8>
     83c:	fc 01       	movw	r30, r24
     83e:	ea 01       	movw	r28, r20
     840:	80 81       	ld	r24, Z
     842:	82 30       	cpi	r24, 0x02	; 2
     844:	08 f4       	brcc	.+2      	; 0x848 <_fpadd_parts+0x18>
     846:	38 c1       	rjmp	.+624    	; 0xab8 <__stack+0x1b9>
     848:	db 01       	movw	r26, r22
     84a:	9c 91       	ld	r25, X
     84c:	92 30       	cpi	r25, 0x02	; 2
     84e:	08 f4       	brcc	.+2      	; 0x852 <_fpadd_parts+0x22>
     850:	30 c1       	rjmp	.+608    	; 0xab2 <__stack+0x1b3>
     852:	84 30       	cpi	r24, 0x04	; 4
     854:	59 f4       	brne	.+22     	; 0x86c <_fpadd_parts+0x3c>
     856:	94 30       	cpi	r25, 0x04	; 4
     858:	09 f0       	breq	.+2      	; 0x85c <_fpadd_parts+0x2c>
     85a:	2e c1       	rjmp	.+604    	; 0xab8 <__stack+0x1b9>
     85c:	91 81       	ldd	r25, Z+1	; 0x01
     85e:	11 96       	adiw	r26, 0x01	; 1
     860:	8c 91       	ld	r24, X
     862:	11 97       	sbiw	r26, 0x01	; 1
     864:	98 17       	cp	r25, r24
     866:	09 f0       	breq	.+2      	; 0x86a <_fpadd_parts+0x3a>
     868:	21 c1       	rjmp	.+578    	; 0xaac <__stack+0x1ad>
     86a:	26 c1       	rjmp	.+588    	; 0xab8 <__stack+0x1b9>
     86c:	94 30       	cpi	r25, 0x04	; 4
     86e:	09 f4       	brne	.+2      	; 0x872 <_fpadd_parts+0x42>
     870:	20 c1       	rjmp	.+576    	; 0xab2 <__stack+0x1b3>
     872:	92 30       	cpi	r25, 0x02	; 2
     874:	b1 f4       	brne	.+44     	; 0x8a2 <_fpadd_parts+0x72>
     876:	82 30       	cpi	r24, 0x02	; 2
     878:	09 f0       	breq	.+2      	; 0x87c <_fpadd_parts+0x4c>
     87a:	1e c1       	rjmp	.+572    	; 0xab8 <__stack+0x1b9>
     87c:	ca 01       	movw	r24, r20
     87e:	af 01       	movw	r20, r30
     880:	28 e0       	ldi	r18, 0x08	; 8
     882:	da 01       	movw	r26, r20
     884:	0d 90       	ld	r0, X+
     886:	ad 01       	movw	r20, r26
     888:	dc 01       	movw	r26, r24
     88a:	0d 92       	st	X+, r0
     88c:	cd 01       	movw	r24, r26
     88e:	21 50       	subi	r18, 0x01	; 1
     890:	c1 f7       	brne	.-16     	; 0x882 <_fpadd_parts+0x52>
     892:	db 01       	movw	r26, r22
     894:	11 96       	adiw	r26, 0x01	; 1
     896:	8c 91       	ld	r24, X
     898:	11 97       	sbiw	r26, 0x01	; 1
     89a:	91 81       	ldd	r25, Z+1	; 0x01
     89c:	89 23       	and	r24, r25
     89e:	89 83       	std	Y+1, r24	; 0x01
     8a0:	0a c1       	rjmp	.+532    	; 0xab6 <__stack+0x1b7>
     8a2:	82 30       	cpi	r24, 0x02	; 2
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <_fpadd_parts+0x78>
     8a6:	05 c1       	rjmp	.+522    	; 0xab2 <__stack+0x1b3>
     8a8:	c2 80       	ldd	r12, Z+2	; 0x02
     8aa:	d3 80       	ldd	r13, Z+3	; 0x03
     8ac:	db 01       	movw	r26, r22
     8ae:	12 96       	adiw	r26, 0x02	; 2
     8b0:	6d 90       	ld	r6, X+
     8b2:	7c 90       	ld	r7, X
     8b4:	13 97       	sbiw	r26, 0x03	; 3
     8b6:	24 81       	ldd	r18, Z+4	; 0x04
     8b8:	35 81       	ldd	r19, Z+5	; 0x05
     8ba:	46 81       	ldd	r20, Z+6	; 0x06
     8bc:	57 81       	ldd	r21, Z+7	; 0x07
     8be:	14 96       	adiw	r26, 0x04	; 4
     8c0:	ed 90       	ld	r14, X+
     8c2:	fd 90       	ld	r15, X+
     8c4:	0d 91       	ld	r16, X+
     8c6:	1c 91       	ld	r17, X
     8c8:	17 97       	sbiw	r26, 0x07	; 7
     8ca:	c6 01       	movw	r24, r12
     8cc:	86 19       	sub	r24, r6
     8ce:	97 09       	sbc	r25, r7
     8d0:	5c 01       	movw	r10, r24
     8d2:	97 ff       	sbrs	r25, 7
     8d4:	04 c0       	rjmp	.+8      	; 0x8de <_fpadd_parts+0xae>
     8d6:	aa 24       	eor	r10, r10
     8d8:	bb 24       	eor	r11, r11
     8da:	a8 1a       	sub	r10, r24
     8dc:	b9 0a       	sbc	r11, r25
     8de:	b0 e2       	ldi	r27, 0x20	; 32
     8e0:	ab 16       	cp	r10, r27
     8e2:	b1 04       	cpc	r11, r1
     8e4:	0c f0       	brlt	.+2      	; 0x8e8 <_fpadd_parts+0xb8>
     8e6:	61 c0       	rjmp	.+194    	; 0x9aa <__stack+0xab>
     8e8:	18 16       	cp	r1, r24
     8ea:	19 06       	cpc	r1, r25
     8ec:	6c f5       	brge	.+90     	; 0x948 <__stack+0x49>
     8ee:	37 01       	movw	r6, r14
     8f0:	48 01       	movw	r8, r16
     8f2:	0a 2c       	mov	r0, r10
     8f4:	04 c0       	rjmp	.+8      	; 0x8fe <_fpadd_parts+0xce>
     8f6:	96 94       	lsr	r9
     8f8:	87 94       	ror	r8
     8fa:	77 94       	ror	r7
     8fc:	67 94       	ror	r6
     8fe:	0a 94       	dec	r0
     900:	d2 f7       	brpl	.-12     	; 0x8f6 <_fpadd_parts+0xc6>
     902:	81 e0       	ldi	r24, 0x01	; 1
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	a0 e0       	ldi	r26, 0x00	; 0
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	0a 2c       	mov	r0, r10
     90c:	04 c0       	rjmp	.+8      	; 0x916 <__stack+0x17>
     90e:	88 0f       	add	r24, r24
     910:	99 1f       	adc	r25, r25
     912:	aa 1f       	adc	r26, r26
     914:	bb 1f       	adc	r27, r27
     916:	0a 94       	dec	r0
     918:	d2 f7       	brpl	.-12     	; 0x90e <__stack+0xf>
     91a:	01 97       	sbiw	r24, 0x01	; 1
     91c:	a1 09       	sbc	r26, r1
     91e:	b1 09       	sbc	r27, r1
     920:	8e 21       	and	r24, r14
     922:	9f 21       	and	r25, r15
     924:	a0 23       	and	r26, r16
     926:	b1 23       	and	r27, r17
     928:	ee 24       	eor	r14, r14
     92a:	ff 24       	eor	r15, r15
     92c:	87 01       	movw	r16, r14
     92e:	e3 94       	inc	r14
     930:	00 97       	sbiw	r24, 0x00	; 0
     932:	a1 05       	cpc	r26, r1
     934:	b1 05       	cpc	r27, r1
     936:	19 f4       	brne	.+6      	; 0x93e <__stack+0x3f>
     938:	ee 24       	eor	r14, r14
     93a:	ff 24       	eor	r15, r15
     93c:	87 01       	movw	r16, r14
     93e:	e6 28       	or	r14, r6
     940:	f7 28       	or	r15, r7
     942:	08 29       	or	r16, r8
     944:	19 29       	or	r17, r9
     946:	3c c0       	rjmp	.+120    	; 0x9c0 <__stack+0xc1>
     948:	00 97       	sbiw	r24, 0x00	; 0
     94a:	d1 f1       	breq	.+116    	; 0x9c0 <__stack+0xc1>
     94c:	ca 0c       	add	r12, r10
     94e:	db 1c       	adc	r13, r11
     950:	39 01       	movw	r6, r18
     952:	4a 01       	movw	r8, r20
     954:	0a 2c       	mov	r0, r10
     956:	04 c0       	rjmp	.+8      	; 0x960 <__stack+0x61>
     958:	96 94       	lsr	r9
     95a:	87 94       	ror	r8
     95c:	77 94       	ror	r7
     95e:	67 94       	ror	r6
     960:	0a 94       	dec	r0
     962:	d2 f7       	brpl	.-12     	; 0x958 <__stack+0x59>
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	a0 e0       	ldi	r26, 0x00	; 0
     96a:	b0 e0       	ldi	r27, 0x00	; 0
     96c:	0a 2c       	mov	r0, r10
     96e:	04 c0       	rjmp	.+8      	; 0x978 <__stack+0x79>
     970:	88 0f       	add	r24, r24
     972:	99 1f       	adc	r25, r25
     974:	aa 1f       	adc	r26, r26
     976:	bb 1f       	adc	r27, r27
     978:	0a 94       	dec	r0
     97a:	d2 f7       	brpl	.-12     	; 0x970 <__stack+0x71>
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	a1 09       	sbc	r26, r1
     980:	b1 09       	sbc	r27, r1
     982:	82 23       	and	r24, r18
     984:	93 23       	and	r25, r19
     986:	a4 23       	and	r26, r20
     988:	b5 23       	and	r27, r21
     98a:	21 e0       	ldi	r18, 0x01	; 1
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	50 e0       	ldi	r21, 0x00	; 0
     992:	00 97       	sbiw	r24, 0x00	; 0
     994:	a1 05       	cpc	r26, r1
     996:	b1 05       	cpc	r27, r1
     998:	19 f4       	brne	.+6      	; 0x9a0 <__stack+0xa1>
     99a:	20 e0       	ldi	r18, 0x00	; 0
     99c:	30 e0       	ldi	r19, 0x00	; 0
     99e:	a9 01       	movw	r20, r18
     9a0:	26 29       	or	r18, r6
     9a2:	37 29       	or	r19, r7
     9a4:	48 29       	or	r20, r8
     9a6:	59 29       	or	r21, r9
     9a8:	0b c0       	rjmp	.+22     	; 0x9c0 <__stack+0xc1>
     9aa:	6c 14       	cp	r6, r12
     9ac:	7d 04       	cpc	r7, r13
     9ae:	24 f4       	brge	.+8      	; 0x9b8 <__stack+0xb9>
     9b0:	ee 24       	eor	r14, r14
     9b2:	ff 24       	eor	r15, r15
     9b4:	87 01       	movw	r16, r14
     9b6:	04 c0       	rjmp	.+8      	; 0x9c0 <__stack+0xc1>
     9b8:	63 01       	movw	r12, r6
     9ba:	20 e0       	ldi	r18, 0x00	; 0
     9bc:	30 e0       	ldi	r19, 0x00	; 0
     9be:	a9 01       	movw	r20, r18
     9c0:	81 81       	ldd	r24, Z+1	; 0x01
     9c2:	fb 01       	movw	r30, r22
     9c4:	91 81       	ldd	r25, Z+1	; 0x01
     9c6:	89 17       	cp	r24, r25
     9c8:	09 f4       	brne	.+2      	; 0x9cc <__stack+0xcd>
     9ca:	45 c0       	rjmp	.+138    	; 0xa56 <__stack+0x157>
     9cc:	88 23       	and	r24, r24
     9ce:	49 f0       	breq	.+18     	; 0x9e2 <__stack+0xe3>
     9d0:	d8 01       	movw	r26, r16
     9d2:	c7 01       	movw	r24, r14
     9d4:	82 1b       	sub	r24, r18
     9d6:	93 0b       	sbc	r25, r19
     9d8:	a4 0b       	sbc	r26, r20
     9da:	b5 0b       	sbc	r27, r21
     9dc:	9c 01       	movw	r18, r24
     9de:	ad 01       	movw	r20, r26
     9e0:	04 c0       	rjmp	.+8      	; 0x9ea <__stack+0xeb>
     9e2:	2e 19       	sub	r18, r14
     9e4:	3f 09       	sbc	r19, r15
     9e6:	40 0b       	sbc	r20, r16
     9e8:	51 0b       	sbc	r21, r17
     9ea:	57 fd       	sbrc	r21, 7
     9ec:	04 c0       	rjmp	.+8      	; 0x9f6 <__stack+0xf7>
     9ee:	19 82       	std	Y+1, r1	; 0x01
     9f0:	db 82       	std	Y+3, r13	; 0x03
     9f2:	ca 82       	std	Y+2, r12	; 0x02
     9f4:	0b c0       	rjmp	.+22     	; 0xa0c <__stack+0x10d>
     9f6:	81 e0       	ldi	r24, 0x01	; 1
     9f8:	89 83       	std	Y+1, r24	; 0x01
     9fa:	db 82       	std	Y+3, r13	; 0x03
     9fc:	ca 82       	std	Y+2, r12	; 0x02
     9fe:	50 95       	com	r21
     a00:	40 95       	com	r20
     a02:	30 95       	com	r19
     a04:	21 95       	neg	r18
     a06:	3f 4f       	sbci	r19, 0xFF	; 255
     a08:	4f 4f       	sbci	r20, 0xFF	; 255
     a0a:	5f 4f       	sbci	r21, 0xFF	; 255
     a0c:	2c 83       	std	Y+4, r18	; 0x04
     a0e:	3d 83       	std	Y+5, r19	; 0x05
     a10:	4e 83       	std	Y+6, r20	; 0x06
     a12:	5f 83       	std	Y+7, r21	; 0x07
     a14:	0d c0       	rjmp	.+26     	; 0xa30 <__stack+0x131>
     a16:	88 0f       	add	r24, r24
     a18:	99 1f       	adc	r25, r25
     a1a:	aa 1f       	adc	r26, r26
     a1c:	bb 1f       	adc	r27, r27
     a1e:	8c 83       	std	Y+4, r24	; 0x04
     a20:	9d 83       	std	Y+5, r25	; 0x05
     a22:	ae 83       	std	Y+6, r26	; 0x06
     a24:	bf 83       	std	Y+7, r27	; 0x07
     a26:	8a 81       	ldd	r24, Y+2	; 0x02
     a28:	9b 81       	ldd	r25, Y+3	; 0x03
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	9b 83       	std	Y+3, r25	; 0x03
     a2e:	8a 83       	std	Y+2, r24	; 0x02
     a30:	8c 81       	ldd	r24, Y+4	; 0x04
     a32:	9d 81       	ldd	r25, Y+5	; 0x05
     a34:	ae 81       	ldd	r26, Y+6	; 0x06
     a36:	bf 81       	ldd	r27, Y+7	; 0x07
     a38:	9c 01       	movw	r18, r24
     a3a:	ad 01       	movw	r20, r26
     a3c:	21 50       	subi	r18, 0x01	; 1
     a3e:	30 40       	sbci	r19, 0x00	; 0
     a40:	40 40       	sbci	r20, 0x00	; 0
     a42:	50 40       	sbci	r21, 0x00	; 0
     a44:	2f 3f       	cpi	r18, 0xFF	; 255
     a46:	ef ef       	ldi	r30, 0xFF	; 255
     a48:	3e 07       	cpc	r19, r30
     a4a:	ef ef       	ldi	r30, 0xFF	; 255
     a4c:	4e 07       	cpc	r20, r30
     a4e:	ef e3       	ldi	r30, 0x3F	; 63
     a50:	5e 07       	cpc	r21, r30
     a52:	08 f3       	brcs	.-62     	; 0xa16 <__stack+0x117>
     a54:	0b c0       	rjmp	.+22     	; 0xa6c <__stack+0x16d>
     a56:	89 83       	std	Y+1, r24	; 0x01
     a58:	db 82       	std	Y+3, r13	; 0x03
     a5a:	ca 82       	std	Y+2, r12	; 0x02
     a5c:	2e 0d       	add	r18, r14
     a5e:	3f 1d       	adc	r19, r15
     a60:	40 1f       	adc	r20, r16
     a62:	51 1f       	adc	r21, r17
     a64:	2c 83       	std	Y+4, r18	; 0x04
     a66:	3d 83       	std	Y+5, r19	; 0x05
     a68:	4e 83       	std	Y+6, r20	; 0x06
     a6a:	5f 83       	std	Y+7, r21	; 0x07
     a6c:	83 e0       	ldi	r24, 0x03	; 3
     a6e:	88 83       	st	Y, r24
     a70:	2c 81       	ldd	r18, Y+4	; 0x04
     a72:	3d 81       	ldd	r19, Y+5	; 0x05
     a74:	4e 81       	ldd	r20, Y+6	; 0x06
     a76:	5f 81       	ldd	r21, Y+7	; 0x07
     a78:	57 ff       	sbrs	r21, 7
     a7a:	1d c0       	rjmp	.+58     	; 0xab6 <__stack+0x1b7>
     a7c:	da 01       	movw	r26, r20
     a7e:	c9 01       	movw	r24, r18
     a80:	81 70       	andi	r24, 0x01	; 1
     a82:	90 70       	andi	r25, 0x00	; 0
     a84:	a0 70       	andi	r26, 0x00	; 0
     a86:	b0 70       	andi	r27, 0x00	; 0
     a88:	56 95       	lsr	r21
     a8a:	47 95       	ror	r20
     a8c:	37 95       	ror	r19
     a8e:	27 95       	ror	r18
     a90:	82 2b       	or	r24, r18
     a92:	93 2b       	or	r25, r19
     a94:	a4 2b       	or	r26, r20
     a96:	b5 2b       	or	r27, r21
     a98:	8c 83       	std	Y+4, r24	; 0x04
     a9a:	9d 83       	std	Y+5, r25	; 0x05
     a9c:	ae 83       	std	Y+6, r26	; 0x06
     a9e:	bf 83       	std	Y+7, r27	; 0x07
     aa0:	8a 81       	ldd	r24, Y+2	; 0x02
     aa2:	9b 81       	ldd	r25, Y+3	; 0x03
     aa4:	01 96       	adiw	r24, 0x01	; 1
     aa6:	9b 83       	std	Y+3, r25	; 0x03
     aa8:	8a 83       	std	Y+2, r24	; 0x02
     aaa:	05 c0       	rjmp	.+10     	; 0xab6 <__stack+0x1b7>
     aac:	e3 e0       	ldi	r30, 0x03	; 3
     aae:	f1 e0       	ldi	r31, 0x01	; 1
     ab0:	03 c0       	rjmp	.+6      	; 0xab8 <__stack+0x1b9>
     ab2:	fb 01       	movw	r30, r22
     ab4:	01 c0       	rjmp	.+2      	; 0xab8 <__stack+0x1b9>
     ab6:	fe 01       	movw	r30, r28
     ab8:	cf 01       	movw	r24, r30
     aba:	cd b7       	in	r28, 0x3d	; 61
     abc:	de b7       	in	r29, 0x3e	; 62
     abe:	ee e0       	ldi	r30, 0x0E	; 14
     ac0:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__epilogue_restores__+0x8>

00000ac4 <__addsf3>:
     ac4:	a0 e2       	ldi	r26, 0x20	; 32
     ac6:	b0 e0       	ldi	r27, 0x00	; 0
     ac8:	e8 e6       	ldi	r30, 0x68	; 104
     aca:	f5 e0       	ldi	r31, 0x05	; 5
     acc:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__prologue_saves__+0x18>
     ad0:	69 83       	std	Y+1, r22	; 0x01
     ad2:	7a 83       	std	Y+2, r23	; 0x02
     ad4:	8b 83       	std	Y+3, r24	; 0x03
     ad6:	9c 83       	std	Y+4, r25	; 0x04
     ad8:	2d 83       	std	Y+5, r18	; 0x05
     ada:	3e 83       	std	Y+6, r19	; 0x06
     adc:	4f 83       	std	Y+7, r20	; 0x07
     ade:	58 87       	std	Y+8, r21	; 0x08
     ae0:	89 e0       	ldi	r24, 0x09	; 9
     ae2:	e8 2e       	mov	r14, r24
     ae4:	f1 2c       	mov	r15, r1
     ae6:	ec 0e       	add	r14, r28
     ae8:	fd 1e       	adc	r15, r29
     aea:	ce 01       	movw	r24, r28
     aec:	01 96       	adiw	r24, 0x01	; 1
     aee:	b7 01       	movw	r22, r14
     af0:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     af4:	8e 01       	movw	r16, r28
     af6:	0f 5e       	subi	r16, 0xEF	; 239
     af8:	1f 4f       	sbci	r17, 0xFF	; 255
     afa:	ce 01       	movw	r24, r28
     afc:	05 96       	adiw	r24, 0x05	; 5
     afe:	b8 01       	movw	r22, r16
     b00:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     b04:	c7 01       	movw	r24, r14
     b06:	b8 01       	movw	r22, r16
     b08:	ae 01       	movw	r20, r28
     b0a:	47 5e       	subi	r20, 0xE7	; 231
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	0e 94 18 04 	call	0x830	; 0x830 <_fpadd_parts>
     b12:	0e 94 4a 08 	call	0x1094	; 0x1094 <__pack_f>
     b16:	a0 96       	adiw	r28, 0x20	; 32
     b18:	e6 e0       	ldi	r30, 0x06	; 6
     b1a:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__epilogue_restores__+0x18>

00000b1e <__subsf3>:
     b1e:	a0 e2       	ldi	r26, 0x20	; 32
     b20:	b0 e0       	ldi	r27, 0x00	; 0
     b22:	e5 e9       	ldi	r30, 0x95	; 149
     b24:	f5 e0       	ldi	r31, 0x05	; 5
     b26:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__prologue_saves__+0x18>
     b2a:	69 83       	std	Y+1, r22	; 0x01
     b2c:	7a 83       	std	Y+2, r23	; 0x02
     b2e:	8b 83       	std	Y+3, r24	; 0x03
     b30:	9c 83       	std	Y+4, r25	; 0x04
     b32:	2d 83       	std	Y+5, r18	; 0x05
     b34:	3e 83       	std	Y+6, r19	; 0x06
     b36:	4f 83       	std	Y+7, r20	; 0x07
     b38:	58 87       	std	Y+8, r21	; 0x08
     b3a:	8e 01       	movw	r16, r28
     b3c:	07 5f       	subi	r16, 0xF7	; 247
     b3e:	1f 4f       	sbci	r17, 0xFF	; 255
     b40:	ce 01       	movw	r24, r28
     b42:	01 96       	adiw	r24, 0x01	; 1
     b44:	b8 01       	movw	r22, r16
     b46:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     b4a:	91 e1       	ldi	r25, 0x11	; 17
     b4c:	e9 2e       	mov	r14, r25
     b4e:	f1 2c       	mov	r15, r1
     b50:	ec 0e       	add	r14, r28
     b52:	fd 1e       	adc	r15, r29
     b54:	ce 01       	movw	r24, r28
     b56:	05 96       	adiw	r24, 0x05	; 5
     b58:	b7 01       	movw	r22, r14
     b5a:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     b5e:	8a 89       	ldd	r24, Y+18	; 0x12
     b60:	91 e0       	ldi	r25, 0x01	; 1
     b62:	89 27       	eor	r24, r25
     b64:	8a 8b       	std	Y+18, r24	; 0x12
     b66:	c8 01       	movw	r24, r16
     b68:	b7 01       	movw	r22, r14
     b6a:	ae 01       	movw	r20, r28
     b6c:	47 5e       	subi	r20, 0xE7	; 231
     b6e:	5f 4f       	sbci	r21, 0xFF	; 255
     b70:	0e 94 18 04 	call	0x830	; 0x830 <_fpadd_parts>
     b74:	0e 94 4a 08 	call	0x1094	; 0x1094 <__pack_f>
     b78:	a0 96       	adiw	r28, 0x20	; 32
     b7a:	e6 e0       	ldi	r30, 0x06	; 6
     b7c:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__epilogue_restores__+0x18>

00000b80 <__mulsf3>:
     b80:	a0 e2       	ldi	r26, 0x20	; 32
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	e6 ec       	ldi	r30, 0xC6	; 198
     b86:	f5 e0       	ldi	r31, 0x05	; 5
     b88:	0c 94 da 09 	jmp	0x13b4	; 0x13b4 <__prologue_saves__>
     b8c:	69 83       	std	Y+1, r22	; 0x01
     b8e:	7a 83       	std	Y+2, r23	; 0x02
     b90:	8b 83       	std	Y+3, r24	; 0x03
     b92:	9c 83       	std	Y+4, r25	; 0x04
     b94:	2d 83       	std	Y+5, r18	; 0x05
     b96:	3e 83       	std	Y+6, r19	; 0x06
     b98:	4f 83       	std	Y+7, r20	; 0x07
     b9a:	58 87       	std	Y+8, r21	; 0x08
     b9c:	ce 01       	movw	r24, r28
     b9e:	01 96       	adiw	r24, 0x01	; 1
     ba0:	be 01       	movw	r22, r28
     ba2:	67 5f       	subi	r22, 0xF7	; 247
     ba4:	7f 4f       	sbci	r23, 0xFF	; 255
     ba6:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     baa:	ce 01       	movw	r24, r28
     bac:	05 96       	adiw	r24, 0x05	; 5
     bae:	be 01       	movw	r22, r28
     bb0:	6f 5e       	subi	r22, 0xEF	; 239
     bb2:	7f 4f       	sbci	r23, 0xFF	; 255
     bb4:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     bb8:	99 85       	ldd	r25, Y+9	; 0x09
     bba:	92 30       	cpi	r25, 0x02	; 2
     bbc:	78 f0       	brcs	.+30     	; 0xbdc <__mulsf3+0x5c>
     bbe:	89 89       	ldd	r24, Y+17	; 0x11
     bc0:	82 30       	cpi	r24, 0x02	; 2
     bc2:	c0 f0       	brcs	.+48     	; 0xbf4 <__mulsf3+0x74>
     bc4:	94 30       	cpi	r25, 0x04	; 4
     bc6:	19 f4       	brne	.+6      	; 0xbce <__mulsf3+0x4e>
     bc8:	82 30       	cpi	r24, 0x02	; 2
     bca:	41 f4       	brne	.+16     	; 0xbdc <__mulsf3+0x5c>
     bcc:	cb c0       	rjmp	.+406    	; 0xd64 <__mulsf3+0x1e4>
     bce:	84 30       	cpi	r24, 0x04	; 4
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__mulsf3+0x58>
     bd2:	92 30       	cpi	r25, 0x02	; 2
     bd4:	79 f4       	brne	.+30     	; 0xbf4 <__mulsf3+0x74>
     bd6:	c6 c0       	rjmp	.+396    	; 0xd64 <__mulsf3+0x1e4>
     bd8:	92 30       	cpi	r25, 0x02	; 2
     bda:	51 f4       	brne	.+20     	; 0xbf0 <__mulsf3+0x70>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	2a 85       	ldd	r18, Y+10	; 0x0a
     be0:	9a 89       	ldd	r25, Y+18	; 0x12
     be2:	29 17       	cp	r18, r25
     be4:	09 f4       	brne	.+2      	; 0xbe8 <__mulsf3+0x68>
     be6:	80 e0       	ldi	r24, 0x00	; 0
     be8:	8a 87       	std	Y+10, r24	; 0x0a
     bea:	ce 01       	movw	r24, r28
     bec:	09 96       	adiw	r24, 0x09	; 9
     bee:	bc c0       	rjmp	.+376    	; 0xd68 <__mulsf3+0x1e8>
     bf0:	82 30       	cpi	r24, 0x02	; 2
     bf2:	51 f4       	brne	.+20     	; 0xc08 <__mulsf3+0x88>
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	2a 85       	ldd	r18, Y+10	; 0x0a
     bf8:	9a 89       	ldd	r25, Y+18	; 0x12
     bfa:	29 17       	cp	r18, r25
     bfc:	09 f4       	brne	.+2      	; 0xc00 <__mulsf3+0x80>
     bfe:	80 e0       	ldi	r24, 0x00	; 0
     c00:	8a 8b       	std	Y+18, r24	; 0x12
     c02:	ce 01       	movw	r24, r28
     c04:	41 96       	adiw	r24, 0x11	; 17
     c06:	b0 c0       	rjmp	.+352    	; 0xd68 <__mulsf3+0x1e8>
     c08:	6d 84       	ldd	r6, Y+13	; 0x0d
     c0a:	7e 84       	ldd	r7, Y+14	; 0x0e
     c0c:	8f 84       	ldd	r8, Y+15	; 0x0f
     c0e:	98 88       	ldd	r9, Y+16	; 0x10
     c10:	ed 88       	ldd	r14, Y+21	; 0x15
     c12:	fe 88       	ldd	r15, Y+22	; 0x16
     c14:	0f 89       	ldd	r16, Y+23	; 0x17
     c16:	18 8d       	ldd	r17, Y+24	; 0x18
     c18:	e0 e2       	ldi	r30, 0x20	; 32
     c1a:	f0 e0       	ldi	r31, 0x00	; 0
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	dc 01       	movw	r26, r24
     c22:	aa 24       	eor	r10, r10
     c24:	bb 24       	eor	r11, r11
     c26:	65 01       	movw	r12, r10
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	a9 01       	movw	r20, r18
     c2e:	b3 01       	movw	r22, r6
     c30:	61 70       	andi	r22, 0x01	; 1
     c32:	70 70       	andi	r23, 0x00	; 0
     c34:	61 15       	cp	r22, r1
     c36:	71 05       	cpc	r23, r1
     c38:	d1 f0       	breq	.+52     	; 0xc6e <__mulsf3+0xee>
     c3a:	2e 0d       	add	r18, r14
     c3c:	3f 1d       	adc	r19, r15
     c3e:	40 1f       	adc	r20, r16
     c40:	51 1f       	adc	r21, r17
     c42:	15 01       	movw	r2, r10
     c44:	26 01       	movw	r4, r12
     c46:	28 0e       	add	r2, r24
     c48:	39 1e       	adc	r3, r25
     c4a:	4a 1e       	adc	r4, r26
     c4c:	5b 1e       	adc	r5, r27
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	a0 e0       	ldi	r26, 0x00	; 0
     c54:	b0 e0       	ldi	r27, 0x00	; 0
     c56:	2e 15       	cp	r18, r14
     c58:	3f 05       	cpc	r19, r15
     c5a:	40 07       	cpc	r20, r16
     c5c:	51 07       	cpc	r21, r17
     c5e:	18 f0       	brcs	.+6      	; 0xc66 <__mulsf3+0xe6>
     c60:	80 e0       	ldi	r24, 0x00	; 0
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	dc 01       	movw	r26, r24
     c66:	82 0d       	add	r24, r2
     c68:	93 1d       	adc	r25, r3
     c6a:	a4 1d       	adc	r26, r4
     c6c:	b5 1d       	adc	r27, r5
     c6e:	aa 0c       	add	r10, r10
     c70:	bb 1c       	adc	r11, r11
     c72:	cc 1c       	adc	r12, r12
     c74:	dd 1c       	adc	r13, r13
     c76:	17 ff       	sbrs	r17, 7
     c78:	09 c0       	rjmp	.+18     	; 0xc8c <__mulsf3+0x10c>
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	26 2e       	mov	r2, r22
     c7e:	31 2c       	mov	r3, r1
     c80:	41 2c       	mov	r4, r1
     c82:	51 2c       	mov	r5, r1
     c84:	a2 28       	or	r10, r2
     c86:	b3 28       	or	r11, r3
     c88:	c4 28       	or	r12, r4
     c8a:	d5 28       	or	r13, r5
     c8c:	31 97       	sbiw	r30, 0x01	; 1
     c8e:	49 f0       	breq	.+18     	; 0xca2 <__mulsf3+0x122>
     c90:	ee 0c       	add	r14, r14
     c92:	ff 1c       	adc	r15, r15
     c94:	00 1f       	adc	r16, r16
     c96:	11 1f       	adc	r17, r17
     c98:	96 94       	lsr	r9
     c9a:	87 94       	ror	r8
     c9c:	77 94       	ror	r7
     c9e:	67 94       	ror	r6
     ca0:	c6 cf       	rjmp	.-116    	; 0xc2e <__mulsf3+0xae>
     ca2:	6b 89       	ldd	r22, Y+19	; 0x13
     ca4:	7c 89       	ldd	r23, Y+20	; 0x14
     ca6:	eb 85       	ldd	r30, Y+11	; 0x0b
     ca8:	fc 85       	ldd	r31, Y+12	; 0x0c
     caa:	6e 0f       	add	r22, r30
     cac:	7f 1f       	adc	r23, r31
     cae:	6e 5f       	subi	r22, 0xFE	; 254
     cb0:	7f 4f       	sbci	r23, 0xFF	; 255
     cb2:	7c 8f       	std	Y+28, r23	; 0x1c
     cb4:	6b 8f       	std	Y+27, r22	; 0x1b
     cb6:	61 e0       	ldi	r22, 0x01	; 1
     cb8:	ea 85       	ldd	r30, Y+10	; 0x0a
     cba:	7a 89       	ldd	r23, Y+18	; 0x12
     cbc:	e7 17       	cp	r30, r23
     cbe:	09 f4       	brne	.+2      	; 0xcc2 <__mulsf3+0x142>
     cc0:	60 e0       	ldi	r22, 0x00	; 0
     cc2:	6a 8f       	std	Y+26, r22	; 0x1a
     cc4:	6b 8d       	ldd	r22, Y+27	; 0x1b
     cc6:	7c 8d       	ldd	r23, Y+28	; 0x1c
     cc8:	10 c0       	rjmp	.+32     	; 0xcea <__mulsf3+0x16a>
     cca:	fc 01       	movw	r30, r24
     ccc:	e1 70       	andi	r30, 0x01	; 1
     cce:	f0 70       	andi	r31, 0x00	; 0
     cd0:	30 97       	sbiw	r30, 0x00	; 0
     cd2:	29 f0       	breq	.+10     	; 0xcde <__mulsf3+0x15e>
     cd4:	56 95       	lsr	r21
     cd6:	47 95       	ror	r20
     cd8:	37 95       	ror	r19
     cda:	27 95       	ror	r18
     cdc:	50 68       	ori	r21, 0x80	; 128
     cde:	b6 95       	lsr	r27
     ce0:	a7 95       	ror	r26
     ce2:	97 95       	ror	r25
     ce4:	87 95       	ror	r24
     ce6:	6f 5f       	subi	r22, 0xFF	; 255
     ce8:	7f 4f       	sbci	r23, 0xFF	; 255
     cea:	b7 fd       	sbrc	r27, 7
     cec:	ee cf       	rjmp	.-36     	; 0xcca <__mulsf3+0x14a>
     cee:	0c c0       	rjmp	.+24     	; 0xd08 <__mulsf3+0x188>
     cf0:	88 0f       	add	r24, r24
     cf2:	99 1f       	adc	r25, r25
     cf4:	aa 1f       	adc	r26, r26
     cf6:	bb 1f       	adc	r27, r27
     cf8:	57 fd       	sbrc	r21, 7
     cfa:	81 60       	ori	r24, 0x01	; 1
     cfc:	22 0f       	add	r18, r18
     cfe:	33 1f       	adc	r19, r19
     d00:	44 1f       	adc	r20, r20
     d02:	55 1f       	adc	r21, r21
     d04:	61 50       	subi	r22, 0x01	; 1
     d06:	70 40       	sbci	r23, 0x00	; 0
     d08:	80 30       	cpi	r24, 0x00	; 0
     d0a:	e0 e0       	ldi	r30, 0x00	; 0
     d0c:	9e 07       	cpc	r25, r30
     d0e:	e0 e0       	ldi	r30, 0x00	; 0
     d10:	ae 07       	cpc	r26, r30
     d12:	e0 e4       	ldi	r30, 0x40	; 64
     d14:	be 07       	cpc	r27, r30
     d16:	60 f3       	brcs	.-40     	; 0xcf0 <__mulsf3+0x170>
     d18:	6b 8f       	std	Y+27, r22	; 0x1b
     d1a:	7c 8f       	std	Y+28, r23	; 0x1c
     d1c:	6f e7       	ldi	r22, 0x7F	; 127
     d1e:	e6 2e       	mov	r14, r22
     d20:	f1 2c       	mov	r15, r1
     d22:	01 2d       	mov	r16, r1
     d24:	11 2d       	mov	r17, r1
     d26:	e8 22       	and	r14, r24
     d28:	f9 22       	and	r15, r25
     d2a:	0a 23       	and	r16, r26
     d2c:	1b 23       	and	r17, r27
     d2e:	60 e4       	ldi	r22, 0x40	; 64
     d30:	e6 16       	cp	r14, r22
     d32:	f1 04       	cpc	r15, r1
     d34:	01 05       	cpc	r16, r1
     d36:	11 05       	cpc	r17, r1
     d38:	61 f4       	brne	.+24     	; 0xd52 <__mulsf3+0x1d2>
     d3a:	87 fd       	sbrc	r24, 7
     d3c:	0a c0       	rjmp	.+20     	; 0xd52 <__mulsf3+0x1d2>
     d3e:	21 15       	cp	r18, r1
     d40:	31 05       	cpc	r19, r1
     d42:	41 05       	cpc	r20, r1
     d44:	51 05       	cpc	r21, r1
     d46:	29 f0       	breq	.+10     	; 0xd52 <__mulsf3+0x1d2>
     d48:	80 5c       	subi	r24, 0xC0	; 192
     d4a:	9f 4f       	sbci	r25, 0xFF	; 255
     d4c:	af 4f       	sbci	r26, 0xFF	; 255
     d4e:	bf 4f       	sbci	r27, 0xFF	; 255
     d50:	80 78       	andi	r24, 0x80	; 128
     d52:	8d 8f       	std	Y+29, r24	; 0x1d
     d54:	9e 8f       	std	Y+30, r25	; 0x1e
     d56:	af 8f       	std	Y+31, r26	; 0x1f
     d58:	b8 a3       	std	Y+32, r27	; 0x20
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	89 8f       	std	Y+25, r24	; 0x19
     d5e:	ce 01       	movw	r24, r28
     d60:	49 96       	adiw	r24, 0x19	; 25
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <__mulsf3+0x1e8>
     d64:	83 e0       	ldi	r24, 0x03	; 3
     d66:	91 e0       	ldi	r25, 0x01	; 1
     d68:	0e 94 4a 08 	call	0x1094	; 0x1094 <__pack_f>
     d6c:	a0 96       	adiw	r28, 0x20	; 32
     d6e:	e2 e1       	ldi	r30, 0x12	; 18
     d70:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__epilogue_restores__>

00000d74 <__divsf3>:
     d74:	a8 e1       	ldi	r26, 0x18	; 24
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	e0 ec       	ldi	r30, 0xC0	; 192
     d7a:	f6 e0       	ldi	r31, 0x06	; 6
     d7c:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__prologue_saves__+0x10>
     d80:	69 83       	std	Y+1, r22	; 0x01
     d82:	7a 83       	std	Y+2, r23	; 0x02
     d84:	8b 83       	std	Y+3, r24	; 0x03
     d86:	9c 83       	std	Y+4, r25	; 0x04
     d88:	2d 83       	std	Y+5, r18	; 0x05
     d8a:	3e 83       	std	Y+6, r19	; 0x06
     d8c:	4f 83       	std	Y+7, r20	; 0x07
     d8e:	58 87       	std	Y+8, r21	; 0x08
     d90:	8e 01       	movw	r16, r28
     d92:	07 5f       	subi	r16, 0xF7	; 247
     d94:	1f 4f       	sbci	r17, 0xFF	; 255
     d96:	ce 01       	movw	r24, r28
     d98:	01 96       	adiw	r24, 0x01	; 1
     d9a:	b8 01       	movw	r22, r16
     d9c:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     da0:	81 e1       	ldi	r24, 0x11	; 17
     da2:	e8 2e       	mov	r14, r24
     da4:	f1 2c       	mov	r15, r1
     da6:	ec 0e       	add	r14, r28
     da8:	fd 1e       	adc	r15, r29
     daa:	ce 01       	movw	r24, r28
     dac:	05 96       	adiw	r24, 0x05	; 5
     dae:	b7 01       	movw	r22, r14
     db0:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     db4:	99 85       	ldd	r25, Y+9	; 0x09
     db6:	92 30       	cpi	r25, 0x02	; 2
     db8:	08 f4       	brcc	.+2      	; 0xdbc <__divsf3+0x48>
     dba:	83 c0       	rjmp	.+262    	; 0xec2 <__divsf3+0x14e>
     dbc:	89 89       	ldd	r24, Y+17	; 0x11
     dbe:	82 30       	cpi	r24, 0x02	; 2
     dc0:	08 f4       	brcc	.+2      	; 0xdc4 <__divsf3+0x50>
     dc2:	7b c0       	rjmp	.+246    	; 0xeba <__divsf3+0x146>
     dc4:	2a 85       	ldd	r18, Y+10	; 0x0a
     dc6:	3a 89       	ldd	r19, Y+18	; 0x12
     dc8:	23 27       	eor	r18, r19
     dca:	2a 87       	std	Y+10, r18	; 0x0a
     dcc:	94 30       	cpi	r25, 0x04	; 4
     dce:	11 f0       	breq	.+4      	; 0xdd4 <__divsf3+0x60>
     dd0:	92 30       	cpi	r25, 0x02	; 2
     dd2:	21 f4       	brne	.+8      	; 0xddc <__divsf3+0x68>
     dd4:	98 17       	cp	r25, r24
     dd6:	09 f0       	breq	.+2      	; 0xdda <__divsf3+0x66>
     dd8:	6c c0       	rjmp	.+216    	; 0xeb2 <__divsf3+0x13e>
     dda:	71 c0       	rjmp	.+226    	; 0xebe <__divsf3+0x14a>
     ddc:	84 30       	cpi	r24, 0x04	; 4
     dde:	39 f4       	brne	.+14     	; 0xdee <__divsf3+0x7a>
     de0:	1d 86       	std	Y+13, r1	; 0x0d
     de2:	1e 86       	std	Y+14, r1	; 0x0e
     de4:	1f 86       	std	Y+15, r1	; 0x0f
     de6:	18 8a       	std	Y+16, r1	; 0x10
     de8:	1c 86       	std	Y+12, r1	; 0x0c
     dea:	1b 86       	std	Y+11, r1	; 0x0b
     dec:	6a c0       	rjmp	.+212    	; 0xec2 <__divsf3+0x14e>
     dee:	82 30       	cpi	r24, 0x02	; 2
     df0:	19 f4       	brne	.+6      	; 0xdf8 <__divsf3+0x84>
     df2:	84 e0       	ldi	r24, 0x04	; 4
     df4:	89 87       	std	Y+9, r24	; 0x09
     df6:	65 c0       	rjmp	.+202    	; 0xec2 <__divsf3+0x14e>
     df8:	8b 85       	ldd	r24, Y+11	; 0x0b
     dfa:	9c 85       	ldd	r25, Y+12	; 0x0c
     dfc:	2b 89       	ldd	r18, Y+19	; 0x13
     dfe:	3c 89       	ldd	r19, Y+20	; 0x14
     e00:	82 1b       	sub	r24, r18
     e02:	93 0b       	sbc	r25, r19
     e04:	9c 87       	std	Y+12, r25	; 0x0c
     e06:	8b 87       	std	Y+11, r24	; 0x0b
     e08:	2d 85       	ldd	r18, Y+13	; 0x0d
     e0a:	3e 85       	ldd	r19, Y+14	; 0x0e
     e0c:	4f 85       	ldd	r20, Y+15	; 0x0f
     e0e:	58 89       	ldd	r21, Y+16	; 0x10
     e10:	ed 88       	ldd	r14, Y+21	; 0x15
     e12:	fe 88       	ldd	r15, Y+22	; 0x16
     e14:	0f 89       	ldd	r16, Y+23	; 0x17
     e16:	18 8d       	ldd	r17, Y+24	; 0x18
     e18:	2e 15       	cp	r18, r14
     e1a:	3f 05       	cpc	r19, r15
     e1c:	40 07       	cpc	r20, r16
     e1e:	51 07       	cpc	r21, r17
     e20:	38 f4       	brcc	.+14     	; 0xe30 <__divsf3+0xbc>
     e22:	22 0f       	add	r18, r18
     e24:	33 1f       	adc	r19, r19
     e26:	44 1f       	adc	r20, r20
     e28:	55 1f       	adc	r21, r21
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	9c 87       	std	Y+12, r25	; 0x0c
     e2e:	8b 87       	std	Y+11, r24	; 0x0b
     e30:	6f e1       	ldi	r22, 0x1F	; 31
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	a1 2c       	mov	r10, r1
     e36:	b1 2c       	mov	r11, r1
     e38:	c1 2c       	mov	r12, r1
     e3a:	a0 e4       	ldi	r26, 0x40	; 64
     e3c:	da 2e       	mov	r13, r26
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	dc 01       	movw	r26, r24
     e44:	2e 15       	cp	r18, r14
     e46:	3f 05       	cpc	r19, r15
     e48:	40 07       	cpc	r20, r16
     e4a:	51 07       	cpc	r21, r17
     e4c:	40 f0       	brcs	.+16     	; 0xe5e <__divsf3+0xea>
     e4e:	8a 29       	or	r24, r10
     e50:	9b 29       	or	r25, r11
     e52:	ac 29       	or	r26, r12
     e54:	bd 29       	or	r27, r13
     e56:	2e 19       	sub	r18, r14
     e58:	3f 09       	sbc	r19, r15
     e5a:	40 0b       	sbc	r20, r16
     e5c:	51 0b       	sbc	r21, r17
     e5e:	d6 94       	lsr	r13
     e60:	c7 94       	ror	r12
     e62:	b7 94       	ror	r11
     e64:	a7 94       	ror	r10
     e66:	22 0f       	add	r18, r18
     e68:	33 1f       	adc	r19, r19
     e6a:	44 1f       	adc	r20, r20
     e6c:	55 1f       	adc	r21, r21
     e6e:	61 50       	subi	r22, 0x01	; 1
     e70:	70 40       	sbci	r23, 0x00	; 0
     e72:	41 f7       	brne	.-48     	; 0xe44 <__divsf3+0xd0>
     e74:	6f e7       	ldi	r22, 0x7F	; 127
     e76:	e6 2e       	mov	r14, r22
     e78:	f1 2c       	mov	r15, r1
     e7a:	01 2d       	mov	r16, r1
     e7c:	11 2d       	mov	r17, r1
     e7e:	e8 22       	and	r14, r24
     e80:	f9 22       	and	r15, r25
     e82:	0a 23       	and	r16, r26
     e84:	1b 23       	and	r17, r27
     e86:	60 e4       	ldi	r22, 0x40	; 64
     e88:	e6 16       	cp	r14, r22
     e8a:	f1 04       	cpc	r15, r1
     e8c:	01 05       	cpc	r16, r1
     e8e:	11 05       	cpc	r17, r1
     e90:	61 f4       	brne	.+24     	; 0xeaa <__divsf3+0x136>
     e92:	87 fd       	sbrc	r24, 7
     e94:	0a c0       	rjmp	.+20     	; 0xeaa <__divsf3+0x136>
     e96:	21 15       	cp	r18, r1
     e98:	31 05       	cpc	r19, r1
     e9a:	41 05       	cpc	r20, r1
     e9c:	51 05       	cpc	r21, r1
     e9e:	29 f0       	breq	.+10     	; 0xeaa <__divsf3+0x136>
     ea0:	80 5c       	subi	r24, 0xC0	; 192
     ea2:	9f 4f       	sbci	r25, 0xFF	; 255
     ea4:	af 4f       	sbci	r26, 0xFF	; 255
     ea6:	bf 4f       	sbci	r27, 0xFF	; 255
     ea8:	80 78       	andi	r24, 0x80	; 128
     eaa:	8d 87       	std	Y+13, r24	; 0x0d
     eac:	9e 87       	std	Y+14, r25	; 0x0e
     eae:	af 87       	std	Y+15, r26	; 0x0f
     eb0:	b8 8b       	std	Y+16, r27	; 0x10
     eb2:	8e 01       	movw	r16, r28
     eb4:	07 5f       	subi	r16, 0xF7	; 247
     eb6:	1f 4f       	sbci	r17, 0xFF	; 255
     eb8:	04 c0       	rjmp	.+8      	; 0xec2 <__divsf3+0x14e>
     eba:	87 01       	movw	r16, r14
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <__divsf3+0x14e>
     ebe:	03 e0       	ldi	r16, 0x03	; 3
     ec0:	11 e0       	ldi	r17, 0x01	; 1
     ec2:	c8 01       	movw	r24, r16
     ec4:	0e 94 4a 08 	call	0x1094	; 0x1094 <__pack_f>
     ec8:	68 96       	adiw	r28, 0x18	; 24
     eca:	ea e0       	ldi	r30, 0x0A	; 10
     ecc:	0c 94 fe 09 	jmp	0x13fc	; 0x13fc <__epilogue_restores__+0x10>

00000ed0 <__gtsf2>:
     ed0:	a8 e1       	ldi	r26, 0x18	; 24
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	ee e6       	ldi	r30, 0x6E	; 110
     ed6:	f7 e0       	ldi	r31, 0x07	; 7
     ed8:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__prologue_saves__+0x18>
     edc:	69 83       	std	Y+1, r22	; 0x01
     ede:	7a 83       	std	Y+2, r23	; 0x02
     ee0:	8b 83       	std	Y+3, r24	; 0x03
     ee2:	9c 83       	std	Y+4, r25	; 0x04
     ee4:	2d 83       	std	Y+5, r18	; 0x05
     ee6:	3e 83       	std	Y+6, r19	; 0x06
     ee8:	4f 83       	std	Y+7, r20	; 0x07
     eea:	58 87       	std	Y+8, r21	; 0x08
     eec:	8e 01       	movw	r16, r28
     eee:	07 5f       	subi	r16, 0xF7	; 247
     ef0:	1f 4f       	sbci	r17, 0xFF	; 255
     ef2:	ce 01       	movw	r24, r28
     ef4:	01 96       	adiw	r24, 0x01	; 1
     ef6:	b8 01       	movw	r22, r16
     ef8:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     efc:	81 e1       	ldi	r24, 0x11	; 17
     efe:	e8 2e       	mov	r14, r24
     f00:	f1 2c       	mov	r15, r1
     f02:	ec 0e       	add	r14, r28
     f04:	fd 1e       	adc	r15, r29
     f06:	ce 01       	movw	r24, r28
     f08:	05 96       	adiw	r24, 0x05	; 5
     f0a:	b7 01       	movw	r22, r14
     f0c:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     f10:	89 85       	ldd	r24, Y+9	; 0x09
     f12:	82 30       	cpi	r24, 0x02	; 2
     f14:	40 f0       	brcs	.+16     	; 0xf26 <__gtsf2+0x56>
     f16:	89 89       	ldd	r24, Y+17	; 0x11
     f18:	82 30       	cpi	r24, 0x02	; 2
     f1a:	28 f0       	brcs	.+10     	; 0xf26 <__gtsf2+0x56>
     f1c:	c8 01       	movw	r24, r16
     f1e:	b7 01       	movw	r22, r14
     f20:	0e 94 81 09 	call	0x1302	; 0x1302 <__fpcmp_parts_f>
     f24:	01 c0       	rjmp	.+2      	; 0xf28 <__gtsf2+0x58>
     f26:	8f ef       	ldi	r24, 0xFF	; 255
     f28:	68 96       	adiw	r28, 0x18	; 24
     f2a:	e6 e0       	ldi	r30, 0x06	; 6
     f2c:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__epilogue_restores__+0x18>

00000f30 <__gesf2>:
     f30:	a8 e1       	ldi	r26, 0x18	; 24
     f32:	b0 e0       	ldi	r27, 0x00	; 0
     f34:	ee e9       	ldi	r30, 0x9E	; 158
     f36:	f7 e0       	ldi	r31, 0x07	; 7
     f38:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__prologue_saves__+0x18>
     f3c:	69 83       	std	Y+1, r22	; 0x01
     f3e:	7a 83       	std	Y+2, r23	; 0x02
     f40:	8b 83       	std	Y+3, r24	; 0x03
     f42:	9c 83       	std	Y+4, r25	; 0x04
     f44:	2d 83       	std	Y+5, r18	; 0x05
     f46:	3e 83       	std	Y+6, r19	; 0x06
     f48:	4f 83       	std	Y+7, r20	; 0x07
     f4a:	58 87       	std	Y+8, r21	; 0x08
     f4c:	8e 01       	movw	r16, r28
     f4e:	07 5f       	subi	r16, 0xF7	; 247
     f50:	1f 4f       	sbci	r17, 0xFF	; 255
     f52:	ce 01       	movw	r24, r28
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	b8 01       	movw	r22, r16
     f58:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     f5c:	81 e1       	ldi	r24, 0x11	; 17
     f5e:	e8 2e       	mov	r14, r24
     f60:	f1 2c       	mov	r15, r1
     f62:	ec 0e       	add	r14, r28
     f64:	fd 1e       	adc	r15, r29
     f66:	ce 01       	movw	r24, r28
     f68:	05 96       	adiw	r24, 0x05	; 5
     f6a:	b7 01       	movw	r22, r14
     f6c:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     f70:	89 85       	ldd	r24, Y+9	; 0x09
     f72:	82 30       	cpi	r24, 0x02	; 2
     f74:	40 f0       	brcs	.+16     	; 0xf86 <__gesf2+0x56>
     f76:	89 89       	ldd	r24, Y+17	; 0x11
     f78:	82 30       	cpi	r24, 0x02	; 2
     f7a:	28 f0       	brcs	.+10     	; 0xf86 <__gesf2+0x56>
     f7c:	c8 01       	movw	r24, r16
     f7e:	b7 01       	movw	r22, r14
     f80:	0e 94 81 09 	call	0x1302	; 0x1302 <__fpcmp_parts_f>
     f84:	01 c0       	rjmp	.+2      	; 0xf88 <__gesf2+0x58>
     f86:	8f ef       	ldi	r24, 0xFF	; 255
     f88:	68 96       	adiw	r28, 0x18	; 24
     f8a:	e6 e0       	ldi	r30, 0x06	; 6
     f8c:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__epilogue_restores__+0x18>

00000f90 <__ltsf2>:
     f90:	a8 e1       	ldi	r26, 0x18	; 24
     f92:	b0 e0       	ldi	r27, 0x00	; 0
     f94:	ee ec       	ldi	r30, 0xCE	; 206
     f96:	f7 e0       	ldi	r31, 0x07	; 7
     f98:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__prologue_saves__+0x18>
     f9c:	69 83       	std	Y+1, r22	; 0x01
     f9e:	7a 83       	std	Y+2, r23	; 0x02
     fa0:	8b 83       	std	Y+3, r24	; 0x03
     fa2:	9c 83       	std	Y+4, r25	; 0x04
     fa4:	2d 83       	std	Y+5, r18	; 0x05
     fa6:	3e 83       	std	Y+6, r19	; 0x06
     fa8:	4f 83       	std	Y+7, r20	; 0x07
     faa:	58 87       	std	Y+8, r21	; 0x08
     fac:	8e 01       	movw	r16, r28
     fae:	07 5f       	subi	r16, 0xF7	; 247
     fb0:	1f 4f       	sbci	r17, 0xFF	; 255
     fb2:	ce 01       	movw	r24, r28
     fb4:	01 96       	adiw	r24, 0x01	; 1
     fb6:	b8 01       	movw	r22, r16
     fb8:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     fbc:	81 e1       	ldi	r24, 0x11	; 17
     fbe:	e8 2e       	mov	r14, r24
     fc0:	f1 2c       	mov	r15, r1
     fc2:	ec 0e       	add	r14, r28
     fc4:	fd 1e       	adc	r15, r29
     fc6:	ce 01       	movw	r24, r28
     fc8:	05 96       	adiw	r24, 0x05	; 5
     fca:	b7 01       	movw	r22, r14
     fcc:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
     fd0:	89 85       	ldd	r24, Y+9	; 0x09
     fd2:	82 30       	cpi	r24, 0x02	; 2
     fd4:	40 f0       	brcs	.+16     	; 0xfe6 <__ltsf2+0x56>
     fd6:	89 89       	ldd	r24, Y+17	; 0x11
     fd8:	82 30       	cpi	r24, 0x02	; 2
     fda:	28 f0       	brcs	.+10     	; 0xfe6 <__ltsf2+0x56>
     fdc:	c8 01       	movw	r24, r16
     fde:	b7 01       	movw	r22, r14
     fe0:	0e 94 81 09 	call	0x1302	; 0x1302 <__fpcmp_parts_f>
     fe4:	01 c0       	rjmp	.+2      	; 0xfe8 <__ltsf2+0x58>
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	68 96       	adiw	r28, 0x18	; 24
     fea:	e6 e0       	ldi	r30, 0x06	; 6
     fec:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__epilogue_restores__+0x18>

00000ff0 <__fixsfsi>:
     ff0:	ac e0       	ldi	r26, 0x0C	; 12
     ff2:	b0 e0       	ldi	r27, 0x00	; 0
     ff4:	ee ef       	ldi	r30, 0xFE	; 254
     ff6:	f7 e0       	ldi	r31, 0x07	; 7
     ff8:	0c 94 ea 09 	jmp	0x13d4	; 0x13d4 <__prologue_saves__+0x20>
     ffc:	69 83       	std	Y+1, r22	; 0x01
     ffe:	7a 83       	std	Y+2, r23	; 0x02
    1000:	8b 83       	std	Y+3, r24	; 0x03
    1002:	9c 83       	std	Y+4, r25	; 0x04
    1004:	ce 01       	movw	r24, r28
    1006:	01 96       	adiw	r24, 0x01	; 1
    1008:	be 01       	movw	r22, r28
    100a:	6b 5f       	subi	r22, 0xFB	; 251
    100c:	7f 4f       	sbci	r23, 0xFF	; 255
    100e:	0e 94 18 09 	call	0x1230	; 0x1230 <__unpack_f>
    1012:	8d 81       	ldd	r24, Y+5	; 0x05
    1014:	82 30       	cpi	r24, 0x02	; 2
    1016:	81 f1       	breq	.+96     	; 0x1078 <__fixsfsi+0x88>
    1018:	82 30       	cpi	r24, 0x02	; 2
    101a:	70 f1       	brcs	.+92     	; 0x1078 <__fixsfsi+0x88>
    101c:	84 30       	cpi	r24, 0x04	; 4
    101e:	21 f4       	brne	.+8      	; 0x1028 <__fixsfsi+0x38>
    1020:	8e 81       	ldd	r24, Y+6	; 0x06
    1022:	88 23       	and	r24, r24
    1024:	69 f1       	breq	.+90     	; 0x1080 <__fixsfsi+0x90>
    1026:	0a c0       	rjmp	.+20     	; 0x103c <__fixsfsi+0x4c>
    1028:	2f 81       	ldd	r18, Y+7	; 0x07
    102a:	38 85       	ldd	r19, Y+8	; 0x08
    102c:	37 fd       	sbrc	r19, 7
    102e:	24 c0       	rjmp	.+72     	; 0x1078 <__fixsfsi+0x88>
    1030:	6e 81       	ldd	r22, Y+6	; 0x06
    1032:	2f 31       	cpi	r18, 0x1F	; 31
    1034:	31 05       	cpc	r19, r1
    1036:	3c f0       	brlt	.+14     	; 0x1046 <__fixsfsi+0x56>
    1038:	66 23       	and	r22, r22
    103a:	11 f1       	breq	.+68     	; 0x1080 <__fixsfsi+0x90>
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e0       	ldi	r20, 0x00	; 0
    1042:	50 e8       	ldi	r21, 0x80	; 128
    1044:	21 c0       	rjmp	.+66     	; 0x1088 <__fixsfsi+0x98>
    1046:	8e e1       	ldi	r24, 0x1E	; 30
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	82 1b       	sub	r24, r18
    104c:	93 0b       	sbc	r25, r19
    104e:	29 85       	ldd	r18, Y+9	; 0x09
    1050:	3a 85       	ldd	r19, Y+10	; 0x0a
    1052:	4b 85       	ldd	r20, Y+11	; 0x0b
    1054:	5c 85       	ldd	r21, Y+12	; 0x0c
    1056:	04 c0       	rjmp	.+8      	; 0x1060 <__fixsfsi+0x70>
    1058:	56 95       	lsr	r21
    105a:	47 95       	ror	r20
    105c:	37 95       	ror	r19
    105e:	27 95       	ror	r18
    1060:	8a 95       	dec	r24
    1062:	d2 f7       	brpl	.-12     	; 0x1058 <__fixsfsi+0x68>
    1064:	66 23       	and	r22, r22
    1066:	81 f0       	breq	.+32     	; 0x1088 <__fixsfsi+0x98>
    1068:	50 95       	com	r21
    106a:	40 95       	com	r20
    106c:	30 95       	com	r19
    106e:	21 95       	neg	r18
    1070:	3f 4f       	sbci	r19, 0xFF	; 255
    1072:	4f 4f       	sbci	r20, 0xFF	; 255
    1074:	5f 4f       	sbci	r21, 0xFF	; 255
    1076:	08 c0       	rjmp	.+16     	; 0x1088 <__fixsfsi+0x98>
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	a9 01       	movw	r20, r18
    107e:	04 c0       	rjmp	.+8      	; 0x1088 <__fixsfsi+0x98>
    1080:	2f ef       	ldi	r18, 0xFF	; 255
    1082:	3f ef       	ldi	r19, 0xFF	; 255
    1084:	4f ef       	ldi	r20, 0xFF	; 255
    1086:	5f e7       	ldi	r21, 0x7F	; 127
    1088:	b9 01       	movw	r22, r18
    108a:	ca 01       	movw	r24, r20
    108c:	2c 96       	adiw	r28, 0x0c	; 12
    108e:	e2 e0       	ldi	r30, 0x02	; 2
    1090:	0c 94 06 0a 	jmp	0x140c	; 0x140c <__epilogue_restores__+0x20>

00001094 <__pack_f>:
    1094:	ef 92       	push	r14
    1096:	ff 92       	push	r15
    1098:	0f 93       	push	r16
    109a:	1f 93       	push	r17
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	fc 01       	movw	r30, r24
    10a2:	24 81       	ldd	r18, Z+4	; 0x04
    10a4:	35 81       	ldd	r19, Z+5	; 0x05
    10a6:	46 81       	ldd	r20, Z+6	; 0x06
    10a8:	57 81       	ldd	r21, Z+7	; 0x07
    10aa:	61 81       	ldd	r22, Z+1	; 0x01
    10ac:	80 81       	ld	r24, Z
    10ae:	82 30       	cpi	r24, 0x02	; 2
    10b0:	20 f4       	brcc	.+8      	; 0x10ba <__pack_f+0x26>
    10b2:	40 61       	ori	r20, 0x10	; 16
    10b4:	ef ef       	ldi	r30, 0xFF	; 255
    10b6:	f0 e0       	ldi	r31, 0x00	; 0
    10b8:	a3 c0       	rjmp	.+326    	; 0x1200 <__pack_f+0x16c>
    10ba:	84 30       	cpi	r24, 0x04	; 4
    10bc:	09 f4       	brne	.+2      	; 0x10c0 <__pack_f+0x2c>
    10be:	9b c0       	rjmp	.+310    	; 0x11f6 <__pack_f+0x162>
    10c0:	82 30       	cpi	r24, 0x02	; 2
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <__pack_f+0x32>
    10c4:	92 c0       	rjmp	.+292    	; 0x11ea <__pack_f+0x156>
    10c6:	21 15       	cp	r18, r1
    10c8:	31 05       	cpc	r19, r1
    10ca:	41 05       	cpc	r20, r1
    10cc:	51 05       	cpc	r21, r1
    10ce:	09 f4       	brne	.+2      	; 0x10d2 <__pack_f+0x3e>
    10d0:	8f c0       	rjmp	.+286    	; 0x11f0 <__pack_f+0x15c>
    10d2:	02 80       	ldd	r0, Z+2	; 0x02
    10d4:	f3 81       	ldd	r31, Z+3	; 0x03
    10d6:	e0 2d       	mov	r30, r0
    10d8:	8f ef       	ldi	r24, 0xFF	; 255
    10da:	e2 38       	cpi	r30, 0x82	; 130
    10dc:	f8 07       	cpc	r31, r24
    10de:	0c f0       	brlt	.+2      	; 0x10e2 <__pack_f+0x4e>
    10e0:	5a c0       	rjmp	.+180    	; 0x1196 <__pack_f+0x102>
    10e2:	c2 e8       	ldi	r28, 0x82	; 130
    10e4:	df ef       	ldi	r29, 0xFF	; 255
    10e6:	ce 1b       	sub	r28, r30
    10e8:	df 0b       	sbc	r29, r31
    10ea:	ca 31       	cpi	r28, 0x1A	; 26
    10ec:	d1 05       	cpc	r29, r1
    10ee:	6c f5       	brge	.+90     	; 0x114a <__pack_f+0xb6>
    10f0:	79 01       	movw	r14, r18
    10f2:	8a 01       	movw	r16, r20
    10f4:	0c 2e       	mov	r0, r28
    10f6:	04 c0       	rjmp	.+8      	; 0x1100 <__pack_f+0x6c>
    10f8:	16 95       	lsr	r17
    10fa:	07 95       	ror	r16
    10fc:	f7 94       	ror	r15
    10fe:	e7 94       	ror	r14
    1100:	0a 94       	dec	r0
    1102:	d2 f7       	brpl	.-12     	; 0x10f8 <__pack_f+0x64>
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	a0 e0       	ldi	r26, 0x00	; 0
    110a:	b0 e0       	ldi	r27, 0x00	; 0
    110c:	0c 2e       	mov	r0, r28
    110e:	04 c0       	rjmp	.+8      	; 0x1118 <__pack_f+0x84>
    1110:	88 0f       	add	r24, r24
    1112:	99 1f       	adc	r25, r25
    1114:	aa 1f       	adc	r26, r26
    1116:	bb 1f       	adc	r27, r27
    1118:	0a 94       	dec	r0
    111a:	d2 f7       	brpl	.-12     	; 0x1110 <__pack_f+0x7c>
    111c:	01 97       	sbiw	r24, 0x01	; 1
    111e:	a1 09       	sbc	r26, r1
    1120:	b1 09       	sbc	r27, r1
    1122:	82 23       	and	r24, r18
    1124:	93 23       	and	r25, r19
    1126:	a4 23       	and	r26, r20
    1128:	b5 23       	and	r27, r21
    112a:	21 e0       	ldi	r18, 0x01	; 1
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	40 e0       	ldi	r20, 0x00	; 0
    1130:	50 e0       	ldi	r21, 0x00	; 0
    1132:	00 97       	sbiw	r24, 0x00	; 0
    1134:	a1 05       	cpc	r26, r1
    1136:	b1 05       	cpc	r27, r1
    1138:	19 f4       	brne	.+6      	; 0x1140 <__pack_f+0xac>
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	a9 01       	movw	r20, r18
    1140:	2e 29       	or	r18, r14
    1142:	3f 29       	or	r19, r15
    1144:	40 2b       	or	r20, r16
    1146:	51 2b       	or	r21, r17
    1148:	03 c0       	rjmp	.+6      	; 0x1150 <__pack_f+0xbc>
    114a:	20 e0       	ldi	r18, 0x00	; 0
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	a9 01       	movw	r20, r18
    1150:	da 01       	movw	r26, r20
    1152:	c9 01       	movw	r24, r18
    1154:	8f 77       	andi	r24, 0x7F	; 127
    1156:	90 70       	andi	r25, 0x00	; 0
    1158:	a0 70       	andi	r26, 0x00	; 0
    115a:	b0 70       	andi	r27, 0x00	; 0
    115c:	80 34       	cpi	r24, 0x40	; 64
    115e:	91 05       	cpc	r25, r1
    1160:	a1 05       	cpc	r26, r1
    1162:	b1 05       	cpc	r27, r1
    1164:	39 f4       	brne	.+14     	; 0x1174 <__pack_f+0xe0>
    1166:	27 ff       	sbrs	r18, 7
    1168:	09 c0       	rjmp	.+18     	; 0x117c <__pack_f+0xe8>
    116a:	20 5c       	subi	r18, 0xC0	; 192
    116c:	3f 4f       	sbci	r19, 0xFF	; 255
    116e:	4f 4f       	sbci	r20, 0xFF	; 255
    1170:	5f 4f       	sbci	r21, 0xFF	; 255
    1172:	04 c0       	rjmp	.+8      	; 0x117c <__pack_f+0xe8>
    1174:	21 5c       	subi	r18, 0xC1	; 193
    1176:	3f 4f       	sbci	r19, 0xFF	; 255
    1178:	4f 4f       	sbci	r20, 0xFF	; 255
    117a:	5f 4f       	sbci	r21, 0xFF	; 255
    117c:	e1 e0       	ldi	r30, 0x01	; 1
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	20 30       	cpi	r18, 0x00	; 0
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	38 07       	cpc	r19, r24
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	48 07       	cpc	r20, r24
    118a:	80 e4       	ldi	r24, 0x40	; 64
    118c:	58 07       	cpc	r21, r24
    118e:	28 f5       	brcc	.+74     	; 0x11da <__pack_f+0x146>
    1190:	e0 e0       	ldi	r30, 0x00	; 0
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	22 c0       	rjmp	.+68     	; 0x11da <__pack_f+0x146>
    1196:	e0 38       	cpi	r30, 0x80	; 128
    1198:	f1 05       	cpc	r31, r1
    119a:	6c f5       	brge	.+90     	; 0x11f6 <__pack_f+0x162>
    119c:	e1 58       	subi	r30, 0x81	; 129
    119e:	ff 4f       	sbci	r31, 0xFF	; 255
    11a0:	da 01       	movw	r26, r20
    11a2:	c9 01       	movw	r24, r18
    11a4:	8f 77       	andi	r24, 0x7F	; 127
    11a6:	90 70       	andi	r25, 0x00	; 0
    11a8:	a0 70       	andi	r26, 0x00	; 0
    11aa:	b0 70       	andi	r27, 0x00	; 0
    11ac:	80 34       	cpi	r24, 0x40	; 64
    11ae:	91 05       	cpc	r25, r1
    11b0:	a1 05       	cpc	r26, r1
    11b2:	b1 05       	cpc	r27, r1
    11b4:	39 f4       	brne	.+14     	; 0x11c4 <__pack_f+0x130>
    11b6:	27 ff       	sbrs	r18, 7
    11b8:	09 c0       	rjmp	.+18     	; 0x11cc <__pack_f+0x138>
    11ba:	20 5c       	subi	r18, 0xC0	; 192
    11bc:	3f 4f       	sbci	r19, 0xFF	; 255
    11be:	4f 4f       	sbci	r20, 0xFF	; 255
    11c0:	5f 4f       	sbci	r21, 0xFF	; 255
    11c2:	04 c0       	rjmp	.+8      	; 0x11cc <__pack_f+0x138>
    11c4:	21 5c       	subi	r18, 0xC1	; 193
    11c6:	3f 4f       	sbci	r19, 0xFF	; 255
    11c8:	4f 4f       	sbci	r20, 0xFF	; 255
    11ca:	5f 4f       	sbci	r21, 0xFF	; 255
    11cc:	57 ff       	sbrs	r21, 7
    11ce:	05 c0       	rjmp	.+10     	; 0x11da <__pack_f+0x146>
    11d0:	56 95       	lsr	r21
    11d2:	47 95       	ror	r20
    11d4:	37 95       	ror	r19
    11d6:	27 95       	ror	r18
    11d8:	31 96       	adiw	r30, 0x01	; 1
    11da:	87 e0       	ldi	r24, 0x07	; 7
    11dc:	56 95       	lsr	r21
    11de:	47 95       	ror	r20
    11e0:	37 95       	ror	r19
    11e2:	27 95       	ror	r18
    11e4:	8a 95       	dec	r24
    11e6:	d1 f7       	brne	.-12     	; 0x11dc <__pack_f+0x148>
    11e8:	0b c0       	rjmp	.+22     	; 0x1200 <__pack_f+0x16c>
    11ea:	e0 e0       	ldi	r30, 0x00	; 0
    11ec:	f0 e0       	ldi	r31, 0x00	; 0
    11ee:	05 c0       	rjmp	.+10     	; 0x11fa <__pack_f+0x166>
    11f0:	e0 e0       	ldi	r30, 0x00	; 0
    11f2:	f0 e0       	ldi	r31, 0x00	; 0
    11f4:	05 c0       	rjmp	.+10     	; 0x1200 <__pack_f+0x16c>
    11f6:	ef ef       	ldi	r30, 0xFF	; 255
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	20 e0       	ldi	r18, 0x00	; 0
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	a9 01       	movw	r20, r18
    1200:	8e 2f       	mov	r24, r30
    1202:	87 95       	ror	r24
    1204:	88 27       	eor	r24, r24
    1206:	87 95       	ror	r24
    1208:	94 2f       	mov	r25, r20
    120a:	9f 77       	andi	r25, 0x7F	; 127
    120c:	67 95       	ror	r22
    120e:	66 27       	eor	r22, r22
    1210:	67 95       	ror	r22
    1212:	e6 95       	lsr	r30
    1214:	e2 2e       	mov	r14, r18
    1216:	a9 2f       	mov	r26, r25
    1218:	a8 2b       	or	r26, r24
    121a:	fe 2f       	mov	r31, r30
    121c:	f6 2b       	or	r31, r22
    121e:	62 2f       	mov	r22, r18
    1220:	73 2f       	mov	r23, r19
    1222:	8a 2f       	mov	r24, r26
    1224:	9f 2f       	mov	r25, r31
    1226:	cd b7       	in	r28, 0x3d	; 61
    1228:	de b7       	in	r29, 0x3e	; 62
    122a:	e6 e0       	ldi	r30, 0x06	; 6
    122c:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__epilogue_restores__+0x18>

00001230 <__unpack_f>:
    1230:	dc 01       	movw	r26, r24
    1232:	fb 01       	movw	r30, r22
    1234:	2c 91       	ld	r18, X
    1236:	11 96       	adiw	r26, 0x01	; 1
    1238:	3c 91       	ld	r19, X
    123a:	11 97       	sbiw	r26, 0x01	; 1
    123c:	12 96       	adiw	r26, 0x02	; 2
    123e:	8c 91       	ld	r24, X
    1240:	12 97       	sbiw	r26, 0x02	; 2
    1242:	48 2f       	mov	r20, r24
    1244:	4f 77       	andi	r20, 0x7F	; 127
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	98 2f       	mov	r25, r24
    124a:	99 1f       	adc	r25, r25
    124c:	99 27       	eor	r25, r25
    124e:	99 1f       	adc	r25, r25
    1250:	13 96       	adiw	r26, 0x03	; 3
    1252:	6c 91       	ld	r22, X
    1254:	13 97       	sbiw	r26, 0x03	; 3
    1256:	86 2f       	mov	r24, r22
    1258:	88 0f       	add	r24, r24
    125a:	89 2b       	or	r24, r25
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	66 1f       	adc	r22, r22
    1260:	66 27       	eor	r22, r22
    1262:	66 1f       	adc	r22, r22
    1264:	61 83       	std	Z+1, r22	; 0x01
    1266:	00 97       	sbiw	r24, 0x00	; 0
    1268:	39 f5       	brne	.+78     	; 0x12b8 <__unpack_f+0x88>
    126a:	21 15       	cp	r18, r1
    126c:	31 05       	cpc	r19, r1
    126e:	41 05       	cpc	r20, r1
    1270:	51 05       	cpc	r21, r1
    1272:	11 f4       	brne	.+4      	; 0x1278 <__unpack_f+0x48>
    1274:	82 e0       	ldi	r24, 0x02	; 2
    1276:	29 c0       	rjmp	.+82     	; 0x12ca <__unpack_f+0x9a>
    1278:	82 e8       	ldi	r24, 0x82	; 130
    127a:	9f ef       	ldi	r25, 0xFF	; 255
    127c:	93 83       	std	Z+3, r25	; 0x03
    127e:	82 83       	std	Z+2, r24	; 0x02
    1280:	67 e0       	ldi	r22, 0x07	; 7
    1282:	22 0f       	add	r18, r18
    1284:	33 1f       	adc	r19, r19
    1286:	44 1f       	adc	r20, r20
    1288:	55 1f       	adc	r21, r21
    128a:	6a 95       	dec	r22
    128c:	d1 f7       	brne	.-12     	; 0x1282 <__unpack_f+0x52>
    128e:	83 e0       	ldi	r24, 0x03	; 3
    1290:	80 83       	st	Z, r24
    1292:	09 c0       	rjmp	.+18     	; 0x12a6 <__unpack_f+0x76>
    1294:	22 0f       	add	r18, r18
    1296:	33 1f       	adc	r19, r19
    1298:	44 1f       	adc	r20, r20
    129a:	55 1f       	adc	r21, r21
    129c:	82 81       	ldd	r24, Z+2	; 0x02
    129e:	93 81       	ldd	r25, Z+3	; 0x03
    12a0:	01 97       	sbiw	r24, 0x01	; 1
    12a2:	93 83       	std	Z+3, r25	; 0x03
    12a4:	82 83       	std	Z+2, r24	; 0x02
    12a6:	20 30       	cpi	r18, 0x00	; 0
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	38 07       	cpc	r19, r24
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	48 07       	cpc	r20, r24
    12b0:	80 e4       	ldi	r24, 0x40	; 64
    12b2:	58 07       	cpc	r21, r24
    12b4:	78 f3       	brcs	.-34     	; 0x1294 <__unpack_f+0x64>
    12b6:	20 c0       	rjmp	.+64     	; 0x12f8 <__unpack_f+0xc8>
    12b8:	8f 3f       	cpi	r24, 0xFF	; 255
    12ba:	91 05       	cpc	r25, r1
    12bc:	79 f4       	brne	.+30     	; 0x12dc <__unpack_f+0xac>
    12be:	21 15       	cp	r18, r1
    12c0:	31 05       	cpc	r19, r1
    12c2:	41 05       	cpc	r20, r1
    12c4:	51 05       	cpc	r21, r1
    12c6:	19 f4       	brne	.+6      	; 0x12ce <__unpack_f+0x9e>
    12c8:	84 e0       	ldi	r24, 0x04	; 4
    12ca:	80 83       	st	Z, r24
    12cc:	08 95       	ret
    12ce:	44 ff       	sbrs	r20, 4
    12d0:	03 c0       	rjmp	.+6      	; 0x12d8 <__unpack_f+0xa8>
    12d2:	81 e0       	ldi	r24, 0x01	; 1
    12d4:	80 83       	st	Z, r24
    12d6:	10 c0       	rjmp	.+32     	; 0x12f8 <__unpack_f+0xc8>
    12d8:	10 82       	st	Z, r1
    12da:	0e c0       	rjmp	.+28     	; 0x12f8 <__unpack_f+0xc8>
    12dc:	8f 57       	subi	r24, 0x7F	; 127
    12de:	90 40       	sbci	r25, 0x00	; 0
    12e0:	93 83       	std	Z+3, r25	; 0x03
    12e2:	82 83       	std	Z+2, r24	; 0x02
    12e4:	83 e0       	ldi	r24, 0x03	; 3
    12e6:	80 83       	st	Z, r24
    12e8:	87 e0       	ldi	r24, 0x07	; 7
    12ea:	22 0f       	add	r18, r18
    12ec:	33 1f       	adc	r19, r19
    12ee:	44 1f       	adc	r20, r20
    12f0:	55 1f       	adc	r21, r21
    12f2:	8a 95       	dec	r24
    12f4:	d1 f7       	brne	.-12     	; 0x12ea <__unpack_f+0xba>
    12f6:	50 64       	ori	r21, 0x40	; 64
    12f8:	24 83       	std	Z+4, r18	; 0x04
    12fa:	35 83       	std	Z+5, r19	; 0x05
    12fc:	46 83       	std	Z+6, r20	; 0x06
    12fe:	57 83       	std	Z+7, r21	; 0x07
    1300:	08 95       	ret

00001302 <__fpcmp_parts_f>:
    1302:	fc 01       	movw	r30, r24
    1304:	db 01       	movw	r26, r22
    1306:	90 81       	ld	r25, Z
    1308:	92 30       	cpi	r25, 0x02	; 2
    130a:	08 f4       	brcc	.+2      	; 0x130e <__fpcmp_parts_f+0xc>
    130c:	49 c0       	rjmp	.+146    	; 0x13a0 <__fpcmp_parts_f+0x9e>
    130e:	8c 91       	ld	r24, X
    1310:	82 30       	cpi	r24, 0x02	; 2
    1312:	08 f4       	brcc	.+2      	; 0x1316 <__fpcmp_parts_f+0x14>
    1314:	45 c0       	rjmp	.+138    	; 0x13a0 <__fpcmp_parts_f+0x9e>
    1316:	94 30       	cpi	r25, 0x04	; 4
    1318:	51 f4       	brne	.+20     	; 0x132e <__fpcmp_parts_f+0x2c>
    131a:	61 81       	ldd	r22, Z+1	; 0x01
    131c:	84 30       	cpi	r24, 0x04	; 4
    131e:	b1 f5       	brne	.+108    	; 0x138c <__fpcmp_parts_f+0x8a>
    1320:	11 96       	adiw	r26, 0x01	; 1
    1322:	2c 91       	ld	r18, X
    1324:	11 97       	sbiw	r26, 0x01	; 1
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	26 1b       	sub	r18, r22
    132a:	31 09       	sbc	r19, r1
    132c:	41 c0       	rjmp	.+130    	; 0x13b0 <__fpcmp_parts_f+0xae>
    132e:	84 30       	cpi	r24, 0x04	; 4
    1330:	21 f0       	breq	.+8      	; 0x133a <__fpcmp_parts_f+0x38>
    1332:	92 30       	cpi	r25, 0x02	; 2
    1334:	41 f4       	brne	.+16     	; 0x1346 <__fpcmp_parts_f+0x44>
    1336:	82 30       	cpi	r24, 0x02	; 2
    1338:	b1 f1       	breq	.+108    	; 0x13a6 <__fpcmp_parts_f+0xa4>
    133a:	11 96       	adiw	r26, 0x01	; 1
    133c:	8c 91       	ld	r24, X
    133e:	11 97       	sbiw	r26, 0x01	; 1
    1340:	88 23       	and	r24, r24
    1342:	a1 f1       	breq	.+104    	; 0x13ac <__fpcmp_parts_f+0xaa>
    1344:	2d c0       	rjmp	.+90     	; 0x13a0 <__fpcmp_parts_f+0x9e>
    1346:	61 81       	ldd	r22, Z+1	; 0x01
    1348:	82 30       	cpi	r24, 0x02	; 2
    134a:	01 f1       	breq	.+64     	; 0x138c <__fpcmp_parts_f+0x8a>
    134c:	11 96       	adiw	r26, 0x01	; 1
    134e:	8c 91       	ld	r24, X
    1350:	11 97       	sbiw	r26, 0x01	; 1
    1352:	68 17       	cp	r22, r24
    1354:	d9 f4       	brne	.+54     	; 0x138c <__fpcmp_parts_f+0x8a>
    1356:	22 81       	ldd	r18, Z+2	; 0x02
    1358:	33 81       	ldd	r19, Z+3	; 0x03
    135a:	12 96       	adiw	r26, 0x02	; 2
    135c:	8d 91       	ld	r24, X+
    135e:	9c 91       	ld	r25, X
    1360:	13 97       	sbiw	r26, 0x03	; 3
    1362:	82 17       	cp	r24, r18
    1364:	93 07       	cpc	r25, r19
    1366:	94 f0       	brlt	.+36     	; 0x138c <__fpcmp_parts_f+0x8a>
    1368:	28 17       	cp	r18, r24
    136a:	39 07       	cpc	r19, r25
    136c:	bc f0       	brlt	.+46     	; 0x139c <__fpcmp_parts_f+0x9a>
    136e:	24 81       	ldd	r18, Z+4	; 0x04
    1370:	35 81       	ldd	r19, Z+5	; 0x05
    1372:	46 81       	ldd	r20, Z+6	; 0x06
    1374:	57 81       	ldd	r21, Z+7	; 0x07
    1376:	14 96       	adiw	r26, 0x04	; 4
    1378:	8d 91       	ld	r24, X+
    137a:	9d 91       	ld	r25, X+
    137c:	0d 90       	ld	r0, X+
    137e:	bc 91       	ld	r27, X
    1380:	a0 2d       	mov	r26, r0
    1382:	82 17       	cp	r24, r18
    1384:	93 07       	cpc	r25, r19
    1386:	a4 07       	cpc	r26, r20
    1388:	b5 07       	cpc	r27, r21
    138a:	18 f4       	brcc	.+6      	; 0x1392 <__fpcmp_parts_f+0x90>
    138c:	66 23       	and	r22, r22
    138e:	41 f0       	breq	.+16     	; 0x13a0 <__fpcmp_parts_f+0x9e>
    1390:	0d c0       	rjmp	.+26     	; 0x13ac <__fpcmp_parts_f+0xaa>
    1392:	28 17       	cp	r18, r24
    1394:	39 07       	cpc	r19, r25
    1396:	4a 07       	cpc	r20, r26
    1398:	5b 07       	cpc	r21, r27
    139a:	28 f4       	brcc	.+10     	; 0x13a6 <__fpcmp_parts_f+0xa4>
    139c:	66 23       	and	r22, r22
    139e:	31 f0       	breq	.+12     	; 0x13ac <__fpcmp_parts_f+0xaa>
    13a0:	21 e0       	ldi	r18, 0x01	; 1
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	05 c0       	rjmp	.+10     	; 0x13b0 <__fpcmp_parts_f+0xae>
    13a6:	20 e0       	ldi	r18, 0x00	; 0
    13a8:	30 e0       	ldi	r19, 0x00	; 0
    13aa:	02 c0       	rjmp	.+4      	; 0x13b0 <__fpcmp_parts_f+0xae>
    13ac:	2f ef       	ldi	r18, 0xFF	; 255
    13ae:	3f ef       	ldi	r19, 0xFF	; 255
    13b0:	c9 01       	movw	r24, r18
    13b2:	08 95       	ret

000013b4 <__prologue_saves__>:
    13b4:	2f 92       	push	r2
    13b6:	3f 92       	push	r3
    13b8:	4f 92       	push	r4
    13ba:	5f 92       	push	r5
    13bc:	6f 92       	push	r6
    13be:	7f 92       	push	r7
    13c0:	8f 92       	push	r8
    13c2:	9f 92       	push	r9
    13c4:	af 92       	push	r10
    13c6:	bf 92       	push	r11
    13c8:	cf 92       	push	r12
    13ca:	df 92       	push	r13
    13cc:	ef 92       	push	r14
    13ce:	ff 92       	push	r15
    13d0:	0f 93       	push	r16
    13d2:	1f 93       	push	r17
    13d4:	cf 93       	push	r28
    13d6:	df 93       	push	r29
    13d8:	cd b7       	in	r28, 0x3d	; 61
    13da:	de b7       	in	r29, 0x3e	; 62
    13dc:	ca 1b       	sub	r28, r26
    13de:	db 0b       	sbc	r29, r27
    13e0:	0f b6       	in	r0, 0x3f	; 63
    13e2:	f8 94       	cli
    13e4:	de bf       	out	0x3e, r29	; 62
    13e6:	0f be       	out	0x3f, r0	; 63
    13e8:	cd bf       	out	0x3d, r28	; 61
    13ea:	09 94       	ijmp

000013ec <__epilogue_restores__>:
    13ec:	2a 88       	ldd	r2, Y+18	; 0x12
    13ee:	39 88       	ldd	r3, Y+17	; 0x11
    13f0:	48 88       	ldd	r4, Y+16	; 0x10
    13f2:	5f 84       	ldd	r5, Y+15	; 0x0f
    13f4:	6e 84       	ldd	r6, Y+14	; 0x0e
    13f6:	7d 84       	ldd	r7, Y+13	; 0x0d
    13f8:	8c 84       	ldd	r8, Y+12	; 0x0c
    13fa:	9b 84       	ldd	r9, Y+11	; 0x0b
    13fc:	aa 84       	ldd	r10, Y+10	; 0x0a
    13fe:	b9 84       	ldd	r11, Y+9	; 0x09
    1400:	c8 84       	ldd	r12, Y+8	; 0x08
    1402:	df 80       	ldd	r13, Y+7	; 0x07
    1404:	ee 80       	ldd	r14, Y+6	; 0x06
    1406:	fd 80       	ldd	r15, Y+5	; 0x05
    1408:	0c 81       	ldd	r16, Y+4	; 0x04
    140a:	1b 81       	ldd	r17, Y+3	; 0x03
    140c:	aa 81       	ldd	r26, Y+2	; 0x02
    140e:	b9 81       	ldd	r27, Y+1	; 0x01
    1410:	ce 0f       	add	r28, r30
    1412:	d1 1d       	adc	r29, r1
    1414:	0f b6       	in	r0, 0x3f	; 63
    1416:	f8 94       	cli
    1418:	de bf       	out	0x3e, r29	; 62
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	cd bf       	out	0x3d, r28	; 61
    141e:	ed 01       	movw	r28, r26
    1420:	08 95       	ret

00001422 <_exit>:
    1422:	f8 94       	cli

00001424 <__stop_program>:
    1424:	ff cf       	rjmp	.-2      	; 0x1424 <__stop_program>
