
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000119a  0000122e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000119a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010c  0080010c  0000123a  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001908  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  0000198d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000278  00000000  00000000  00001b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000231c  00000000  00000000  00001da5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001163  00000000  00000000  000040c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001745  00000000  00000000  00005224  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  0000696c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000475  00000000  00000000  00006bac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  00007021  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000062c  00000000  00000000  00007c46  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  00008272  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 13 01 	jmp	0x226	; 0x226 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e9       	ldi	r30, 0x9A	; 154
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 30       	cpi	r26, 0x0F	; 15
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 cb 08 	jmp	0x1196	; 0x1196 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile unsigned int count = 0;
volatile uint8_t rxflag = 0;
volatile uint8_t zerocross = 1;

int main(void)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
	DDRB = (1<<PORTB0);
      ae:	84 e2       	ldi	r24, 0x24	; 36
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	fc 01       	movw	r30, r24
      b6:	20 83       	st	Z, r18
	DDRD = (1 << PORTD3);
      b8:	8a e2       	ldi	r24, 0x2A	; 42
      ba:	90 e0       	ldi	r25, 0x00	; 0
      bc:	28 e0       	ldi	r18, 0x08	; 8
      be:	fc 01       	movw	r30, r24
      c0:	20 83       	st	Z, r18
	DDRD &= ~(1 << PORTD2);
      c2:	8a e2       	ldi	r24, 0x2A	; 42
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	2a e2       	ldi	r18, 0x2A	; 42
      c8:	30 e0       	ldi	r19, 0x00	; 0
      ca:	f9 01       	movw	r30, r18
      cc:	20 81       	ld	r18, Z
      ce:	2b 7f       	andi	r18, 0xFB	; 251
      d0:	fc 01       	movw	r30, r24
      d2:	20 83       	st	Z, r18
	PORTB &= ~(1 << PORTB0);
      d4:	85 e2       	ldi	r24, 0x25	; 37
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	25 e2       	ldi	r18, 0x25	; 37
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	f9 01       	movw	r30, r18
      de:	20 81       	ld	r18, Z
      e0:	2e 7f       	andi	r18, 0xFE	; 254
      e2:	fc 01       	movw	r30, r24
      e4:	20 83       	st	Z, r18
	/*
	_delay_ms(10000);
	dim = 30;
	*/
	
	initTimer(65);
      e6:	81 e4       	ldi	r24, 0x41	; 65
      e8:	90 e0       	ldi	r25, 0x00	; 0
      ea:	0e 94 81 00 	call	0x102	; 0x102 <initTimer>
	initInterrupt0();
      ee:	0e 94 c0 00 	call	0x180	; 0x180 <initInterrupt0>
	dim = 10;
      f2:	8a e0       	ldi	r24, 0x0A	; 10
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	90 93 01 01 	sts	0x0101, r25
      fa:	80 93 00 01 	sts	0x0100, r24
	
	// turn on interrupts
	sei();
      fe:	78 94       	sei
		{
			PORTD &= ~(1 << PORTD3);
			dim = j;
			_delay_ms(40);
		}*/
	}				
     100:	ff cf       	rjmp	.-2      	; 0x100 <main+0x5a>

00000102 <initTimer>:
    return(0);
}

void initTimer( int dutycycle )
{
     102:	df 93       	push	r29
     104:	cf 93       	push	r28
     106:	00 d0       	rcall	.+0      	; 0x108 <initTimer+0x6>
     108:	cd b7       	in	r28, 0x3d	; 61
     10a:	de b7       	in	r29, 0x3e	; 62
     10c:	9a 83       	std	Y+2, r25	; 0x02
     10e:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = 130; //cap of Timer0
     110:	87 e4       	ldi	r24, 0x47	; 71
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	22 e8       	ldi	r18, 0x82	; 130
     116:	fc 01       	movw	r30, r24
     118:	20 83       	st	Z, r18
	OCR0B = dutycycle;
     11a:	88 e4       	ldi	r24, 0x48	; 72
     11c:	90 e0       	ldi	r25, 0x00	; 0
     11e:	29 81       	ldd	r18, Y+1	; 0x01
     120:	fc 01       	movw	r30, r24
     122:	20 83       	st	Z, r18
    DDRD |= (1 << PORTD6);         
     124:	8a e2       	ldi	r24, 0x2A	; 42
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	2a e2       	ldi	r18, 0x2A	; 42
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	f9 01       	movw	r30, r18
     12e:	20 81       	ld	r18, Z
     130:	20 64       	ori	r18, 0x40	; 64
     132:	fc 01       	movw	r30, r24
     134:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);
     136:	84 e4       	ldi	r24, 0x44	; 68
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	24 e4       	ldi	r18, 0x44	; 68
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	f9 01       	movw	r30, r18
     140:	20 81       	ld	r18, Z
     142:	20 68       	ori	r18, 0x80	; 128
     144:	fc 01       	movw	r30, r24
     146:	20 83       	st	Z, r18
    // set none-inverting mode

    TCCR0A |= (1 << WGM01);
     148:	84 e4       	ldi	r24, 0x44	; 68
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	24 e4       	ldi	r18, 0x44	; 68
     14e:	30 e0       	ldi	r19, 0x00	; 0
     150:	f9 01       	movw	r30, r18
     152:	20 81       	ld	r18, Z
     154:	22 60       	ori	r18, 0x02	; 2
     156:	fc 01       	movw	r30, r24
     158:	20 83       	st	Z, r18
    // set CTC (Clear Timer on Compare) Mode

    TCCR0B |= (1 << CS01);
     15a:	85 e4       	ldi	r24, 0x45	; 69
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	25 e4       	ldi	r18, 0x45	; 69
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	f9 01       	movw	r30, r18
     164:	20 81       	ld	r18, Z
     166:	22 60       	ori	r18, 0x02	; 2
     168:	fc 01       	movw	r30, r24
     16a:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << TOIE0);
     16c:	8e e6       	ldi	r24, 0x6E	; 110
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	21 e0       	ldi	r18, 0x01	; 1
     172:	fc 01       	movw	r30, r24
     174:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0B);
	//Enable COMPA
	*/
}
     176:	0f 90       	pop	r0
     178:	0f 90       	pop	r0
     17a:	cf 91       	pop	r28
     17c:	df 91       	pop	r29
     17e:	08 95       	ret

00000180 <initInterrupt0>:

void initInterrupt0()
{
     180:	df 93       	push	r29
     182:	cf 93       	push	r28
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
	PORTD |= (1 << PORTD2);
     188:	8b e2       	ldi	r24, 0x2B	; 43
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	2b e2       	ldi	r18, 0x2B	; 43
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	f9 01       	movw	r30, r18
     192:	20 81       	ld	r18, Z
     194:	24 60       	ori	r18, 0x04	; 4
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
	EICRA = 0b00000010;
     19a:	89 e6       	ldi	r24, 0x69	; 105
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	22 e0       	ldi	r18, 0x02	; 2
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
	EIMSK |= (1 << INT0);
     1a4:	8d e3       	ldi	r24, 0x3D	; 61
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	2d e3       	ldi	r18, 0x3D	; 61
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	f9 01       	movw	r30, r18
     1ae:	20 81       	ld	r18, Z
     1b0:	21 60       	ori	r18, 0x01	; 1
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 83       	st	Z, r18
}	
     1b6:	cf 91       	pop	r28
     1b8:	df 91       	pop	r29
     1ba:	08 95       	ret

000001bc <setCycle>:


void setCycle(int dutycycle)
{
     1bc:	df 93       	push	r29
     1be:	cf 93       	push	r28
     1c0:	00 d0       	rcall	.+0      	; 0x1c2 <setCycle+0x6>
     1c2:	cd b7       	in	r28, 0x3d	; 61
     1c4:	de b7       	in	r29, 0x3e	; 62
     1c6:	9a 83       	std	Y+2, r25	; 0x02
     1c8:	89 83       	std	Y+1, r24	; 0x01
	cli();
     1ca:	f8 94       	cli
	OCR0A = dutycycle;
     1cc:	87 e4       	ldi	r24, 0x47	; 71
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	29 81       	ldd	r18, Y+1	; 0x01
     1d2:	fc 01       	movw	r30, r24
     1d4:	20 83       	st	Z, r18
	sei();
     1d6:	78 94       	sei
	return;
}
     1d8:	0f 90       	pop	r0
     1da:	0f 90       	pop	r0
     1dc:	cf 91       	pop	r28
     1de:	df 91       	pop	r29
     1e0:	08 95       	ret

000001e2 <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     1e2:	1f 92       	push	r1
     1e4:	0f 92       	push	r0
     1e6:	0f b6       	in	r0, 0x3f	; 63
     1e8:	0f 92       	push	r0
     1ea:	11 24       	eor	r1, r1
     1ec:	8f 93       	push	r24
     1ee:	9f 93       	push	r25
     1f0:	ef 93       	push	r30
     1f2:	ff 93       	push	r31
     1f4:	df 93       	push	r29
     1f6:	cf 93       	push	r28
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1 << RXC0)) )
     1fc:	00 00       	nop
     1fe:	80 ec       	ldi	r24, 0xC0	; 192
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	fc 01       	movw	r30, r24
     204:	80 81       	ld	r24, Z
     206:	88 23       	and	r24, r24
     208:	d4 f7       	brge	.-12     	; 0x1fe <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	//dim = UDR0;
	rxflag = 1;
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	80 93 0e 01 	sts	0x010E, r24
}
     210:	cf 91       	pop	r28
     212:	df 91       	pop	r29
     214:	ff 91       	pop	r31
     216:	ef 91       	pop	r30
     218:	9f 91       	pop	r25
     21a:	8f 91       	pop	r24
     21c:	0f 90       	pop	r0
     21e:	0f be       	out	0x3f, r0	; 63
     220:	0f 90       	pop	r0
     222:	1f 90       	pop	r1
     224:	18 95       	reti

00000226 <__vector_16>:
 
 
//OLD: 2/15/2012
//ISR(TIMER0_COMPB_vect)
ISR(TIMER0_OVF_vect)
{
     226:	1f 92       	push	r1
     228:	0f 92       	push	r0
     22a:	0f b6       	in	r0, 0x3f	; 63
     22c:	0f 92       	push	r0
     22e:	11 24       	eor	r1, r1
     230:	0f 93       	push	r16
     232:	1f 93       	push	r17
     234:	2f 93       	push	r18
     236:	3f 93       	push	r19
     238:	4f 93       	push	r20
     23a:	5f 93       	push	r21
     23c:	6f 93       	push	r22
     23e:	7f 93       	push	r23
     240:	8f 93       	push	r24
     242:	9f 93       	push	r25
     244:	af 93       	push	r26
     246:	bf 93       	push	r27
     248:	ef 93       	push	r30
     24a:	ff 93       	push	r31
     24c:	df 93       	push	r29
     24e:	cf 93       	push	r28
     250:	cd b7       	in	r28, 0x3d	; 61
     252:	de b7       	in	r29, 0x3e	; 62
     254:	68 97       	sbiw	r28, 0x18	; 24
     256:	de bf       	out	0x3e, r29	; 62
     258:	cd bf       	out	0x3d, r28	; 61
	if( zerocross == 1) 
     25a:	80 91 02 01 	lds	r24, 0x0102
     25e:	81 30       	cpi	r24, 0x01	; 1
     260:	09 f0       	breq	.+2      	; 0x264 <__vector_16+0x3e>
     262:	03 c1       	rjmp	.+518    	; 0x46a <__vector_16+0x244>
	{
		if( count >= dim )
     264:	20 91 0c 01 	lds	r18, 0x010C
     268:	30 91 0d 01 	lds	r19, 0x010D
     26c:	80 91 00 01 	lds	r24, 0x0100
     270:	90 91 01 01 	lds	r25, 0x0101
     274:	28 17       	cp	r18, r24
     276:	39 07       	cpc	r19, r25
     278:	08 f4       	brcc	.+2      	; 0x27c <__vector_16+0x56>
     27a:	ee c0       	rjmp	.+476    	; 0x458 <__vector_16+0x232>
		{
			PORTB |= (1 << PORTB0);
     27c:	85 e2       	ldi	r24, 0x25	; 37
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	25 e2       	ldi	r18, 0x25	; 37
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	f9 01       	movw	r30, r18
     286:	20 81       	ld	r18, Z
     288:	21 60       	ori	r18, 0x01	; 1
     28a:	fc 01       	movw	r30, r24
     28c:	20 83       	st	Z, r18
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	a0 ea       	ldi	r26, 0xA0	; 160
     294:	b0 e4       	ldi	r27, 0x40	; 64
     296:	89 83       	std	Y+1, r24	; 0x01
     298:	9a 83       	std	Y+2, r25	; 0x02
     29a:	ab 83       	std	Y+3, r26	; 0x03
     29c:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     29e:	69 81       	ldd	r22, Y+1	; 0x01
     2a0:	7a 81       	ldd	r23, Y+2	; 0x02
     2a2:	8b 81       	ldd	r24, Y+3	; 0x03
     2a4:	9c 81       	ldd	r25, Y+4	; 0x04
     2a6:	2b ea       	ldi	r18, 0xAB	; 171
     2a8:	3a ea       	ldi	r19, 0xAA	; 170
     2aa:	4a ea       	ldi	r20, 0xAA	; 170
     2ac:	50 e4       	ldi	r21, 0x40	; 64
     2ae:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__mulsf3>
     2b2:	dc 01       	movw	r26, r24
     2b4:	cb 01       	movw	r24, r22
     2b6:	8d 83       	std	Y+5, r24	; 0x05
     2b8:	9e 83       	std	Y+6, r25	; 0x06
     2ba:	af 83       	std	Y+7, r26	; 0x07
     2bc:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     2be:	11 e0       	ldi	r17, 0x01	; 1
     2c0:	6d 81       	ldd	r22, Y+5	; 0x05
     2c2:	7e 81       	ldd	r23, Y+6	; 0x06
     2c4:	8f 81       	ldd	r24, Y+7	; 0x07
     2c6:	98 85       	ldd	r25, Y+8	; 0x08
     2c8:	20 e0       	ldi	r18, 0x00	; 0
     2ca:	30 e0       	ldi	r19, 0x00	; 0
     2cc:	40 e8       	ldi	r20, 0x80	; 128
     2ce:	5f e3       	ldi	r21, 0x3F	; 63
     2d0:	0e 94 82 06 	call	0xd04	; 0xd04 <__ltsf2>
     2d4:	88 23       	and	r24, r24
     2d6:	0c f0       	brlt	.+2      	; 0x2da <__vector_16+0xb4>
     2d8:	10 e0       	ldi	r17, 0x00	; 0
     2da:	11 23       	and	r17, r17
     2dc:	19 f0       	breq	.+6      	; 0x2e4 <__vector_16+0xbe>
		__ticks = 1;
     2de:	81 e0       	ldi	r24, 0x01	; 1
     2e0:	89 87       	std	Y+9, r24	; 0x09
     2e2:	a3 c0       	rjmp	.+326    	; 0x42a <__vector_16+0x204>
	else if (__tmp > 255)
     2e4:	11 e0       	ldi	r17, 0x01	; 1
     2e6:	6d 81       	ldd	r22, Y+5	; 0x05
     2e8:	7e 81       	ldd	r23, Y+6	; 0x06
     2ea:	8f 81       	ldd	r24, Y+7	; 0x07
     2ec:	98 85       	ldd	r25, Y+8	; 0x08
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	4f e7       	ldi	r20, 0x7F	; 127
     2f4:	53 e4       	ldi	r21, 0x43	; 67
     2f6:	0e 94 22 06 	call	0xc44	; 0xc44 <__gtsf2>
     2fa:	18 16       	cp	r1, r24
     2fc:	0c f0       	brlt	.+2      	; 0x300 <__vector_16+0xda>
     2fe:	10 e0       	ldi	r17, 0x00	; 0
     300:	11 23       	and	r17, r17
     302:	09 f4       	brne	.+2      	; 0x306 <__vector_16+0xe0>
     304:	89 c0       	rjmp	.+274    	; 0x418 <__vector_16+0x1f2>
	{
		_delay_ms(__us / 1000.0);
     306:	69 81       	ldd	r22, Y+1	; 0x01
     308:	7a 81       	ldd	r23, Y+2	; 0x02
     30a:	8b 81       	ldd	r24, Y+3	; 0x03
     30c:	9c 81       	ldd	r25, Y+4	; 0x04
     30e:	20 e0       	ldi	r18, 0x00	; 0
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	4a e7       	ldi	r20, 0x7A	; 122
     314:	54 e4       	ldi	r21, 0x44	; 68
     316:	0e 94 74 05 	call	0xae8	; 0xae8 <__divsf3>
     31a:	dc 01       	movw	r26, r24
     31c:	cb 01       	movw	r24, r22
     31e:	8a 87       	std	Y+10, r24	; 0x0a
     320:	9b 87       	std	Y+11, r25	; 0x0b
     322:	ac 87       	std	Y+12, r26	; 0x0c
     324:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     326:	6a 85       	ldd	r22, Y+10	; 0x0a
     328:	7b 85       	ldd	r23, Y+11	; 0x0b
     32a:	8c 85       	ldd	r24, Y+12	; 0x0c
     32c:	9d 85       	ldd	r25, Y+13	; 0x0d
     32e:	20 e0       	ldi	r18, 0x00	; 0
     330:	30 e0       	ldi	r19, 0x00	; 0
     332:	4a e7       	ldi	r20, 0x7A	; 122
     334:	55 e4       	ldi	r21, 0x45	; 69
     336:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__mulsf3>
     33a:	dc 01       	movw	r26, r24
     33c:	cb 01       	movw	r24, r22
     33e:	8e 87       	std	Y+14, r24	; 0x0e
     340:	9f 87       	std	Y+15, r25	; 0x0f
     342:	a8 8b       	std	Y+16, r26	; 0x10
     344:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     346:	11 e0       	ldi	r17, 0x01	; 1
     348:	6e 85       	ldd	r22, Y+14	; 0x0e
     34a:	7f 85       	ldd	r23, Y+15	; 0x0f
     34c:	88 89       	ldd	r24, Y+16	; 0x10
     34e:	99 89       	ldd	r25, Y+17	; 0x11
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	40 e8       	ldi	r20, 0x80	; 128
     356:	5f e3       	ldi	r21, 0x3F	; 63
     358:	0e 94 82 06 	call	0xd04	; 0xd04 <__ltsf2>
     35c:	88 23       	and	r24, r24
     35e:	0c f0       	brlt	.+2      	; 0x362 <__vector_16+0x13c>
     360:	10 e0       	ldi	r17, 0x00	; 0
     362:	11 23       	and	r17, r17
     364:	29 f0       	breq	.+10     	; 0x370 <__vector_16+0x14a>
		__ticks = 1;
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	9b 8b       	std	Y+19, r25	; 0x13
     36c:	8a 8b       	std	Y+18, r24	; 0x12
     36e:	46 c0       	rjmp	.+140    	; 0x3fc <__vector_16+0x1d6>
	else if (__tmp > 65535)
     370:	11 e0       	ldi	r17, 0x01	; 1
     372:	6e 85       	ldd	r22, Y+14	; 0x0e
     374:	7f 85       	ldd	r23, Y+15	; 0x0f
     376:	88 89       	ldd	r24, Y+16	; 0x10
     378:	99 89       	ldd	r25, Y+17	; 0x11
     37a:	20 e0       	ldi	r18, 0x00	; 0
     37c:	3f ef       	ldi	r19, 0xFF	; 255
     37e:	4f e7       	ldi	r20, 0x7F	; 127
     380:	57 e4       	ldi	r21, 0x47	; 71
     382:	0e 94 22 06 	call	0xc44	; 0xc44 <__gtsf2>
     386:	18 16       	cp	r1, r24
     388:	0c f0       	brlt	.+2      	; 0x38c <__vector_16+0x166>
     38a:	10 e0       	ldi	r17, 0x00	; 0
     38c:	11 23       	and	r17, r17
     38e:	61 f1       	breq	.+88     	; 0x3e8 <__vector_16+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     390:	6a 85       	ldd	r22, Y+10	; 0x0a
     392:	7b 85       	ldd	r23, Y+11	; 0x0b
     394:	8c 85       	ldd	r24, Y+12	; 0x0c
     396:	9d 85       	ldd	r25, Y+13	; 0x0d
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	40 e2       	ldi	r20, 0x20	; 32
     39e:	51 e4       	ldi	r21, 0x41	; 65
     3a0:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__mulsf3>
     3a4:	dc 01       	movw	r26, r24
     3a6:	cb 01       	movw	r24, r22
     3a8:	bc 01       	movw	r22, r24
     3aa:	cd 01       	movw	r24, r26
     3ac:	0e 94 a6 02 	call	0x54c	; 0x54c <__fixunssfsi>
     3b0:	dc 01       	movw	r26, r24
     3b2:	cb 01       	movw	r24, r22
     3b4:	9b 8b       	std	Y+19, r25	; 0x13
     3b6:	8a 8b       	std	Y+18, r24	; 0x12
     3b8:	12 c0       	rjmp	.+36     	; 0x3de <__vector_16+0x1b8>
     3ba:	80 e9       	ldi	r24, 0x90	; 144
     3bc:	91 e0       	ldi	r25, 0x01	; 1
     3be:	9d 8b       	std	Y+21, r25	; 0x15
     3c0:	8c 8b       	std	Y+20, r24	; 0x14
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3c2:	8c 89       	ldd	r24, Y+20	; 0x14
     3c4:	9d 89       	ldd	r25, Y+21	; 0x15
     3c6:	8c 01       	movw	r16, r24
     3c8:	c8 01       	movw	r24, r16
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <__vector_16+0x1a4>
     3ce:	8c 01       	movw	r16, r24
     3d0:	1d 8b       	std	Y+21, r17	; 0x15
     3d2:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3d4:	8a 89       	ldd	r24, Y+18	; 0x12
     3d6:	9b 89       	ldd	r25, Y+19	; 0x13
     3d8:	01 97       	sbiw	r24, 0x01	; 1
     3da:	9b 8b       	std	Y+19, r25	; 0x13
     3dc:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3de:	8a 89       	ldd	r24, Y+18	; 0x12
     3e0:	9b 89       	ldd	r25, Y+19	; 0x13
     3e2:	00 97       	sbiw	r24, 0x00	; 0
     3e4:	51 f7       	brne	.-44     	; 0x3ba <__vector_16+0x194>
     3e6:	28 c0       	rjmp	.+80     	; 0x438 <__vector_16+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3e8:	6e 85       	ldd	r22, Y+14	; 0x0e
     3ea:	7f 85       	ldd	r23, Y+15	; 0x0f
     3ec:	88 89       	ldd	r24, Y+16	; 0x10
     3ee:	99 89       	ldd	r25, Y+17	; 0x11
     3f0:	0e 94 a6 02 	call	0x54c	; 0x54c <__fixunssfsi>
     3f4:	dc 01       	movw	r26, r24
     3f6:	cb 01       	movw	r24, r22
     3f8:	9b 8b       	std	Y+19, r25	; 0x13
     3fa:	8a 8b       	std	Y+18, r24	; 0x12
     3fc:	8a 89       	ldd	r24, Y+18	; 0x12
     3fe:	9b 89       	ldd	r25, Y+19	; 0x13
     400:	9f 8b       	std	Y+23, r25	; 0x17
     402:	8e 8b       	std	Y+22, r24	; 0x16
     404:	8e 89       	ldd	r24, Y+22	; 0x16
     406:	9f 89       	ldd	r25, Y+23	; 0x17
     408:	8c 01       	movw	r16, r24
     40a:	f8 01       	movw	r30, r16
     40c:	31 97       	sbiw	r30, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <__vector_16+0x1e6>
     410:	8f 01       	movw	r16, r30
     412:	1f 8b       	std	Y+23, r17	; 0x17
     414:	0e 8b       	std	Y+22, r16	; 0x16
     416:	10 c0       	rjmp	.+32     	; 0x438 <__vector_16+0x212>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     418:	6d 81       	ldd	r22, Y+5	; 0x05
     41a:	7e 81       	ldd	r23, Y+6	; 0x06
     41c:	8f 81       	ldd	r24, Y+7	; 0x07
     41e:	98 85       	ldd	r25, Y+8	; 0x08
     420:	0e 94 a6 02 	call	0x54c	; 0x54c <__fixunssfsi>
     424:	dc 01       	movw	r26, r24
     426:	cb 01       	movw	r24, r22
     428:	89 87       	std	Y+9, r24	; 0x09
     42a:	89 85       	ldd	r24, Y+9	; 0x09
     42c:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     42e:	88 8d       	ldd	r24, Y+24	; 0x18
     430:	18 2f       	mov	r17, r24
     432:	1a 95       	dec	r17
     434:	f1 f7       	brne	.-4      	; 0x432 <__vector_16+0x20c>
     436:	18 8f       	std	Y+24, r17	; 0x18
			_delay_us( 5 );
			PORTB &= ~(1 << PORTB0);
     438:	85 e2       	ldi	r24, 0x25	; 37
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	25 e2       	ldi	r18, 0x25	; 37
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	f9 01       	movw	r30, r18
     442:	20 81       	ld	r18, Z
     444:	2e 7f       	andi	r18, 0xFE	; 254
     446:	fc 01       	movw	r30, r24
     448:	20 83       	st	Z, r18
			count = 0;
     44a:	10 92 0d 01 	sts	0x010D, r1
     44e:	10 92 0c 01 	sts	0x010C, r1
			zerocross = 0;
     452:	10 92 02 01 	sts	0x0102, r1
     456:	09 c0       	rjmp	.+18     	; 0x46a <__vector_16+0x244>
		}
		else
		{
			
			count = count + 1;
     458:	80 91 0c 01 	lds	r24, 0x010C
     45c:	90 91 0d 01 	lds	r25, 0x010D
     460:	01 96       	adiw	r24, 0x01	; 1
     462:	90 93 0d 01 	sts	0x010D, r25
     466:	80 93 0c 01 	sts	0x010C, r24
		}
	}
}
     46a:	68 96       	adiw	r28, 0x18	; 24
     46c:	de bf       	out	0x3e, r29	; 62
     46e:	cd bf       	out	0x3d, r28	; 61
     470:	cf 91       	pop	r28
     472:	df 91       	pop	r29
     474:	ff 91       	pop	r31
     476:	ef 91       	pop	r30
     478:	bf 91       	pop	r27
     47a:	af 91       	pop	r26
     47c:	9f 91       	pop	r25
     47e:	8f 91       	pop	r24
     480:	7f 91       	pop	r23
     482:	6f 91       	pop	r22
     484:	5f 91       	pop	r21
     486:	4f 91       	pop	r20
     488:	3f 91       	pop	r19
     48a:	2f 91       	pop	r18
     48c:	1f 91       	pop	r17
     48e:	0f 91       	pop	r16
     490:	0f 90       	pop	r0
     492:	0f be       	out	0x3f, r0	; 63
     494:	0f 90       	pop	r0
     496:	1f 90       	pop	r1
     498:	18 95       	reti

0000049a <__vector_1>:

ISR(INT0_vect)
{
     49a:	1f 92       	push	r1
     49c:	0f 92       	push	r0
     49e:	0f b6       	in	r0, 0x3f	; 63
     4a0:	0f 92       	push	r0
     4a2:	11 24       	eor	r1, r1
     4a4:	8f 93       	push	r24
     4a6:	df 93       	push	r29
     4a8:	cf 93       	push	r28
     4aa:	cd b7       	in	r28, 0x3d	; 61
     4ac:	de b7       	in	r29, 0x3e	; 62
	zerocross = 1;
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	80 93 02 01 	sts	0x0102, r24
     4b4:	cf 91       	pop	r28
     4b6:	df 91       	pop	r29
     4b8:	8f 91       	pop	r24
     4ba:	0f 90       	pop	r0
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	0f 90       	pop	r0
     4c0:	1f 90       	pop	r1
     4c2:	18 95       	reti

000004c4 <USART_Init>:
 */ 

#include <avr\io.h> 

void USART_Init( unsigned int ubrr)
{
     4c4:	df 93       	push	r29
     4c6:	cf 93       	push	r28
     4c8:	00 d0       	rcall	.+0      	; 0x4ca <USART_Init+0x6>
     4ca:	cd b7       	in	r28, 0x3d	; 61
     4cc:	de b7       	in	r29, 0x3e	; 62
     4ce:	9a 83       	std	Y+2, r25	; 0x02
     4d0:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     4d2:	85 ec       	ldi	r24, 0xC5	; 197
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	29 81       	ldd	r18, Y+1	; 0x01
     4d8:	3a 81       	ldd	r19, Y+2	; 0x02
     4da:	23 2f       	mov	r18, r19
     4dc:	33 27       	eor	r19, r19
     4de:	fc 01       	movw	r30, r24
     4e0:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     4e2:	84 ec       	ldi	r24, 0xC4	; 196
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	29 81       	ldd	r18, Y+1	; 0x01
     4e8:	fc 01       	movw	r30, r24
     4ea:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     4ec:	81 ec       	ldi	r24, 0xC1	; 193
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	28 e9       	ldi	r18, 0x98	; 152
     4f2:	fc 01       	movw	r30, r24
     4f4:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     4f6:	82 ec       	ldi	r24, 0xC2	; 194
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	26 e0       	ldi	r18, 0x06	; 6
     4fc:	fc 01       	movw	r30, r24
     4fe:	20 83       	st	Z, r18
}
     500:	0f 90       	pop	r0
     502:	0f 90       	pop	r0
     504:	cf 91       	pop	r28
     506:	df 91       	pop	r29
     508:	08 95       	ret

0000050a <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     50a:	df 93       	push	r29
     50c:	cf 93       	push	r28
     50e:	0f 92       	push	r0
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
     514:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     516:	00 00       	nop
     518:	80 ec       	ldi	r24, 0xC0	; 192
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	fc 01       	movw	r30, r24
     51e:	80 81       	ld	r24, Z
     520:	88 2f       	mov	r24, r24
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	80 72       	andi	r24, 0x20	; 32
     526:	90 70       	andi	r25, 0x00	; 0
     528:	00 97       	sbiw	r24, 0x00	; 0
     52a:	b1 f3       	breq	.-20     	; 0x518 <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     52c:	86 ec       	ldi	r24, 0xC6	; 198
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	29 81       	ldd	r18, Y+1	; 0x01
     532:	fc 01       	movw	r30, r24
     534:	20 83       	st	Z, r18
}
     536:	0f 90       	pop	r0
     538:	cf 91       	pop	r28
     53a:	df 91       	pop	r29
     53c:	08 95       	ret

0000053e <USART_Receive>:


unsigned char USART_Receive( void )
{
     53e:	df 93       	push	r29
     540:	cf 93       	push	r28
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
	
}
     546:	cf 91       	pop	r28
     548:	df 91       	pop	r29
     54a:	08 95       	ret

0000054c <__fixunssfsi>:
     54c:	ef 92       	push	r14
     54e:	ff 92       	push	r15
     550:	0f 93       	push	r16
     552:	1f 93       	push	r17
     554:	7b 01       	movw	r14, r22
     556:	8c 01       	movw	r16, r24
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	40 e0       	ldi	r20, 0x00	; 0
     55e:	5f e4       	ldi	r21, 0x4F	; 79
     560:	0e 94 52 06 	call	0xca4	; 0xca4 <__gesf2>
     564:	87 fd       	sbrc	r24, 7
     566:	11 c0       	rjmp	.+34     	; 0x58a <__fixunssfsi+0x3e>
     568:	c8 01       	movw	r24, r16
     56a:	b7 01       	movw	r22, r14
     56c:	20 e0       	ldi	r18, 0x00	; 0
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	40 e0       	ldi	r20, 0x00	; 0
     572:	5f e4       	ldi	r21, 0x4F	; 79
     574:	0e 94 49 04 	call	0x892	; 0x892 <__subsf3>
     578:	0e 94 b2 06 	call	0xd64	; 0xd64 <__fixsfsi>
     57c:	9b 01       	movw	r18, r22
     57e:	ac 01       	movw	r20, r24
     580:	20 50       	subi	r18, 0x00	; 0
     582:	30 40       	sbci	r19, 0x00	; 0
     584:	40 40       	sbci	r20, 0x00	; 0
     586:	50 48       	sbci	r21, 0x80	; 128
     588:	06 c0       	rjmp	.+12     	; 0x596 <__fixunssfsi+0x4a>
     58a:	c8 01       	movw	r24, r16
     58c:	b7 01       	movw	r22, r14
     58e:	0e 94 b2 06 	call	0xd64	; 0xd64 <__fixsfsi>
     592:	9b 01       	movw	r18, r22
     594:	ac 01       	movw	r20, r24
     596:	b9 01       	movw	r22, r18
     598:	ca 01       	movw	r24, r20
     59a:	1f 91       	pop	r17
     59c:	0f 91       	pop	r16
     59e:	ff 90       	pop	r15
     5a0:	ef 90       	pop	r14
     5a2:	08 95       	ret

000005a4 <_fpadd_parts>:
     5a4:	a0 e0       	ldi	r26, 0x00	; 0
     5a6:	b0 e0       	ldi	r27, 0x00	; 0
     5a8:	e8 ed       	ldi	r30, 0xD8	; 216
     5aa:	f2 e0       	ldi	r31, 0x02	; 2
     5ac:	0c 94 98 08 	jmp	0x1130	; 0x1130 <__prologue_saves__+0x8>
     5b0:	fc 01       	movw	r30, r24
     5b2:	ea 01       	movw	r28, r20
     5b4:	80 81       	ld	r24, Z
     5b6:	82 30       	cpi	r24, 0x02	; 2
     5b8:	08 f4       	brcc	.+2      	; 0x5bc <_fpadd_parts+0x18>
     5ba:	38 c1       	rjmp	.+624    	; 0x82c <_fpadd_parts+0x288>
     5bc:	db 01       	movw	r26, r22
     5be:	9c 91       	ld	r25, X
     5c0:	92 30       	cpi	r25, 0x02	; 2
     5c2:	08 f4       	brcc	.+2      	; 0x5c6 <_fpadd_parts+0x22>
     5c4:	30 c1       	rjmp	.+608    	; 0x826 <_fpadd_parts+0x282>
     5c6:	84 30       	cpi	r24, 0x04	; 4
     5c8:	59 f4       	brne	.+22     	; 0x5e0 <_fpadd_parts+0x3c>
     5ca:	94 30       	cpi	r25, 0x04	; 4
     5cc:	09 f0       	breq	.+2      	; 0x5d0 <_fpadd_parts+0x2c>
     5ce:	2e c1       	rjmp	.+604    	; 0x82c <_fpadd_parts+0x288>
     5d0:	91 81       	ldd	r25, Z+1	; 0x01
     5d2:	11 96       	adiw	r26, 0x01	; 1
     5d4:	8c 91       	ld	r24, X
     5d6:	11 97       	sbiw	r26, 0x01	; 1
     5d8:	98 17       	cp	r25, r24
     5da:	09 f0       	breq	.+2      	; 0x5de <_fpadd_parts+0x3a>
     5dc:	21 c1       	rjmp	.+578    	; 0x820 <_fpadd_parts+0x27c>
     5de:	26 c1       	rjmp	.+588    	; 0x82c <_fpadd_parts+0x288>
     5e0:	94 30       	cpi	r25, 0x04	; 4
     5e2:	09 f4       	brne	.+2      	; 0x5e6 <_fpadd_parts+0x42>
     5e4:	20 c1       	rjmp	.+576    	; 0x826 <_fpadd_parts+0x282>
     5e6:	92 30       	cpi	r25, 0x02	; 2
     5e8:	b1 f4       	brne	.+44     	; 0x616 <_fpadd_parts+0x72>
     5ea:	82 30       	cpi	r24, 0x02	; 2
     5ec:	09 f0       	breq	.+2      	; 0x5f0 <_fpadd_parts+0x4c>
     5ee:	1e c1       	rjmp	.+572    	; 0x82c <_fpadd_parts+0x288>
     5f0:	ca 01       	movw	r24, r20
     5f2:	af 01       	movw	r20, r30
     5f4:	28 e0       	ldi	r18, 0x08	; 8
     5f6:	da 01       	movw	r26, r20
     5f8:	0d 90       	ld	r0, X+
     5fa:	ad 01       	movw	r20, r26
     5fc:	dc 01       	movw	r26, r24
     5fe:	0d 92       	st	X+, r0
     600:	cd 01       	movw	r24, r26
     602:	21 50       	subi	r18, 0x01	; 1
     604:	c1 f7       	brne	.-16     	; 0x5f6 <_fpadd_parts+0x52>
     606:	db 01       	movw	r26, r22
     608:	11 96       	adiw	r26, 0x01	; 1
     60a:	8c 91       	ld	r24, X
     60c:	11 97       	sbiw	r26, 0x01	; 1
     60e:	91 81       	ldd	r25, Z+1	; 0x01
     610:	89 23       	and	r24, r25
     612:	89 83       	std	Y+1, r24	; 0x01
     614:	0a c1       	rjmp	.+532    	; 0x82a <_fpadd_parts+0x286>
     616:	82 30       	cpi	r24, 0x02	; 2
     618:	09 f4       	brne	.+2      	; 0x61c <_fpadd_parts+0x78>
     61a:	05 c1       	rjmp	.+522    	; 0x826 <_fpadd_parts+0x282>
     61c:	c2 80       	ldd	r12, Z+2	; 0x02
     61e:	d3 80       	ldd	r13, Z+3	; 0x03
     620:	db 01       	movw	r26, r22
     622:	12 96       	adiw	r26, 0x02	; 2
     624:	6d 90       	ld	r6, X+
     626:	7c 90       	ld	r7, X
     628:	13 97       	sbiw	r26, 0x03	; 3
     62a:	24 81       	ldd	r18, Z+4	; 0x04
     62c:	35 81       	ldd	r19, Z+5	; 0x05
     62e:	46 81       	ldd	r20, Z+6	; 0x06
     630:	57 81       	ldd	r21, Z+7	; 0x07
     632:	14 96       	adiw	r26, 0x04	; 4
     634:	ed 90       	ld	r14, X+
     636:	fd 90       	ld	r15, X+
     638:	0d 91       	ld	r16, X+
     63a:	1c 91       	ld	r17, X
     63c:	17 97       	sbiw	r26, 0x07	; 7
     63e:	c6 01       	movw	r24, r12
     640:	86 19       	sub	r24, r6
     642:	97 09       	sbc	r25, r7
     644:	5c 01       	movw	r10, r24
     646:	97 ff       	sbrs	r25, 7
     648:	04 c0       	rjmp	.+8      	; 0x652 <_fpadd_parts+0xae>
     64a:	aa 24       	eor	r10, r10
     64c:	bb 24       	eor	r11, r11
     64e:	a8 1a       	sub	r10, r24
     650:	b9 0a       	sbc	r11, r25
     652:	b0 e2       	ldi	r27, 0x20	; 32
     654:	ab 16       	cp	r10, r27
     656:	b1 04       	cpc	r11, r1
     658:	0c f0       	brlt	.+2      	; 0x65c <_fpadd_parts+0xb8>
     65a:	61 c0       	rjmp	.+194    	; 0x71e <_fpadd_parts+0x17a>
     65c:	18 16       	cp	r1, r24
     65e:	19 06       	cpc	r1, r25
     660:	6c f5       	brge	.+90     	; 0x6bc <_fpadd_parts+0x118>
     662:	37 01       	movw	r6, r14
     664:	48 01       	movw	r8, r16
     666:	0a 2c       	mov	r0, r10
     668:	04 c0       	rjmp	.+8      	; 0x672 <_fpadd_parts+0xce>
     66a:	96 94       	lsr	r9
     66c:	87 94       	ror	r8
     66e:	77 94       	ror	r7
     670:	67 94       	ror	r6
     672:	0a 94       	dec	r0
     674:	d2 f7       	brpl	.-12     	; 0x66a <_fpadd_parts+0xc6>
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	a0 e0       	ldi	r26, 0x00	; 0
     67c:	b0 e0       	ldi	r27, 0x00	; 0
     67e:	0a 2c       	mov	r0, r10
     680:	04 c0       	rjmp	.+8      	; 0x68a <_fpadd_parts+0xe6>
     682:	88 0f       	add	r24, r24
     684:	99 1f       	adc	r25, r25
     686:	aa 1f       	adc	r26, r26
     688:	bb 1f       	adc	r27, r27
     68a:	0a 94       	dec	r0
     68c:	d2 f7       	brpl	.-12     	; 0x682 <_fpadd_parts+0xde>
     68e:	01 97       	sbiw	r24, 0x01	; 1
     690:	a1 09       	sbc	r26, r1
     692:	b1 09       	sbc	r27, r1
     694:	8e 21       	and	r24, r14
     696:	9f 21       	and	r25, r15
     698:	a0 23       	and	r26, r16
     69a:	b1 23       	and	r27, r17
     69c:	ee 24       	eor	r14, r14
     69e:	ff 24       	eor	r15, r15
     6a0:	87 01       	movw	r16, r14
     6a2:	e3 94       	inc	r14
     6a4:	00 97       	sbiw	r24, 0x00	; 0
     6a6:	a1 05       	cpc	r26, r1
     6a8:	b1 05       	cpc	r27, r1
     6aa:	19 f4       	brne	.+6      	; 0x6b2 <_fpadd_parts+0x10e>
     6ac:	ee 24       	eor	r14, r14
     6ae:	ff 24       	eor	r15, r15
     6b0:	87 01       	movw	r16, r14
     6b2:	e6 28       	or	r14, r6
     6b4:	f7 28       	or	r15, r7
     6b6:	08 29       	or	r16, r8
     6b8:	19 29       	or	r17, r9
     6ba:	3c c0       	rjmp	.+120    	; 0x734 <_fpadd_parts+0x190>
     6bc:	00 97       	sbiw	r24, 0x00	; 0
     6be:	d1 f1       	breq	.+116    	; 0x734 <_fpadd_parts+0x190>
     6c0:	ca 0c       	add	r12, r10
     6c2:	db 1c       	adc	r13, r11
     6c4:	39 01       	movw	r6, r18
     6c6:	4a 01       	movw	r8, r20
     6c8:	0a 2c       	mov	r0, r10
     6ca:	04 c0       	rjmp	.+8      	; 0x6d4 <_fpadd_parts+0x130>
     6cc:	96 94       	lsr	r9
     6ce:	87 94       	ror	r8
     6d0:	77 94       	ror	r7
     6d2:	67 94       	ror	r6
     6d4:	0a 94       	dec	r0
     6d6:	d2 f7       	brpl	.-12     	; 0x6cc <_fpadd_parts+0x128>
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	a0 e0       	ldi	r26, 0x00	; 0
     6de:	b0 e0       	ldi	r27, 0x00	; 0
     6e0:	0a 2c       	mov	r0, r10
     6e2:	04 c0       	rjmp	.+8      	; 0x6ec <_fpadd_parts+0x148>
     6e4:	88 0f       	add	r24, r24
     6e6:	99 1f       	adc	r25, r25
     6e8:	aa 1f       	adc	r26, r26
     6ea:	bb 1f       	adc	r27, r27
     6ec:	0a 94       	dec	r0
     6ee:	d2 f7       	brpl	.-12     	; 0x6e4 <_fpadd_parts+0x140>
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	a1 09       	sbc	r26, r1
     6f4:	b1 09       	sbc	r27, r1
     6f6:	82 23       	and	r24, r18
     6f8:	93 23       	and	r25, r19
     6fa:	a4 23       	and	r26, r20
     6fc:	b5 23       	and	r27, r21
     6fe:	21 e0       	ldi	r18, 0x01	; 1
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	40 e0       	ldi	r20, 0x00	; 0
     704:	50 e0       	ldi	r21, 0x00	; 0
     706:	00 97       	sbiw	r24, 0x00	; 0
     708:	a1 05       	cpc	r26, r1
     70a:	b1 05       	cpc	r27, r1
     70c:	19 f4       	brne	.+6      	; 0x714 <_fpadd_parts+0x170>
     70e:	20 e0       	ldi	r18, 0x00	; 0
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	a9 01       	movw	r20, r18
     714:	26 29       	or	r18, r6
     716:	37 29       	or	r19, r7
     718:	48 29       	or	r20, r8
     71a:	59 29       	or	r21, r9
     71c:	0b c0       	rjmp	.+22     	; 0x734 <_fpadd_parts+0x190>
     71e:	6c 14       	cp	r6, r12
     720:	7d 04       	cpc	r7, r13
     722:	24 f4       	brge	.+8      	; 0x72c <_fpadd_parts+0x188>
     724:	ee 24       	eor	r14, r14
     726:	ff 24       	eor	r15, r15
     728:	87 01       	movw	r16, r14
     72a:	04 c0       	rjmp	.+8      	; 0x734 <_fpadd_parts+0x190>
     72c:	63 01       	movw	r12, r6
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	30 e0       	ldi	r19, 0x00	; 0
     732:	a9 01       	movw	r20, r18
     734:	81 81       	ldd	r24, Z+1	; 0x01
     736:	fb 01       	movw	r30, r22
     738:	91 81       	ldd	r25, Z+1	; 0x01
     73a:	89 17       	cp	r24, r25
     73c:	09 f4       	brne	.+2      	; 0x740 <_fpadd_parts+0x19c>
     73e:	45 c0       	rjmp	.+138    	; 0x7ca <_fpadd_parts+0x226>
     740:	88 23       	and	r24, r24
     742:	49 f0       	breq	.+18     	; 0x756 <_fpadd_parts+0x1b2>
     744:	d8 01       	movw	r26, r16
     746:	c7 01       	movw	r24, r14
     748:	82 1b       	sub	r24, r18
     74a:	93 0b       	sbc	r25, r19
     74c:	a4 0b       	sbc	r26, r20
     74e:	b5 0b       	sbc	r27, r21
     750:	9c 01       	movw	r18, r24
     752:	ad 01       	movw	r20, r26
     754:	04 c0       	rjmp	.+8      	; 0x75e <_fpadd_parts+0x1ba>
     756:	2e 19       	sub	r18, r14
     758:	3f 09       	sbc	r19, r15
     75a:	40 0b       	sbc	r20, r16
     75c:	51 0b       	sbc	r21, r17
     75e:	57 fd       	sbrc	r21, 7
     760:	04 c0       	rjmp	.+8      	; 0x76a <_fpadd_parts+0x1c6>
     762:	19 82       	std	Y+1, r1	; 0x01
     764:	db 82       	std	Y+3, r13	; 0x03
     766:	ca 82       	std	Y+2, r12	; 0x02
     768:	0b c0       	rjmp	.+22     	; 0x780 <_fpadd_parts+0x1dc>
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	89 83       	std	Y+1, r24	; 0x01
     76e:	db 82       	std	Y+3, r13	; 0x03
     770:	ca 82       	std	Y+2, r12	; 0x02
     772:	50 95       	com	r21
     774:	40 95       	com	r20
     776:	30 95       	com	r19
     778:	21 95       	neg	r18
     77a:	3f 4f       	sbci	r19, 0xFF	; 255
     77c:	4f 4f       	sbci	r20, 0xFF	; 255
     77e:	5f 4f       	sbci	r21, 0xFF	; 255
     780:	2c 83       	std	Y+4, r18	; 0x04
     782:	3d 83       	std	Y+5, r19	; 0x05
     784:	4e 83       	std	Y+6, r20	; 0x06
     786:	5f 83       	std	Y+7, r21	; 0x07
     788:	0d c0       	rjmp	.+26     	; 0x7a4 <_fpadd_parts+0x200>
     78a:	88 0f       	add	r24, r24
     78c:	99 1f       	adc	r25, r25
     78e:	aa 1f       	adc	r26, r26
     790:	bb 1f       	adc	r27, r27
     792:	8c 83       	std	Y+4, r24	; 0x04
     794:	9d 83       	std	Y+5, r25	; 0x05
     796:	ae 83       	std	Y+6, r26	; 0x06
     798:	bf 83       	std	Y+7, r27	; 0x07
     79a:	8a 81       	ldd	r24, Y+2	; 0x02
     79c:	9b 81       	ldd	r25, Y+3	; 0x03
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	9b 83       	std	Y+3, r25	; 0x03
     7a2:	8a 83       	std	Y+2, r24	; 0x02
     7a4:	8c 81       	ldd	r24, Y+4	; 0x04
     7a6:	9d 81       	ldd	r25, Y+5	; 0x05
     7a8:	ae 81       	ldd	r26, Y+6	; 0x06
     7aa:	bf 81       	ldd	r27, Y+7	; 0x07
     7ac:	9c 01       	movw	r18, r24
     7ae:	ad 01       	movw	r20, r26
     7b0:	21 50       	subi	r18, 0x01	; 1
     7b2:	30 40       	sbci	r19, 0x00	; 0
     7b4:	40 40       	sbci	r20, 0x00	; 0
     7b6:	50 40       	sbci	r21, 0x00	; 0
     7b8:	2f 3f       	cpi	r18, 0xFF	; 255
     7ba:	ef ef       	ldi	r30, 0xFF	; 255
     7bc:	3e 07       	cpc	r19, r30
     7be:	ef ef       	ldi	r30, 0xFF	; 255
     7c0:	4e 07       	cpc	r20, r30
     7c2:	ef e3       	ldi	r30, 0x3F	; 63
     7c4:	5e 07       	cpc	r21, r30
     7c6:	08 f3       	brcs	.-62     	; 0x78a <_fpadd_parts+0x1e6>
     7c8:	0b c0       	rjmp	.+22     	; 0x7e0 <_fpadd_parts+0x23c>
     7ca:	89 83       	std	Y+1, r24	; 0x01
     7cc:	db 82       	std	Y+3, r13	; 0x03
     7ce:	ca 82       	std	Y+2, r12	; 0x02
     7d0:	2e 0d       	add	r18, r14
     7d2:	3f 1d       	adc	r19, r15
     7d4:	40 1f       	adc	r20, r16
     7d6:	51 1f       	adc	r21, r17
     7d8:	2c 83       	std	Y+4, r18	; 0x04
     7da:	3d 83       	std	Y+5, r19	; 0x05
     7dc:	4e 83       	std	Y+6, r20	; 0x06
     7de:	5f 83       	std	Y+7, r21	; 0x07
     7e0:	83 e0       	ldi	r24, 0x03	; 3
     7e2:	88 83       	st	Y, r24
     7e4:	2c 81       	ldd	r18, Y+4	; 0x04
     7e6:	3d 81       	ldd	r19, Y+5	; 0x05
     7e8:	4e 81       	ldd	r20, Y+6	; 0x06
     7ea:	5f 81       	ldd	r21, Y+7	; 0x07
     7ec:	57 ff       	sbrs	r21, 7
     7ee:	1d c0       	rjmp	.+58     	; 0x82a <_fpadd_parts+0x286>
     7f0:	da 01       	movw	r26, r20
     7f2:	c9 01       	movw	r24, r18
     7f4:	81 70       	andi	r24, 0x01	; 1
     7f6:	90 70       	andi	r25, 0x00	; 0
     7f8:	a0 70       	andi	r26, 0x00	; 0
     7fa:	b0 70       	andi	r27, 0x00	; 0
     7fc:	56 95       	lsr	r21
     7fe:	47 95       	ror	r20
     800:	37 95       	ror	r19
     802:	27 95       	ror	r18
     804:	82 2b       	or	r24, r18
     806:	93 2b       	or	r25, r19
     808:	a4 2b       	or	r26, r20
     80a:	b5 2b       	or	r27, r21
     80c:	8c 83       	std	Y+4, r24	; 0x04
     80e:	9d 83       	std	Y+5, r25	; 0x05
     810:	ae 83       	std	Y+6, r26	; 0x06
     812:	bf 83       	std	Y+7, r27	; 0x07
     814:	8a 81       	ldd	r24, Y+2	; 0x02
     816:	9b 81       	ldd	r25, Y+3	; 0x03
     818:	01 96       	adiw	r24, 0x01	; 1
     81a:	9b 83       	std	Y+3, r25	; 0x03
     81c:	8a 83       	std	Y+2, r24	; 0x02
     81e:	05 c0       	rjmp	.+10     	; 0x82a <_fpadd_parts+0x286>
     820:	e3 e0       	ldi	r30, 0x03	; 3
     822:	f1 e0       	ldi	r31, 0x01	; 1
     824:	03 c0       	rjmp	.+6      	; 0x82c <_fpadd_parts+0x288>
     826:	fb 01       	movw	r30, r22
     828:	01 c0       	rjmp	.+2      	; 0x82c <_fpadd_parts+0x288>
     82a:	fe 01       	movw	r30, r28
     82c:	cf 01       	movw	r24, r30
     82e:	cd b7       	in	r28, 0x3d	; 61
     830:	de b7       	in	r29, 0x3e	; 62
     832:	ee e0       	ldi	r30, 0x0E	; 14
     834:	0c 94 b4 08 	jmp	0x1168	; 0x1168 <__epilogue_restores__+0x8>

00000838 <__addsf3>:
     838:	a0 e2       	ldi	r26, 0x20	; 32
     83a:	b0 e0       	ldi	r27, 0x00	; 0
     83c:	e2 e2       	ldi	r30, 0x22	; 34
     83e:	f4 e0       	ldi	r31, 0x04	; 4
     840:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__prologue_saves__+0x18>
     844:	69 83       	std	Y+1, r22	; 0x01
     846:	7a 83       	std	Y+2, r23	; 0x02
     848:	8b 83       	std	Y+3, r24	; 0x03
     84a:	9c 83       	std	Y+4, r25	; 0x04
     84c:	2d 83       	std	Y+5, r18	; 0x05
     84e:	3e 83       	std	Y+6, r19	; 0x06
     850:	4f 83       	std	Y+7, r20	; 0x07
     852:	58 87       	std	Y+8, r21	; 0x08
     854:	89 e0       	ldi	r24, 0x09	; 9
     856:	e8 2e       	mov	r14, r24
     858:	f1 2c       	mov	r15, r1
     85a:	ec 0e       	add	r14, r28
     85c:	fd 1e       	adc	r15, r29
     85e:	ce 01       	movw	r24, r28
     860:	01 96       	adiw	r24, 0x01	; 1
     862:	b7 01       	movw	r22, r14
     864:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     868:	8e 01       	movw	r16, r28
     86a:	0f 5e       	subi	r16, 0xEF	; 239
     86c:	1f 4f       	sbci	r17, 0xFF	; 255
     86e:	ce 01       	movw	r24, r28
     870:	05 96       	adiw	r24, 0x05	; 5
     872:	b8 01       	movw	r22, r16
     874:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     878:	c7 01       	movw	r24, r14
     87a:	b8 01       	movw	r22, r16
     87c:	ae 01       	movw	r20, r28
     87e:	47 5e       	subi	r20, 0xE7	; 231
     880:	5f 4f       	sbci	r21, 0xFF	; 255
     882:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <_fpadd_parts>
     886:	0e 94 04 07 	call	0xe08	; 0xe08 <__pack_f>
     88a:	a0 96       	adiw	r28, 0x20	; 32
     88c:	e6 e0       	ldi	r30, 0x06	; 6
     88e:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__epilogue_restores__+0x18>

00000892 <__subsf3>:
     892:	a0 e2       	ldi	r26, 0x20	; 32
     894:	b0 e0       	ldi	r27, 0x00	; 0
     896:	ef e4       	ldi	r30, 0x4F	; 79
     898:	f4 e0       	ldi	r31, 0x04	; 4
     89a:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__prologue_saves__+0x18>
     89e:	69 83       	std	Y+1, r22	; 0x01
     8a0:	7a 83       	std	Y+2, r23	; 0x02
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	9c 83       	std	Y+4, r25	; 0x04
     8a6:	2d 83       	std	Y+5, r18	; 0x05
     8a8:	3e 83       	std	Y+6, r19	; 0x06
     8aa:	4f 83       	std	Y+7, r20	; 0x07
     8ac:	58 87       	std	Y+8, r21	; 0x08
     8ae:	8e 01       	movw	r16, r28
     8b0:	07 5f       	subi	r16, 0xF7	; 247
     8b2:	1f 4f       	sbci	r17, 0xFF	; 255
     8b4:	ce 01       	movw	r24, r28
     8b6:	01 96       	adiw	r24, 0x01	; 1
     8b8:	b8 01       	movw	r22, r16
     8ba:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     8be:	91 e1       	ldi	r25, 0x11	; 17
     8c0:	e9 2e       	mov	r14, r25
     8c2:	f1 2c       	mov	r15, r1
     8c4:	ec 0e       	add	r14, r28
     8c6:	fd 1e       	adc	r15, r29
     8c8:	ce 01       	movw	r24, r28
     8ca:	05 96       	adiw	r24, 0x05	; 5
     8cc:	b7 01       	movw	r22, r14
     8ce:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     8d2:	8a 89       	ldd	r24, Y+18	; 0x12
     8d4:	91 e0       	ldi	r25, 0x01	; 1
     8d6:	89 27       	eor	r24, r25
     8d8:	8a 8b       	std	Y+18, r24	; 0x12
     8da:	c8 01       	movw	r24, r16
     8dc:	b7 01       	movw	r22, r14
     8de:	ae 01       	movw	r20, r28
     8e0:	47 5e       	subi	r20, 0xE7	; 231
     8e2:	5f 4f       	sbci	r21, 0xFF	; 255
     8e4:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <_fpadd_parts>
     8e8:	0e 94 04 07 	call	0xe08	; 0xe08 <__pack_f>
     8ec:	a0 96       	adiw	r28, 0x20	; 32
     8ee:	e6 e0       	ldi	r30, 0x06	; 6
     8f0:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__epilogue_restores__+0x18>

000008f4 <__mulsf3>:
     8f4:	a0 e2       	ldi	r26, 0x20	; 32
     8f6:	b0 e0       	ldi	r27, 0x00	; 0
     8f8:	e0 e8       	ldi	r30, 0x80	; 128
     8fa:	f4 e0       	ldi	r31, 0x04	; 4
     8fc:	0c 94 94 08 	jmp	0x1128	; 0x1128 <__prologue_saves__>
     900:	69 83       	std	Y+1, r22	; 0x01
     902:	7a 83       	std	Y+2, r23	; 0x02
     904:	8b 83       	std	Y+3, r24	; 0x03
     906:	9c 83       	std	Y+4, r25	; 0x04
     908:	2d 83       	std	Y+5, r18	; 0x05
     90a:	3e 83       	std	Y+6, r19	; 0x06
     90c:	4f 83       	std	Y+7, r20	; 0x07
     90e:	58 87       	std	Y+8, r21	; 0x08
     910:	ce 01       	movw	r24, r28
     912:	01 96       	adiw	r24, 0x01	; 1
     914:	be 01       	movw	r22, r28
     916:	67 5f       	subi	r22, 0xF7	; 247
     918:	7f 4f       	sbci	r23, 0xFF	; 255
     91a:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     91e:	ce 01       	movw	r24, r28
     920:	05 96       	adiw	r24, 0x05	; 5
     922:	be 01       	movw	r22, r28
     924:	6f 5e       	subi	r22, 0xEF	; 239
     926:	7f 4f       	sbci	r23, 0xFF	; 255
     928:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     92c:	99 85       	ldd	r25, Y+9	; 0x09
     92e:	92 30       	cpi	r25, 0x02	; 2
     930:	78 f0       	brcs	.+30     	; 0x950 <__stack+0x51>
     932:	89 89       	ldd	r24, Y+17	; 0x11
     934:	82 30       	cpi	r24, 0x02	; 2
     936:	c0 f0       	brcs	.+48     	; 0x968 <__stack+0x69>
     938:	94 30       	cpi	r25, 0x04	; 4
     93a:	19 f4       	brne	.+6      	; 0x942 <__stack+0x43>
     93c:	82 30       	cpi	r24, 0x02	; 2
     93e:	41 f4       	brne	.+16     	; 0x950 <__stack+0x51>
     940:	cb c0       	rjmp	.+406    	; 0xad8 <__stack+0x1d9>
     942:	84 30       	cpi	r24, 0x04	; 4
     944:	19 f4       	brne	.+6      	; 0x94c <__stack+0x4d>
     946:	92 30       	cpi	r25, 0x02	; 2
     948:	79 f4       	brne	.+30     	; 0x968 <__stack+0x69>
     94a:	c6 c0       	rjmp	.+396    	; 0xad8 <__stack+0x1d9>
     94c:	92 30       	cpi	r25, 0x02	; 2
     94e:	51 f4       	brne	.+20     	; 0x964 <__stack+0x65>
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	2a 85       	ldd	r18, Y+10	; 0x0a
     954:	9a 89       	ldd	r25, Y+18	; 0x12
     956:	29 17       	cp	r18, r25
     958:	09 f4       	brne	.+2      	; 0x95c <__stack+0x5d>
     95a:	80 e0       	ldi	r24, 0x00	; 0
     95c:	8a 87       	std	Y+10, r24	; 0x0a
     95e:	ce 01       	movw	r24, r28
     960:	09 96       	adiw	r24, 0x09	; 9
     962:	bc c0       	rjmp	.+376    	; 0xadc <__stack+0x1dd>
     964:	82 30       	cpi	r24, 0x02	; 2
     966:	51 f4       	brne	.+20     	; 0x97c <__stack+0x7d>
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	2a 85       	ldd	r18, Y+10	; 0x0a
     96c:	9a 89       	ldd	r25, Y+18	; 0x12
     96e:	29 17       	cp	r18, r25
     970:	09 f4       	brne	.+2      	; 0x974 <__stack+0x75>
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	8a 8b       	std	Y+18, r24	; 0x12
     976:	ce 01       	movw	r24, r28
     978:	41 96       	adiw	r24, 0x11	; 17
     97a:	b0 c0       	rjmp	.+352    	; 0xadc <__stack+0x1dd>
     97c:	6d 84       	ldd	r6, Y+13	; 0x0d
     97e:	7e 84       	ldd	r7, Y+14	; 0x0e
     980:	8f 84       	ldd	r8, Y+15	; 0x0f
     982:	98 88       	ldd	r9, Y+16	; 0x10
     984:	ed 88       	ldd	r14, Y+21	; 0x15
     986:	fe 88       	ldd	r15, Y+22	; 0x16
     988:	0f 89       	ldd	r16, Y+23	; 0x17
     98a:	18 8d       	ldd	r17, Y+24	; 0x18
     98c:	e0 e2       	ldi	r30, 0x20	; 32
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	dc 01       	movw	r26, r24
     996:	aa 24       	eor	r10, r10
     998:	bb 24       	eor	r11, r11
     99a:	65 01       	movw	r12, r10
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	a9 01       	movw	r20, r18
     9a2:	b3 01       	movw	r22, r6
     9a4:	61 70       	andi	r22, 0x01	; 1
     9a6:	70 70       	andi	r23, 0x00	; 0
     9a8:	61 15       	cp	r22, r1
     9aa:	71 05       	cpc	r23, r1
     9ac:	d1 f0       	breq	.+52     	; 0x9e2 <__stack+0xe3>
     9ae:	2e 0d       	add	r18, r14
     9b0:	3f 1d       	adc	r19, r15
     9b2:	40 1f       	adc	r20, r16
     9b4:	51 1f       	adc	r21, r17
     9b6:	15 01       	movw	r2, r10
     9b8:	26 01       	movw	r4, r12
     9ba:	28 0e       	add	r2, r24
     9bc:	39 1e       	adc	r3, r25
     9be:	4a 1e       	adc	r4, r26
     9c0:	5b 1e       	adc	r5, r27
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	a0 e0       	ldi	r26, 0x00	; 0
     9c8:	b0 e0       	ldi	r27, 0x00	; 0
     9ca:	2e 15       	cp	r18, r14
     9cc:	3f 05       	cpc	r19, r15
     9ce:	40 07       	cpc	r20, r16
     9d0:	51 07       	cpc	r21, r17
     9d2:	18 f0       	brcs	.+6      	; 0x9da <__stack+0xdb>
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	dc 01       	movw	r26, r24
     9da:	82 0d       	add	r24, r2
     9dc:	93 1d       	adc	r25, r3
     9de:	a4 1d       	adc	r26, r4
     9e0:	b5 1d       	adc	r27, r5
     9e2:	aa 0c       	add	r10, r10
     9e4:	bb 1c       	adc	r11, r11
     9e6:	cc 1c       	adc	r12, r12
     9e8:	dd 1c       	adc	r13, r13
     9ea:	17 ff       	sbrs	r17, 7
     9ec:	09 c0       	rjmp	.+18     	; 0xa00 <__stack+0x101>
     9ee:	61 e0       	ldi	r22, 0x01	; 1
     9f0:	26 2e       	mov	r2, r22
     9f2:	31 2c       	mov	r3, r1
     9f4:	41 2c       	mov	r4, r1
     9f6:	51 2c       	mov	r5, r1
     9f8:	a2 28       	or	r10, r2
     9fa:	b3 28       	or	r11, r3
     9fc:	c4 28       	or	r12, r4
     9fe:	d5 28       	or	r13, r5
     a00:	31 97       	sbiw	r30, 0x01	; 1
     a02:	49 f0       	breq	.+18     	; 0xa16 <__stack+0x117>
     a04:	ee 0c       	add	r14, r14
     a06:	ff 1c       	adc	r15, r15
     a08:	00 1f       	adc	r16, r16
     a0a:	11 1f       	adc	r17, r17
     a0c:	96 94       	lsr	r9
     a0e:	87 94       	ror	r8
     a10:	77 94       	ror	r7
     a12:	67 94       	ror	r6
     a14:	c6 cf       	rjmp	.-116    	; 0x9a2 <__stack+0xa3>
     a16:	6b 89       	ldd	r22, Y+19	; 0x13
     a18:	7c 89       	ldd	r23, Y+20	; 0x14
     a1a:	eb 85       	ldd	r30, Y+11	; 0x0b
     a1c:	fc 85       	ldd	r31, Y+12	; 0x0c
     a1e:	6e 0f       	add	r22, r30
     a20:	7f 1f       	adc	r23, r31
     a22:	6e 5f       	subi	r22, 0xFE	; 254
     a24:	7f 4f       	sbci	r23, 0xFF	; 255
     a26:	7c 8f       	std	Y+28, r23	; 0x1c
     a28:	6b 8f       	std	Y+27, r22	; 0x1b
     a2a:	61 e0       	ldi	r22, 0x01	; 1
     a2c:	ea 85       	ldd	r30, Y+10	; 0x0a
     a2e:	7a 89       	ldd	r23, Y+18	; 0x12
     a30:	e7 17       	cp	r30, r23
     a32:	09 f4       	brne	.+2      	; 0xa36 <__stack+0x137>
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	6a 8f       	std	Y+26, r22	; 0x1a
     a38:	6b 8d       	ldd	r22, Y+27	; 0x1b
     a3a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     a3c:	10 c0       	rjmp	.+32     	; 0xa5e <__stack+0x15f>
     a3e:	fc 01       	movw	r30, r24
     a40:	e1 70       	andi	r30, 0x01	; 1
     a42:	f0 70       	andi	r31, 0x00	; 0
     a44:	30 97       	sbiw	r30, 0x00	; 0
     a46:	29 f0       	breq	.+10     	; 0xa52 <__stack+0x153>
     a48:	56 95       	lsr	r21
     a4a:	47 95       	ror	r20
     a4c:	37 95       	ror	r19
     a4e:	27 95       	ror	r18
     a50:	50 68       	ori	r21, 0x80	; 128
     a52:	b6 95       	lsr	r27
     a54:	a7 95       	ror	r26
     a56:	97 95       	ror	r25
     a58:	87 95       	ror	r24
     a5a:	6f 5f       	subi	r22, 0xFF	; 255
     a5c:	7f 4f       	sbci	r23, 0xFF	; 255
     a5e:	b7 fd       	sbrc	r27, 7
     a60:	ee cf       	rjmp	.-36     	; 0xa3e <__stack+0x13f>
     a62:	0c c0       	rjmp	.+24     	; 0xa7c <__stack+0x17d>
     a64:	88 0f       	add	r24, r24
     a66:	99 1f       	adc	r25, r25
     a68:	aa 1f       	adc	r26, r26
     a6a:	bb 1f       	adc	r27, r27
     a6c:	57 fd       	sbrc	r21, 7
     a6e:	81 60       	ori	r24, 0x01	; 1
     a70:	22 0f       	add	r18, r18
     a72:	33 1f       	adc	r19, r19
     a74:	44 1f       	adc	r20, r20
     a76:	55 1f       	adc	r21, r21
     a78:	61 50       	subi	r22, 0x01	; 1
     a7a:	70 40       	sbci	r23, 0x00	; 0
     a7c:	80 30       	cpi	r24, 0x00	; 0
     a7e:	e0 e0       	ldi	r30, 0x00	; 0
     a80:	9e 07       	cpc	r25, r30
     a82:	e0 e0       	ldi	r30, 0x00	; 0
     a84:	ae 07       	cpc	r26, r30
     a86:	e0 e4       	ldi	r30, 0x40	; 64
     a88:	be 07       	cpc	r27, r30
     a8a:	60 f3       	brcs	.-40     	; 0xa64 <__stack+0x165>
     a8c:	6b 8f       	std	Y+27, r22	; 0x1b
     a8e:	7c 8f       	std	Y+28, r23	; 0x1c
     a90:	6f e7       	ldi	r22, 0x7F	; 127
     a92:	e6 2e       	mov	r14, r22
     a94:	f1 2c       	mov	r15, r1
     a96:	01 2d       	mov	r16, r1
     a98:	11 2d       	mov	r17, r1
     a9a:	e8 22       	and	r14, r24
     a9c:	f9 22       	and	r15, r25
     a9e:	0a 23       	and	r16, r26
     aa0:	1b 23       	and	r17, r27
     aa2:	60 e4       	ldi	r22, 0x40	; 64
     aa4:	e6 16       	cp	r14, r22
     aa6:	f1 04       	cpc	r15, r1
     aa8:	01 05       	cpc	r16, r1
     aaa:	11 05       	cpc	r17, r1
     aac:	61 f4       	brne	.+24     	; 0xac6 <__stack+0x1c7>
     aae:	87 fd       	sbrc	r24, 7
     ab0:	0a c0       	rjmp	.+20     	; 0xac6 <__stack+0x1c7>
     ab2:	21 15       	cp	r18, r1
     ab4:	31 05       	cpc	r19, r1
     ab6:	41 05       	cpc	r20, r1
     ab8:	51 05       	cpc	r21, r1
     aba:	29 f0       	breq	.+10     	; 0xac6 <__stack+0x1c7>
     abc:	80 5c       	subi	r24, 0xC0	; 192
     abe:	9f 4f       	sbci	r25, 0xFF	; 255
     ac0:	af 4f       	sbci	r26, 0xFF	; 255
     ac2:	bf 4f       	sbci	r27, 0xFF	; 255
     ac4:	80 78       	andi	r24, 0x80	; 128
     ac6:	8d 8f       	std	Y+29, r24	; 0x1d
     ac8:	9e 8f       	std	Y+30, r25	; 0x1e
     aca:	af 8f       	std	Y+31, r26	; 0x1f
     acc:	b8 a3       	std	Y+32, r27	; 0x20
     ace:	83 e0       	ldi	r24, 0x03	; 3
     ad0:	89 8f       	std	Y+25, r24	; 0x19
     ad2:	ce 01       	movw	r24, r28
     ad4:	49 96       	adiw	r24, 0x19	; 25
     ad6:	02 c0       	rjmp	.+4      	; 0xadc <__stack+0x1dd>
     ad8:	83 e0       	ldi	r24, 0x03	; 3
     ada:	91 e0       	ldi	r25, 0x01	; 1
     adc:	0e 94 04 07 	call	0xe08	; 0xe08 <__pack_f>
     ae0:	a0 96       	adiw	r28, 0x20	; 32
     ae2:	e2 e1       	ldi	r30, 0x12	; 18
     ae4:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__epilogue_restores__>

00000ae8 <__divsf3>:
     ae8:	a8 e1       	ldi	r26, 0x18	; 24
     aea:	b0 e0       	ldi	r27, 0x00	; 0
     aec:	ea e7       	ldi	r30, 0x7A	; 122
     aee:	f5 e0       	ldi	r31, 0x05	; 5
     af0:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__prologue_saves__+0x10>
     af4:	69 83       	std	Y+1, r22	; 0x01
     af6:	7a 83       	std	Y+2, r23	; 0x02
     af8:	8b 83       	std	Y+3, r24	; 0x03
     afa:	9c 83       	std	Y+4, r25	; 0x04
     afc:	2d 83       	std	Y+5, r18	; 0x05
     afe:	3e 83       	std	Y+6, r19	; 0x06
     b00:	4f 83       	std	Y+7, r20	; 0x07
     b02:	58 87       	std	Y+8, r21	; 0x08
     b04:	8e 01       	movw	r16, r28
     b06:	07 5f       	subi	r16, 0xF7	; 247
     b08:	1f 4f       	sbci	r17, 0xFF	; 255
     b0a:	ce 01       	movw	r24, r28
     b0c:	01 96       	adiw	r24, 0x01	; 1
     b0e:	b8 01       	movw	r22, r16
     b10:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     b14:	81 e1       	ldi	r24, 0x11	; 17
     b16:	e8 2e       	mov	r14, r24
     b18:	f1 2c       	mov	r15, r1
     b1a:	ec 0e       	add	r14, r28
     b1c:	fd 1e       	adc	r15, r29
     b1e:	ce 01       	movw	r24, r28
     b20:	05 96       	adiw	r24, 0x05	; 5
     b22:	b7 01       	movw	r22, r14
     b24:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     b28:	99 85       	ldd	r25, Y+9	; 0x09
     b2a:	92 30       	cpi	r25, 0x02	; 2
     b2c:	08 f4       	brcc	.+2      	; 0xb30 <__divsf3+0x48>
     b2e:	83 c0       	rjmp	.+262    	; 0xc36 <__divsf3+0x14e>
     b30:	89 89       	ldd	r24, Y+17	; 0x11
     b32:	82 30       	cpi	r24, 0x02	; 2
     b34:	08 f4       	brcc	.+2      	; 0xb38 <__divsf3+0x50>
     b36:	7b c0       	rjmp	.+246    	; 0xc2e <__divsf3+0x146>
     b38:	2a 85       	ldd	r18, Y+10	; 0x0a
     b3a:	3a 89       	ldd	r19, Y+18	; 0x12
     b3c:	23 27       	eor	r18, r19
     b3e:	2a 87       	std	Y+10, r18	; 0x0a
     b40:	94 30       	cpi	r25, 0x04	; 4
     b42:	11 f0       	breq	.+4      	; 0xb48 <__divsf3+0x60>
     b44:	92 30       	cpi	r25, 0x02	; 2
     b46:	21 f4       	brne	.+8      	; 0xb50 <__divsf3+0x68>
     b48:	98 17       	cp	r25, r24
     b4a:	09 f0       	breq	.+2      	; 0xb4e <__divsf3+0x66>
     b4c:	6c c0       	rjmp	.+216    	; 0xc26 <__divsf3+0x13e>
     b4e:	71 c0       	rjmp	.+226    	; 0xc32 <__divsf3+0x14a>
     b50:	84 30       	cpi	r24, 0x04	; 4
     b52:	39 f4       	brne	.+14     	; 0xb62 <__divsf3+0x7a>
     b54:	1d 86       	std	Y+13, r1	; 0x0d
     b56:	1e 86       	std	Y+14, r1	; 0x0e
     b58:	1f 86       	std	Y+15, r1	; 0x0f
     b5a:	18 8a       	std	Y+16, r1	; 0x10
     b5c:	1c 86       	std	Y+12, r1	; 0x0c
     b5e:	1b 86       	std	Y+11, r1	; 0x0b
     b60:	6a c0       	rjmp	.+212    	; 0xc36 <__divsf3+0x14e>
     b62:	82 30       	cpi	r24, 0x02	; 2
     b64:	19 f4       	brne	.+6      	; 0xb6c <__divsf3+0x84>
     b66:	84 e0       	ldi	r24, 0x04	; 4
     b68:	89 87       	std	Y+9, r24	; 0x09
     b6a:	65 c0       	rjmp	.+202    	; 0xc36 <__divsf3+0x14e>
     b6c:	8b 85       	ldd	r24, Y+11	; 0x0b
     b6e:	9c 85       	ldd	r25, Y+12	; 0x0c
     b70:	2b 89       	ldd	r18, Y+19	; 0x13
     b72:	3c 89       	ldd	r19, Y+20	; 0x14
     b74:	82 1b       	sub	r24, r18
     b76:	93 0b       	sbc	r25, r19
     b78:	9c 87       	std	Y+12, r25	; 0x0c
     b7a:	8b 87       	std	Y+11, r24	; 0x0b
     b7c:	2d 85       	ldd	r18, Y+13	; 0x0d
     b7e:	3e 85       	ldd	r19, Y+14	; 0x0e
     b80:	4f 85       	ldd	r20, Y+15	; 0x0f
     b82:	58 89       	ldd	r21, Y+16	; 0x10
     b84:	ed 88       	ldd	r14, Y+21	; 0x15
     b86:	fe 88       	ldd	r15, Y+22	; 0x16
     b88:	0f 89       	ldd	r16, Y+23	; 0x17
     b8a:	18 8d       	ldd	r17, Y+24	; 0x18
     b8c:	2e 15       	cp	r18, r14
     b8e:	3f 05       	cpc	r19, r15
     b90:	40 07       	cpc	r20, r16
     b92:	51 07       	cpc	r21, r17
     b94:	38 f4       	brcc	.+14     	; 0xba4 <__divsf3+0xbc>
     b96:	22 0f       	add	r18, r18
     b98:	33 1f       	adc	r19, r19
     b9a:	44 1f       	adc	r20, r20
     b9c:	55 1f       	adc	r21, r21
     b9e:	01 97       	sbiw	r24, 0x01	; 1
     ba0:	9c 87       	std	Y+12, r25	; 0x0c
     ba2:	8b 87       	std	Y+11, r24	; 0x0b
     ba4:	6f e1       	ldi	r22, 0x1F	; 31
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	a1 2c       	mov	r10, r1
     baa:	b1 2c       	mov	r11, r1
     bac:	c1 2c       	mov	r12, r1
     bae:	a0 e4       	ldi	r26, 0x40	; 64
     bb0:	da 2e       	mov	r13, r26
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	dc 01       	movw	r26, r24
     bb8:	2e 15       	cp	r18, r14
     bba:	3f 05       	cpc	r19, r15
     bbc:	40 07       	cpc	r20, r16
     bbe:	51 07       	cpc	r21, r17
     bc0:	40 f0       	brcs	.+16     	; 0xbd2 <__divsf3+0xea>
     bc2:	8a 29       	or	r24, r10
     bc4:	9b 29       	or	r25, r11
     bc6:	ac 29       	or	r26, r12
     bc8:	bd 29       	or	r27, r13
     bca:	2e 19       	sub	r18, r14
     bcc:	3f 09       	sbc	r19, r15
     bce:	40 0b       	sbc	r20, r16
     bd0:	51 0b       	sbc	r21, r17
     bd2:	d6 94       	lsr	r13
     bd4:	c7 94       	ror	r12
     bd6:	b7 94       	ror	r11
     bd8:	a7 94       	ror	r10
     bda:	22 0f       	add	r18, r18
     bdc:	33 1f       	adc	r19, r19
     bde:	44 1f       	adc	r20, r20
     be0:	55 1f       	adc	r21, r21
     be2:	61 50       	subi	r22, 0x01	; 1
     be4:	70 40       	sbci	r23, 0x00	; 0
     be6:	41 f7       	brne	.-48     	; 0xbb8 <__divsf3+0xd0>
     be8:	6f e7       	ldi	r22, 0x7F	; 127
     bea:	e6 2e       	mov	r14, r22
     bec:	f1 2c       	mov	r15, r1
     bee:	01 2d       	mov	r16, r1
     bf0:	11 2d       	mov	r17, r1
     bf2:	e8 22       	and	r14, r24
     bf4:	f9 22       	and	r15, r25
     bf6:	0a 23       	and	r16, r26
     bf8:	1b 23       	and	r17, r27
     bfa:	60 e4       	ldi	r22, 0x40	; 64
     bfc:	e6 16       	cp	r14, r22
     bfe:	f1 04       	cpc	r15, r1
     c00:	01 05       	cpc	r16, r1
     c02:	11 05       	cpc	r17, r1
     c04:	61 f4       	brne	.+24     	; 0xc1e <__divsf3+0x136>
     c06:	87 fd       	sbrc	r24, 7
     c08:	0a c0       	rjmp	.+20     	; 0xc1e <__divsf3+0x136>
     c0a:	21 15       	cp	r18, r1
     c0c:	31 05       	cpc	r19, r1
     c0e:	41 05       	cpc	r20, r1
     c10:	51 05       	cpc	r21, r1
     c12:	29 f0       	breq	.+10     	; 0xc1e <__divsf3+0x136>
     c14:	80 5c       	subi	r24, 0xC0	; 192
     c16:	9f 4f       	sbci	r25, 0xFF	; 255
     c18:	af 4f       	sbci	r26, 0xFF	; 255
     c1a:	bf 4f       	sbci	r27, 0xFF	; 255
     c1c:	80 78       	andi	r24, 0x80	; 128
     c1e:	8d 87       	std	Y+13, r24	; 0x0d
     c20:	9e 87       	std	Y+14, r25	; 0x0e
     c22:	af 87       	std	Y+15, r26	; 0x0f
     c24:	b8 8b       	std	Y+16, r27	; 0x10
     c26:	8e 01       	movw	r16, r28
     c28:	07 5f       	subi	r16, 0xF7	; 247
     c2a:	1f 4f       	sbci	r17, 0xFF	; 255
     c2c:	04 c0       	rjmp	.+8      	; 0xc36 <__divsf3+0x14e>
     c2e:	87 01       	movw	r16, r14
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <__divsf3+0x14e>
     c32:	03 e0       	ldi	r16, 0x03	; 3
     c34:	11 e0       	ldi	r17, 0x01	; 1
     c36:	c8 01       	movw	r24, r16
     c38:	0e 94 04 07 	call	0xe08	; 0xe08 <__pack_f>
     c3c:	68 96       	adiw	r28, 0x18	; 24
     c3e:	ea e0       	ldi	r30, 0x0A	; 10
     c40:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__epilogue_restores__+0x10>

00000c44 <__gtsf2>:
     c44:	a8 e1       	ldi	r26, 0x18	; 24
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	e8 e2       	ldi	r30, 0x28	; 40
     c4a:	f6 e0       	ldi	r31, 0x06	; 6
     c4c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__prologue_saves__+0x18>
     c50:	69 83       	std	Y+1, r22	; 0x01
     c52:	7a 83       	std	Y+2, r23	; 0x02
     c54:	8b 83       	std	Y+3, r24	; 0x03
     c56:	9c 83       	std	Y+4, r25	; 0x04
     c58:	2d 83       	std	Y+5, r18	; 0x05
     c5a:	3e 83       	std	Y+6, r19	; 0x06
     c5c:	4f 83       	std	Y+7, r20	; 0x07
     c5e:	58 87       	std	Y+8, r21	; 0x08
     c60:	8e 01       	movw	r16, r28
     c62:	07 5f       	subi	r16, 0xF7	; 247
     c64:	1f 4f       	sbci	r17, 0xFF	; 255
     c66:	ce 01       	movw	r24, r28
     c68:	01 96       	adiw	r24, 0x01	; 1
     c6a:	b8 01       	movw	r22, r16
     c6c:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     c70:	81 e1       	ldi	r24, 0x11	; 17
     c72:	e8 2e       	mov	r14, r24
     c74:	f1 2c       	mov	r15, r1
     c76:	ec 0e       	add	r14, r28
     c78:	fd 1e       	adc	r15, r29
     c7a:	ce 01       	movw	r24, r28
     c7c:	05 96       	adiw	r24, 0x05	; 5
     c7e:	b7 01       	movw	r22, r14
     c80:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     c84:	89 85       	ldd	r24, Y+9	; 0x09
     c86:	82 30       	cpi	r24, 0x02	; 2
     c88:	40 f0       	brcs	.+16     	; 0xc9a <__gtsf2+0x56>
     c8a:	89 89       	ldd	r24, Y+17	; 0x11
     c8c:	82 30       	cpi	r24, 0x02	; 2
     c8e:	28 f0       	brcs	.+10     	; 0xc9a <__gtsf2+0x56>
     c90:	c8 01       	movw	r24, r16
     c92:	b7 01       	movw	r22, r14
     c94:	0e 94 3b 08 	call	0x1076	; 0x1076 <__fpcmp_parts_f>
     c98:	01 c0       	rjmp	.+2      	; 0xc9c <__gtsf2+0x58>
     c9a:	8f ef       	ldi	r24, 0xFF	; 255
     c9c:	68 96       	adiw	r28, 0x18	; 24
     c9e:	e6 e0       	ldi	r30, 0x06	; 6
     ca0:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__epilogue_restores__+0x18>

00000ca4 <__gesf2>:
     ca4:	a8 e1       	ldi	r26, 0x18	; 24
     ca6:	b0 e0       	ldi	r27, 0x00	; 0
     ca8:	e8 e5       	ldi	r30, 0x58	; 88
     caa:	f6 e0       	ldi	r31, 0x06	; 6
     cac:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__prologue_saves__+0x18>
     cb0:	69 83       	std	Y+1, r22	; 0x01
     cb2:	7a 83       	std	Y+2, r23	; 0x02
     cb4:	8b 83       	std	Y+3, r24	; 0x03
     cb6:	9c 83       	std	Y+4, r25	; 0x04
     cb8:	2d 83       	std	Y+5, r18	; 0x05
     cba:	3e 83       	std	Y+6, r19	; 0x06
     cbc:	4f 83       	std	Y+7, r20	; 0x07
     cbe:	58 87       	std	Y+8, r21	; 0x08
     cc0:	8e 01       	movw	r16, r28
     cc2:	07 5f       	subi	r16, 0xF7	; 247
     cc4:	1f 4f       	sbci	r17, 0xFF	; 255
     cc6:	ce 01       	movw	r24, r28
     cc8:	01 96       	adiw	r24, 0x01	; 1
     cca:	b8 01       	movw	r22, r16
     ccc:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     cd0:	81 e1       	ldi	r24, 0x11	; 17
     cd2:	e8 2e       	mov	r14, r24
     cd4:	f1 2c       	mov	r15, r1
     cd6:	ec 0e       	add	r14, r28
     cd8:	fd 1e       	adc	r15, r29
     cda:	ce 01       	movw	r24, r28
     cdc:	05 96       	adiw	r24, 0x05	; 5
     cde:	b7 01       	movw	r22, r14
     ce0:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     ce4:	89 85       	ldd	r24, Y+9	; 0x09
     ce6:	82 30       	cpi	r24, 0x02	; 2
     ce8:	40 f0       	brcs	.+16     	; 0xcfa <__gesf2+0x56>
     cea:	89 89       	ldd	r24, Y+17	; 0x11
     cec:	82 30       	cpi	r24, 0x02	; 2
     cee:	28 f0       	brcs	.+10     	; 0xcfa <__gesf2+0x56>
     cf0:	c8 01       	movw	r24, r16
     cf2:	b7 01       	movw	r22, r14
     cf4:	0e 94 3b 08 	call	0x1076	; 0x1076 <__fpcmp_parts_f>
     cf8:	01 c0       	rjmp	.+2      	; 0xcfc <__gesf2+0x58>
     cfa:	8f ef       	ldi	r24, 0xFF	; 255
     cfc:	68 96       	adiw	r28, 0x18	; 24
     cfe:	e6 e0       	ldi	r30, 0x06	; 6
     d00:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__epilogue_restores__+0x18>

00000d04 <__ltsf2>:
     d04:	a8 e1       	ldi	r26, 0x18	; 24
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	e8 e8       	ldi	r30, 0x88	; 136
     d0a:	f6 e0       	ldi	r31, 0x06	; 6
     d0c:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__prologue_saves__+0x18>
     d10:	69 83       	std	Y+1, r22	; 0x01
     d12:	7a 83       	std	Y+2, r23	; 0x02
     d14:	8b 83       	std	Y+3, r24	; 0x03
     d16:	9c 83       	std	Y+4, r25	; 0x04
     d18:	2d 83       	std	Y+5, r18	; 0x05
     d1a:	3e 83       	std	Y+6, r19	; 0x06
     d1c:	4f 83       	std	Y+7, r20	; 0x07
     d1e:	58 87       	std	Y+8, r21	; 0x08
     d20:	8e 01       	movw	r16, r28
     d22:	07 5f       	subi	r16, 0xF7	; 247
     d24:	1f 4f       	sbci	r17, 0xFF	; 255
     d26:	ce 01       	movw	r24, r28
     d28:	01 96       	adiw	r24, 0x01	; 1
     d2a:	b8 01       	movw	r22, r16
     d2c:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     d30:	81 e1       	ldi	r24, 0x11	; 17
     d32:	e8 2e       	mov	r14, r24
     d34:	f1 2c       	mov	r15, r1
     d36:	ec 0e       	add	r14, r28
     d38:	fd 1e       	adc	r15, r29
     d3a:	ce 01       	movw	r24, r28
     d3c:	05 96       	adiw	r24, 0x05	; 5
     d3e:	b7 01       	movw	r22, r14
     d40:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     d44:	89 85       	ldd	r24, Y+9	; 0x09
     d46:	82 30       	cpi	r24, 0x02	; 2
     d48:	40 f0       	brcs	.+16     	; 0xd5a <__ltsf2+0x56>
     d4a:	89 89       	ldd	r24, Y+17	; 0x11
     d4c:	82 30       	cpi	r24, 0x02	; 2
     d4e:	28 f0       	brcs	.+10     	; 0xd5a <__ltsf2+0x56>
     d50:	c8 01       	movw	r24, r16
     d52:	b7 01       	movw	r22, r14
     d54:	0e 94 3b 08 	call	0x1076	; 0x1076 <__fpcmp_parts_f>
     d58:	01 c0       	rjmp	.+2      	; 0xd5c <__ltsf2+0x58>
     d5a:	81 e0       	ldi	r24, 0x01	; 1
     d5c:	68 96       	adiw	r28, 0x18	; 24
     d5e:	e6 e0       	ldi	r30, 0x06	; 6
     d60:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__epilogue_restores__+0x18>

00000d64 <__fixsfsi>:
     d64:	ac e0       	ldi	r26, 0x0C	; 12
     d66:	b0 e0       	ldi	r27, 0x00	; 0
     d68:	e8 eb       	ldi	r30, 0xB8	; 184
     d6a:	f6 e0       	ldi	r31, 0x06	; 6
     d6c:	0c 94 a4 08 	jmp	0x1148	; 0x1148 <__prologue_saves__+0x20>
     d70:	69 83       	std	Y+1, r22	; 0x01
     d72:	7a 83       	std	Y+2, r23	; 0x02
     d74:	8b 83       	std	Y+3, r24	; 0x03
     d76:	9c 83       	std	Y+4, r25	; 0x04
     d78:	ce 01       	movw	r24, r28
     d7a:	01 96       	adiw	r24, 0x01	; 1
     d7c:	be 01       	movw	r22, r28
     d7e:	6b 5f       	subi	r22, 0xFB	; 251
     d80:	7f 4f       	sbci	r23, 0xFF	; 255
     d82:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <__unpack_f>
     d86:	8d 81       	ldd	r24, Y+5	; 0x05
     d88:	82 30       	cpi	r24, 0x02	; 2
     d8a:	81 f1       	breq	.+96     	; 0xdec <__fixsfsi+0x88>
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	70 f1       	brcs	.+92     	; 0xdec <__fixsfsi+0x88>
     d90:	84 30       	cpi	r24, 0x04	; 4
     d92:	21 f4       	brne	.+8      	; 0xd9c <__fixsfsi+0x38>
     d94:	8e 81       	ldd	r24, Y+6	; 0x06
     d96:	88 23       	and	r24, r24
     d98:	69 f1       	breq	.+90     	; 0xdf4 <__fixsfsi+0x90>
     d9a:	0a c0       	rjmp	.+20     	; 0xdb0 <__fixsfsi+0x4c>
     d9c:	2f 81       	ldd	r18, Y+7	; 0x07
     d9e:	38 85       	ldd	r19, Y+8	; 0x08
     da0:	37 fd       	sbrc	r19, 7
     da2:	24 c0       	rjmp	.+72     	; 0xdec <__fixsfsi+0x88>
     da4:	6e 81       	ldd	r22, Y+6	; 0x06
     da6:	2f 31       	cpi	r18, 0x1F	; 31
     da8:	31 05       	cpc	r19, r1
     daa:	3c f0       	brlt	.+14     	; 0xdba <__fixsfsi+0x56>
     dac:	66 23       	and	r22, r22
     dae:	11 f1       	breq	.+68     	; 0xdf4 <__fixsfsi+0x90>
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	40 e0       	ldi	r20, 0x00	; 0
     db6:	50 e8       	ldi	r21, 0x80	; 128
     db8:	21 c0       	rjmp	.+66     	; 0xdfc <__fixsfsi+0x98>
     dba:	8e e1       	ldi	r24, 0x1E	; 30
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	82 1b       	sub	r24, r18
     dc0:	93 0b       	sbc	r25, r19
     dc2:	29 85       	ldd	r18, Y+9	; 0x09
     dc4:	3a 85       	ldd	r19, Y+10	; 0x0a
     dc6:	4b 85       	ldd	r20, Y+11	; 0x0b
     dc8:	5c 85       	ldd	r21, Y+12	; 0x0c
     dca:	04 c0       	rjmp	.+8      	; 0xdd4 <__fixsfsi+0x70>
     dcc:	56 95       	lsr	r21
     dce:	47 95       	ror	r20
     dd0:	37 95       	ror	r19
     dd2:	27 95       	ror	r18
     dd4:	8a 95       	dec	r24
     dd6:	d2 f7       	brpl	.-12     	; 0xdcc <__fixsfsi+0x68>
     dd8:	66 23       	and	r22, r22
     dda:	81 f0       	breq	.+32     	; 0xdfc <__fixsfsi+0x98>
     ddc:	50 95       	com	r21
     dde:	40 95       	com	r20
     de0:	30 95       	com	r19
     de2:	21 95       	neg	r18
     de4:	3f 4f       	sbci	r19, 0xFF	; 255
     de6:	4f 4f       	sbci	r20, 0xFF	; 255
     de8:	5f 4f       	sbci	r21, 0xFF	; 255
     dea:	08 c0       	rjmp	.+16     	; 0xdfc <__fixsfsi+0x98>
     dec:	20 e0       	ldi	r18, 0x00	; 0
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	a9 01       	movw	r20, r18
     df2:	04 c0       	rjmp	.+8      	; 0xdfc <__fixsfsi+0x98>
     df4:	2f ef       	ldi	r18, 0xFF	; 255
     df6:	3f ef       	ldi	r19, 0xFF	; 255
     df8:	4f ef       	ldi	r20, 0xFF	; 255
     dfa:	5f e7       	ldi	r21, 0x7F	; 127
     dfc:	b9 01       	movw	r22, r18
     dfe:	ca 01       	movw	r24, r20
     e00:	2c 96       	adiw	r28, 0x0c	; 12
     e02:	e2 e0       	ldi	r30, 0x02	; 2
     e04:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__epilogue_restores__+0x20>

00000e08 <__pack_f>:
     e08:	ef 92       	push	r14
     e0a:	ff 92       	push	r15
     e0c:	0f 93       	push	r16
     e0e:	1f 93       	push	r17
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	fc 01       	movw	r30, r24
     e16:	24 81       	ldd	r18, Z+4	; 0x04
     e18:	35 81       	ldd	r19, Z+5	; 0x05
     e1a:	46 81       	ldd	r20, Z+6	; 0x06
     e1c:	57 81       	ldd	r21, Z+7	; 0x07
     e1e:	61 81       	ldd	r22, Z+1	; 0x01
     e20:	80 81       	ld	r24, Z
     e22:	82 30       	cpi	r24, 0x02	; 2
     e24:	20 f4       	brcc	.+8      	; 0xe2e <__pack_f+0x26>
     e26:	40 61       	ori	r20, 0x10	; 16
     e28:	ef ef       	ldi	r30, 0xFF	; 255
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	a3 c0       	rjmp	.+326    	; 0xf74 <__pack_f+0x16c>
     e2e:	84 30       	cpi	r24, 0x04	; 4
     e30:	09 f4       	brne	.+2      	; 0xe34 <__pack_f+0x2c>
     e32:	9b c0       	rjmp	.+310    	; 0xf6a <__pack_f+0x162>
     e34:	82 30       	cpi	r24, 0x02	; 2
     e36:	09 f4       	brne	.+2      	; 0xe3a <__pack_f+0x32>
     e38:	92 c0       	rjmp	.+292    	; 0xf5e <__pack_f+0x156>
     e3a:	21 15       	cp	r18, r1
     e3c:	31 05       	cpc	r19, r1
     e3e:	41 05       	cpc	r20, r1
     e40:	51 05       	cpc	r21, r1
     e42:	09 f4       	brne	.+2      	; 0xe46 <__pack_f+0x3e>
     e44:	8f c0       	rjmp	.+286    	; 0xf64 <__pack_f+0x15c>
     e46:	02 80       	ldd	r0, Z+2	; 0x02
     e48:	f3 81       	ldd	r31, Z+3	; 0x03
     e4a:	e0 2d       	mov	r30, r0
     e4c:	8f ef       	ldi	r24, 0xFF	; 255
     e4e:	e2 38       	cpi	r30, 0x82	; 130
     e50:	f8 07       	cpc	r31, r24
     e52:	0c f0       	brlt	.+2      	; 0xe56 <__pack_f+0x4e>
     e54:	5a c0       	rjmp	.+180    	; 0xf0a <__pack_f+0x102>
     e56:	c2 e8       	ldi	r28, 0x82	; 130
     e58:	df ef       	ldi	r29, 0xFF	; 255
     e5a:	ce 1b       	sub	r28, r30
     e5c:	df 0b       	sbc	r29, r31
     e5e:	ca 31       	cpi	r28, 0x1A	; 26
     e60:	d1 05       	cpc	r29, r1
     e62:	6c f5       	brge	.+90     	; 0xebe <__pack_f+0xb6>
     e64:	79 01       	movw	r14, r18
     e66:	8a 01       	movw	r16, r20
     e68:	0c 2e       	mov	r0, r28
     e6a:	04 c0       	rjmp	.+8      	; 0xe74 <__pack_f+0x6c>
     e6c:	16 95       	lsr	r17
     e6e:	07 95       	ror	r16
     e70:	f7 94       	ror	r15
     e72:	e7 94       	ror	r14
     e74:	0a 94       	dec	r0
     e76:	d2 f7       	brpl	.-12     	; 0xe6c <__pack_f+0x64>
     e78:	81 e0       	ldi	r24, 0x01	; 1
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	a0 e0       	ldi	r26, 0x00	; 0
     e7e:	b0 e0       	ldi	r27, 0x00	; 0
     e80:	0c 2e       	mov	r0, r28
     e82:	04 c0       	rjmp	.+8      	; 0xe8c <__pack_f+0x84>
     e84:	88 0f       	add	r24, r24
     e86:	99 1f       	adc	r25, r25
     e88:	aa 1f       	adc	r26, r26
     e8a:	bb 1f       	adc	r27, r27
     e8c:	0a 94       	dec	r0
     e8e:	d2 f7       	brpl	.-12     	; 0xe84 <__pack_f+0x7c>
     e90:	01 97       	sbiw	r24, 0x01	; 1
     e92:	a1 09       	sbc	r26, r1
     e94:	b1 09       	sbc	r27, r1
     e96:	82 23       	and	r24, r18
     e98:	93 23       	and	r25, r19
     e9a:	a4 23       	and	r26, r20
     e9c:	b5 23       	and	r27, r21
     e9e:	21 e0       	ldi	r18, 0x01	; 1
     ea0:	30 e0       	ldi	r19, 0x00	; 0
     ea2:	40 e0       	ldi	r20, 0x00	; 0
     ea4:	50 e0       	ldi	r21, 0x00	; 0
     ea6:	00 97       	sbiw	r24, 0x00	; 0
     ea8:	a1 05       	cpc	r26, r1
     eaa:	b1 05       	cpc	r27, r1
     eac:	19 f4       	brne	.+6      	; 0xeb4 <__pack_f+0xac>
     eae:	20 e0       	ldi	r18, 0x00	; 0
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	a9 01       	movw	r20, r18
     eb4:	2e 29       	or	r18, r14
     eb6:	3f 29       	or	r19, r15
     eb8:	40 2b       	or	r20, r16
     eba:	51 2b       	or	r21, r17
     ebc:	03 c0       	rjmp	.+6      	; 0xec4 <__pack_f+0xbc>
     ebe:	20 e0       	ldi	r18, 0x00	; 0
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	a9 01       	movw	r20, r18
     ec4:	da 01       	movw	r26, r20
     ec6:	c9 01       	movw	r24, r18
     ec8:	8f 77       	andi	r24, 0x7F	; 127
     eca:	90 70       	andi	r25, 0x00	; 0
     ecc:	a0 70       	andi	r26, 0x00	; 0
     ece:	b0 70       	andi	r27, 0x00	; 0
     ed0:	80 34       	cpi	r24, 0x40	; 64
     ed2:	91 05       	cpc	r25, r1
     ed4:	a1 05       	cpc	r26, r1
     ed6:	b1 05       	cpc	r27, r1
     ed8:	39 f4       	brne	.+14     	; 0xee8 <__pack_f+0xe0>
     eda:	27 ff       	sbrs	r18, 7
     edc:	09 c0       	rjmp	.+18     	; 0xef0 <__pack_f+0xe8>
     ede:	20 5c       	subi	r18, 0xC0	; 192
     ee0:	3f 4f       	sbci	r19, 0xFF	; 255
     ee2:	4f 4f       	sbci	r20, 0xFF	; 255
     ee4:	5f 4f       	sbci	r21, 0xFF	; 255
     ee6:	04 c0       	rjmp	.+8      	; 0xef0 <__pack_f+0xe8>
     ee8:	21 5c       	subi	r18, 0xC1	; 193
     eea:	3f 4f       	sbci	r19, 0xFF	; 255
     eec:	4f 4f       	sbci	r20, 0xFF	; 255
     eee:	5f 4f       	sbci	r21, 0xFF	; 255
     ef0:	e1 e0       	ldi	r30, 0x01	; 1
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	20 30       	cpi	r18, 0x00	; 0
     ef6:	80 e0       	ldi	r24, 0x00	; 0
     ef8:	38 07       	cpc	r19, r24
     efa:	80 e0       	ldi	r24, 0x00	; 0
     efc:	48 07       	cpc	r20, r24
     efe:	80 e4       	ldi	r24, 0x40	; 64
     f00:	58 07       	cpc	r21, r24
     f02:	28 f5       	brcc	.+74     	; 0xf4e <__pack_f+0x146>
     f04:	e0 e0       	ldi	r30, 0x00	; 0
     f06:	f0 e0       	ldi	r31, 0x00	; 0
     f08:	22 c0       	rjmp	.+68     	; 0xf4e <__pack_f+0x146>
     f0a:	e0 38       	cpi	r30, 0x80	; 128
     f0c:	f1 05       	cpc	r31, r1
     f0e:	6c f5       	brge	.+90     	; 0xf6a <__pack_f+0x162>
     f10:	e1 58       	subi	r30, 0x81	; 129
     f12:	ff 4f       	sbci	r31, 0xFF	; 255
     f14:	da 01       	movw	r26, r20
     f16:	c9 01       	movw	r24, r18
     f18:	8f 77       	andi	r24, 0x7F	; 127
     f1a:	90 70       	andi	r25, 0x00	; 0
     f1c:	a0 70       	andi	r26, 0x00	; 0
     f1e:	b0 70       	andi	r27, 0x00	; 0
     f20:	80 34       	cpi	r24, 0x40	; 64
     f22:	91 05       	cpc	r25, r1
     f24:	a1 05       	cpc	r26, r1
     f26:	b1 05       	cpc	r27, r1
     f28:	39 f4       	brne	.+14     	; 0xf38 <__pack_f+0x130>
     f2a:	27 ff       	sbrs	r18, 7
     f2c:	09 c0       	rjmp	.+18     	; 0xf40 <__pack_f+0x138>
     f2e:	20 5c       	subi	r18, 0xC0	; 192
     f30:	3f 4f       	sbci	r19, 0xFF	; 255
     f32:	4f 4f       	sbci	r20, 0xFF	; 255
     f34:	5f 4f       	sbci	r21, 0xFF	; 255
     f36:	04 c0       	rjmp	.+8      	; 0xf40 <__pack_f+0x138>
     f38:	21 5c       	subi	r18, 0xC1	; 193
     f3a:	3f 4f       	sbci	r19, 0xFF	; 255
     f3c:	4f 4f       	sbci	r20, 0xFF	; 255
     f3e:	5f 4f       	sbci	r21, 0xFF	; 255
     f40:	57 ff       	sbrs	r21, 7
     f42:	05 c0       	rjmp	.+10     	; 0xf4e <__pack_f+0x146>
     f44:	56 95       	lsr	r21
     f46:	47 95       	ror	r20
     f48:	37 95       	ror	r19
     f4a:	27 95       	ror	r18
     f4c:	31 96       	adiw	r30, 0x01	; 1
     f4e:	87 e0       	ldi	r24, 0x07	; 7
     f50:	56 95       	lsr	r21
     f52:	47 95       	ror	r20
     f54:	37 95       	ror	r19
     f56:	27 95       	ror	r18
     f58:	8a 95       	dec	r24
     f5a:	d1 f7       	brne	.-12     	; 0xf50 <__pack_f+0x148>
     f5c:	0b c0       	rjmp	.+22     	; 0xf74 <__pack_f+0x16c>
     f5e:	e0 e0       	ldi	r30, 0x00	; 0
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	05 c0       	rjmp	.+10     	; 0xf6e <__pack_f+0x166>
     f64:	e0 e0       	ldi	r30, 0x00	; 0
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	05 c0       	rjmp	.+10     	; 0xf74 <__pack_f+0x16c>
     f6a:	ef ef       	ldi	r30, 0xFF	; 255
     f6c:	f0 e0       	ldi	r31, 0x00	; 0
     f6e:	20 e0       	ldi	r18, 0x00	; 0
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	a9 01       	movw	r20, r18
     f74:	8e 2f       	mov	r24, r30
     f76:	87 95       	ror	r24
     f78:	88 27       	eor	r24, r24
     f7a:	87 95       	ror	r24
     f7c:	94 2f       	mov	r25, r20
     f7e:	9f 77       	andi	r25, 0x7F	; 127
     f80:	67 95       	ror	r22
     f82:	66 27       	eor	r22, r22
     f84:	67 95       	ror	r22
     f86:	e6 95       	lsr	r30
     f88:	e2 2e       	mov	r14, r18
     f8a:	a9 2f       	mov	r26, r25
     f8c:	a8 2b       	or	r26, r24
     f8e:	fe 2f       	mov	r31, r30
     f90:	f6 2b       	or	r31, r22
     f92:	62 2f       	mov	r22, r18
     f94:	73 2f       	mov	r23, r19
     f96:	8a 2f       	mov	r24, r26
     f98:	9f 2f       	mov	r25, r31
     f9a:	cd b7       	in	r28, 0x3d	; 61
     f9c:	de b7       	in	r29, 0x3e	; 62
     f9e:	e6 e0       	ldi	r30, 0x06	; 6
     fa0:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__epilogue_restores__+0x18>

00000fa4 <__unpack_f>:
     fa4:	dc 01       	movw	r26, r24
     fa6:	fb 01       	movw	r30, r22
     fa8:	2c 91       	ld	r18, X
     faa:	11 96       	adiw	r26, 0x01	; 1
     fac:	3c 91       	ld	r19, X
     fae:	11 97       	sbiw	r26, 0x01	; 1
     fb0:	12 96       	adiw	r26, 0x02	; 2
     fb2:	8c 91       	ld	r24, X
     fb4:	12 97       	sbiw	r26, 0x02	; 2
     fb6:	48 2f       	mov	r20, r24
     fb8:	4f 77       	andi	r20, 0x7F	; 127
     fba:	50 e0       	ldi	r21, 0x00	; 0
     fbc:	98 2f       	mov	r25, r24
     fbe:	99 1f       	adc	r25, r25
     fc0:	99 27       	eor	r25, r25
     fc2:	99 1f       	adc	r25, r25
     fc4:	13 96       	adiw	r26, 0x03	; 3
     fc6:	6c 91       	ld	r22, X
     fc8:	13 97       	sbiw	r26, 0x03	; 3
     fca:	86 2f       	mov	r24, r22
     fcc:	88 0f       	add	r24, r24
     fce:	89 2b       	or	r24, r25
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	66 1f       	adc	r22, r22
     fd4:	66 27       	eor	r22, r22
     fd6:	66 1f       	adc	r22, r22
     fd8:	61 83       	std	Z+1, r22	; 0x01
     fda:	00 97       	sbiw	r24, 0x00	; 0
     fdc:	39 f5       	brne	.+78     	; 0x102c <__unpack_f+0x88>
     fde:	21 15       	cp	r18, r1
     fe0:	31 05       	cpc	r19, r1
     fe2:	41 05       	cpc	r20, r1
     fe4:	51 05       	cpc	r21, r1
     fe6:	11 f4       	brne	.+4      	; 0xfec <__unpack_f+0x48>
     fe8:	82 e0       	ldi	r24, 0x02	; 2
     fea:	29 c0       	rjmp	.+82     	; 0x103e <__unpack_f+0x9a>
     fec:	82 e8       	ldi	r24, 0x82	; 130
     fee:	9f ef       	ldi	r25, 0xFF	; 255
     ff0:	93 83       	std	Z+3, r25	; 0x03
     ff2:	82 83       	std	Z+2, r24	; 0x02
     ff4:	67 e0       	ldi	r22, 0x07	; 7
     ff6:	22 0f       	add	r18, r18
     ff8:	33 1f       	adc	r19, r19
     ffa:	44 1f       	adc	r20, r20
     ffc:	55 1f       	adc	r21, r21
     ffe:	6a 95       	dec	r22
    1000:	d1 f7       	brne	.-12     	; 0xff6 <__unpack_f+0x52>
    1002:	83 e0       	ldi	r24, 0x03	; 3
    1004:	80 83       	st	Z, r24
    1006:	09 c0       	rjmp	.+18     	; 0x101a <__unpack_f+0x76>
    1008:	22 0f       	add	r18, r18
    100a:	33 1f       	adc	r19, r19
    100c:	44 1f       	adc	r20, r20
    100e:	55 1f       	adc	r21, r21
    1010:	82 81       	ldd	r24, Z+2	; 0x02
    1012:	93 81       	ldd	r25, Z+3	; 0x03
    1014:	01 97       	sbiw	r24, 0x01	; 1
    1016:	93 83       	std	Z+3, r25	; 0x03
    1018:	82 83       	std	Z+2, r24	; 0x02
    101a:	20 30       	cpi	r18, 0x00	; 0
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	38 07       	cpc	r19, r24
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	48 07       	cpc	r20, r24
    1024:	80 e4       	ldi	r24, 0x40	; 64
    1026:	58 07       	cpc	r21, r24
    1028:	78 f3       	brcs	.-34     	; 0x1008 <__unpack_f+0x64>
    102a:	20 c0       	rjmp	.+64     	; 0x106c <__unpack_f+0xc8>
    102c:	8f 3f       	cpi	r24, 0xFF	; 255
    102e:	91 05       	cpc	r25, r1
    1030:	79 f4       	brne	.+30     	; 0x1050 <__unpack_f+0xac>
    1032:	21 15       	cp	r18, r1
    1034:	31 05       	cpc	r19, r1
    1036:	41 05       	cpc	r20, r1
    1038:	51 05       	cpc	r21, r1
    103a:	19 f4       	brne	.+6      	; 0x1042 <__unpack_f+0x9e>
    103c:	84 e0       	ldi	r24, 0x04	; 4
    103e:	80 83       	st	Z, r24
    1040:	08 95       	ret
    1042:	44 ff       	sbrs	r20, 4
    1044:	03 c0       	rjmp	.+6      	; 0x104c <__unpack_f+0xa8>
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	80 83       	st	Z, r24
    104a:	10 c0       	rjmp	.+32     	; 0x106c <__unpack_f+0xc8>
    104c:	10 82       	st	Z, r1
    104e:	0e c0       	rjmp	.+28     	; 0x106c <__unpack_f+0xc8>
    1050:	8f 57       	subi	r24, 0x7F	; 127
    1052:	90 40       	sbci	r25, 0x00	; 0
    1054:	93 83       	std	Z+3, r25	; 0x03
    1056:	82 83       	std	Z+2, r24	; 0x02
    1058:	83 e0       	ldi	r24, 0x03	; 3
    105a:	80 83       	st	Z, r24
    105c:	87 e0       	ldi	r24, 0x07	; 7
    105e:	22 0f       	add	r18, r18
    1060:	33 1f       	adc	r19, r19
    1062:	44 1f       	adc	r20, r20
    1064:	55 1f       	adc	r21, r21
    1066:	8a 95       	dec	r24
    1068:	d1 f7       	brne	.-12     	; 0x105e <__unpack_f+0xba>
    106a:	50 64       	ori	r21, 0x40	; 64
    106c:	24 83       	std	Z+4, r18	; 0x04
    106e:	35 83       	std	Z+5, r19	; 0x05
    1070:	46 83       	std	Z+6, r20	; 0x06
    1072:	57 83       	std	Z+7, r21	; 0x07
    1074:	08 95       	ret

00001076 <__fpcmp_parts_f>:
    1076:	fc 01       	movw	r30, r24
    1078:	db 01       	movw	r26, r22
    107a:	90 81       	ld	r25, Z
    107c:	92 30       	cpi	r25, 0x02	; 2
    107e:	08 f4       	brcc	.+2      	; 0x1082 <__fpcmp_parts_f+0xc>
    1080:	49 c0       	rjmp	.+146    	; 0x1114 <__fpcmp_parts_f+0x9e>
    1082:	8c 91       	ld	r24, X
    1084:	82 30       	cpi	r24, 0x02	; 2
    1086:	08 f4       	brcc	.+2      	; 0x108a <__fpcmp_parts_f+0x14>
    1088:	45 c0       	rjmp	.+138    	; 0x1114 <__fpcmp_parts_f+0x9e>
    108a:	94 30       	cpi	r25, 0x04	; 4
    108c:	51 f4       	brne	.+20     	; 0x10a2 <__fpcmp_parts_f+0x2c>
    108e:	61 81       	ldd	r22, Z+1	; 0x01
    1090:	84 30       	cpi	r24, 0x04	; 4
    1092:	b1 f5       	brne	.+108    	; 0x1100 <__fpcmp_parts_f+0x8a>
    1094:	11 96       	adiw	r26, 0x01	; 1
    1096:	2c 91       	ld	r18, X
    1098:	11 97       	sbiw	r26, 0x01	; 1
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	26 1b       	sub	r18, r22
    109e:	31 09       	sbc	r19, r1
    10a0:	41 c0       	rjmp	.+130    	; 0x1124 <__fpcmp_parts_f+0xae>
    10a2:	84 30       	cpi	r24, 0x04	; 4
    10a4:	21 f0       	breq	.+8      	; 0x10ae <__fpcmp_parts_f+0x38>
    10a6:	92 30       	cpi	r25, 0x02	; 2
    10a8:	41 f4       	brne	.+16     	; 0x10ba <__fpcmp_parts_f+0x44>
    10aa:	82 30       	cpi	r24, 0x02	; 2
    10ac:	b1 f1       	breq	.+108    	; 0x111a <__fpcmp_parts_f+0xa4>
    10ae:	11 96       	adiw	r26, 0x01	; 1
    10b0:	8c 91       	ld	r24, X
    10b2:	11 97       	sbiw	r26, 0x01	; 1
    10b4:	88 23       	and	r24, r24
    10b6:	a1 f1       	breq	.+104    	; 0x1120 <__fpcmp_parts_f+0xaa>
    10b8:	2d c0       	rjmp	.+90     	; 0x1114 <__fpcmp_parts_f+0x9e>
    10ba:	61 81       	ldd	r22, Z+1	; 0x01
    10bc:	82 30       	cpi	r24, 0x02	; 2
    10be:	01 f1       	breq	.+64     	; 0x1100 <__fpcmp_parts_f+0x8a>
    10c0:	11 96       	adiw	r26, 0x01	; 1
    10c2:	8c 91       	ld	r24, X
    10c4:	11 97       	sbiw	r26, 0x01	; 1
    10c6:	68 17       	cp	r22, r24
    10c8:	d9 f4       	brne	.+54     	; 0x1100 <__fpcmp_parts_f+0x8a>
    10ca:	22 81       	ldd	r18, Z+2	; 0x02
    10cc:	33 81       	ldd	r19, Z+3	; 0x03
    10ce:	12 96       	adiw	r26, 0x02	; 2
    10d0:	8d 91       	ld	r24, X+
    10d2:	9c 91       	ld	r25, X
    10d4:	13 97       	sbiw	r26, 0x03	; 3
    10d6:	82 17       	cp	r24, r18
    10d8:	93 07       	cpc	r25, r19
    10da:	94 f0       	brlt	.+36     	; 0x1100 <__fpcmp_parts_f+0x8a>
    10dc:	28 17       	cp	r18, r24
    10de:	39 07       	cpc	r19, r25
    10e0:	bc f0       	brlt	.+46     	; 0x1110 <__fpcmp_parts_f+0x9a>
    10e2:	24 81       	ldd	r18, Z+4	; 0x04
    10e4:	35 81       	ldd	r19, Z+5	; 0x05
    10e6:	46 81       	ldd	r20, Z+6	; 0x06
    10e8:	57 81       	ldd	r21, Z+7	; 0x07
    10ea:	14 96       	adiw	r26, 0x04	; 4
    10ec:	8d 91       	ld	r24, X+
    10ee:	9d 91       	ld	r25, X+
    10f0:	0d 90       	ld	r0, X+
    10f2:	bc 91       	ld	r27, X
    10f4:	a0 2d       	mov	r26, r0
    10f6:	82 17       	cp	r24, r18
    10f8:	93 07       	cpc	r25, r19
    10fa:	a4 07       	cpc	r26, r20
    10fc:	b5 07       	cpc	r27, r21
    10fe:	18 f4       	brcc	.+6      	; 0x1106 <__fpcmp_parts_f+0x90>
    1100:	66 23       	and	r22, r22
    1102:	41 f0       	breq	.+16     	; 0x1114 <__fpcmp_parts_f+0x9e>
    1104:	0d c0       	rjmp	.+26     	; 0x1120 <__fpcmp_parts_f+0xaa>
    1106:	28 17       	cp	r18, r24
    1108:	39 07       	cpc	r19, r25
    110a:	4a 07       	cpc	r20, r26
    110c:	5b 07       	cpc	r21, r27
    110e:	28 f4       	brcc	.+10     	; 0x111a <__fpcmp_parts_f+0xa4>
    1110:	66 23       	and	r22, r22
    1112:	31 f0       	breq	.+12     	; 0x1120 <__fpcmp_parts_f+0xaa>
    1114:	21 e0       	ldi	r18, 0x01	; 1
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	05 c0       	rjmp	.+10     	; 0x1124 <__fpcmp_parts_f+0xae>
    111a:	20 e0       	ldi	r18, 0x00	; 0
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <__fpcmp_parts_f+0xae>
    1120:	2f ef       	ldi	r18, 0xFF	; 255
    1122:	3f ef       	ldi	r19, 0xFF	; 255
    1124:	c9 01       	movw	r24, r18
    1126:	08 95       	ret

00001128 <__prologue_saves__>:
    1128:	2f 92       	push	r2
    112a:	3f 92       	push	r3
    112c:	4f 92       	push	r4
    112e:	5f 92       	push	r5
    1130:	6f 92       	push	r6
    1132:	7f 92       	push	r7
    1134:	8f 92       	push	r8
    1136:	9f 92       	push	r9
    1138:	af 92       	push	r10
    113a:	bf 92       	push	r11
    113c:	cf 92       	push	r12
    113e:	df 92       	push	r13
    1140:	ef 92       	push	r14
    1142:	ff 92       	push	r15
    1144:	0f 93       	push	r16
    1146:	1f 93       	push	r17
    1148:	cf 93       	push	r28
    114a:	df 93       	push	r29
    114c:	cd b7       	in	r28, 0x3d	; 61
    114e:	de b7       	in	r29, 0x3e	; 62
    1150:	ca 1b       	sub	r28, r26
    1152:	db 0b       	sbc	r29, r27
    1154:	0f b6       	in	r0, 0x3f	; 63
    1156:	f8 94       	cli
    1158:	de bf       	out	0x3e, r29	; 62
    115a:	0f be       	out	0x3f, r0	; 63
    115c:	cd bf       	out	0x3d, r28	; 61
    115e:	09 94       	ijmp

00001160 <__epilogue_restores__>:
    1160:	2a 88       	ldd	r2, Y+18	; 0x12
    1162:	39 88       	ldd	r3, Y+17	; 0x11
    1164:	48 88       	ldd	r4, Y+16	; 0x10
    1166:	5f 84       	ldd	r5, Y+15	; 0x0f
    1168:	6e 84       	ldd	r6, Y+14	; 0x0e
    116a:	7d 84       	ldd	r7, Y+13	; 0x0d
    116c:	8c 84       	ldd	r8, Y+12	; 0x0c
    116e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1170:	aa 84       	ldd	r10, Y+10	; 0x0a
    1172:	b9 84       	ldd	r11, Y+9	; 0x09
    1174:	c8 84       	ldd	r12, Y+8	; 0x08
    1176:	df 80       	ldd	r13, Y+7	; 0x07
    1178:	ee 80       	ldd	r14, Y+6	; 0x06
    117a:	fd 80       	ldd	r15, Y+5	; 0x05
    117c:	0c 81       	ldd	r16, Y+4	; 0x04
    117e:	1b 81       	ldd	r17, Y+3	; 0x03
    1180:	aa 81       	ldd	r26, Y+2	; 0x02
    1182:	b9 81       	ldd	r27, Y+1	; 0x01
    1184:	ce 0f       	add	r28, r30
    1186:	d1 1d       	adc	r29, r1
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	f8 94       	cli
    118c:	de bf       	out	0x3e, r29	; 62
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	cd bf       	out	0x3d, r28	; 61
    1192:	ed 01       	movw	r28, r26
    1194:	08 95       	ret

00001196 <_exit>:
    1196:	f8 94       	cli

00001198 <__stop_program>:
    1198:	ff cf       	rjmp	.-2      	; 0x1198 <__stop_program>
