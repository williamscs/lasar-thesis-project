
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001438  000014cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001438  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010c  0080010c  000014d8  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000014d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00001c29  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000278  00000000  00000000  00001dc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000241d  00000000  00000000  00002041  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000117f  00000000  00000000  0000445e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000185f  00000000  00000000  000055dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  00006e3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000475  00000000  00000000  0000707c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  000074f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000062c  00000000  00000000  00008116  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  00008742  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 9c 03 	jmp	0x738	; 0x738 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__vector_15>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 40 02 	jmp	0x480	; 0x480 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e3       	ldi	r30, 0x38	; 56
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 30       	cpi	r26, 0x0F	; 15
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 1a 0a 	jmp	0x1434	; 0x1434 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile unsigned int count = 0;
volatile uint8_t rxflag = 0;
volatile uint8_t zerocross = 1;

int main(void)
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	a0 97       	sbiw	r28, 0x20	; 32
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	DDRB = (1<<PORTB0);
      be:	84 e2       	ldi	r24, 0x24	; 36
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
	DDRD = (1 << PORTD3);
      c8:	8a e2       	ldi	r24, 0x2A	; 42
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	28 e0       	ldi	r18, 0x08	; 8
      ce:	fc 01       	movw	r30, r24
      d0:	20 83       	st	Z, r18
	DDRD &= ~(1 << PORTD2);
      d2:	8a e2       	ldi	r24, 0x2A	; 42
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	2a e2       	ldi	r18, 0x2A	; 42
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	f9 01       	movw	r30, r18
      dc:	20 81       	ld	r18, Z
      de:	2b 7f       	andi	r18, 0xFB	; 251
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
	PORTB &= ~(1 << PORTB0);
      e4:	85 e2       	ldi	r24, 0x25	; 37
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	25 e2       	ldi	r18, 0x25	; 37
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	2e 7f       	andi	r18, 0xFE	; 254
      f2:	fc 01       	movw	r30, r24
      f4:	20 83       	st	Z, r18
	/*
	_delay_ms(10000);
	dim = 30;
	*/
	
			PORTD |= (1 << PORTD3);
      f6:	8b e2       	ldi	r24, 0x2B	; 43
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	2b e2       	ldi	r18, 0x2B	; 43
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	f9 01       	movw	r30, r18
     100:	20 81       	ld	r18, Z
     102:	28 60       	ori	r18, 0x08	; 8
     104:	fc 01       	movw	r30, r24
     106:	20 83       	st	Z, r18
	initTimer(65);
     108:	81 e4       	ldi	r24, 0x41	; 65
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <initTimer>
	initInterrupt0();
     110:	0e 94 0f 02 	call	0x41e	; 0x41e <initInterrupt0>
	dim = 1;
     114:	81 e0       	ldi	r24, 0x01	; 1
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	90 93 01 01 	sts	0x0101, r25
     11c:	80 93 00 01 	sts	0x0100, r24
	
	// turn on interrupts
	sei();
     120:	78 94       	sei
	
	while(1)
	{
		for( int j = 1; j < 115; ++j )
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	9a 83       	std	Y+2, r25	; 0x02
     128:	89 83       	std	Y+1, r24	; 0x01
     12a:	94 c0       	rjmp	.+296    	; 0x254 <main+0x1ae>
		{
			PORTD |= (1 << PORTD3);
     12c:	8b e2       	ldi	r24, 0x2B	; 43
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	2b e2       	ldi	r18, 0x2B	; 43
     132:	30 e0       	ldi	r19, 0x00	; 0
     134:	f9 01       	movw	r30, r18
     136:	20 81       	ld	r18, Z
     138:	28 60       	ori	r18, 0x08	; 8
     13a:	fc 01       	movw	r30, r24
     13c:	20 83       	st	Z, r18
			dim = j;
     13e:	89 81       	ldd	r24, Y+1	; 0x01
     140:	9a 81       	ldd	r25, Y+2	; 0x02
     142:	90 93 01 01 	sts	0x0101, r25
     146:	80 93 00 01 	sts	0x0100, r24
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	a0 e2       	ldi	r26, 0x20	; 32
     150:	b2 e4       	ldi	r27, 0x42	; 66
     152:	8d 83       	std	Y+5, r24	; 0x05
     154:	9e 83       	std	Y+6, r25	; 0x06
     156:	af 83       	std	Y+7, r26	; 0x07
     158:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     15a:	6d 81       	ldd	r22, Y+5	; 0x05
     15c:	7e 81       	ldd	r23, Y+6	; 0x06
     15e:	8f 81       	ldd	r24, Y+7	; 0x07
     160:	98 85       	ldd	r25, Y+8	; 0x08
     162:	20 e0       	ldi	r18, 0x00	; 0
     164:	30 e0       	ldi	r19, 0x00	; 0
     166:	4a e7       	ldi	r20, 0x7A	; 122
     168:	55 e4       	ldi	r21, 0x45	; 69
     16a:	0e 94 c9 05 	call	0xb92	; 0xb92 <__mulsf3>
     16e:	dc 01       	movw	r26, r24
     170:	cb 01       	movw	r24, r22
     172:	89 87       	std	Y+9, r24	; 0x09
     174:	9a 87       	std	Y+10, r25	; 0x0a
     176:	ab 87       	std	Y+11, r26	; 0x0b
     178:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     17a:	11 e0       	ldi	r17, 0x01	; 1
     17c:	69 85       	ldd	r22, Y+9	; 0x09
     17e:	7a 85       	ldd	r23, Y+10	; 0x0a
     180:	8b 85       	ldd	r24, Y+11	; 0x0b
     182:	9c 85       	ldd	r25, Y+12	; 0x0c
     184:	20 e0       	ldi	r18, 0x00	; 0
     186:	30 e0       	ldi	r19, 0x00	; 0
     188:	40 e8       	ldi	r20, 0x80	; 128
     18a:	5f e3       	ldi	r21, 0x3F	; 63
     18c:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__ltsf2>
     190:	88 23       	and	r24, r24
     192:	0c f0       	brlt	.+2      	; 0x196 <main+0xf0>
     194:	10 e0       	ldi	r17, 0x00	; 0
     196:	11 23       	and	r17, r17
     198:	29 f0       	breq	.+10     	; 0x1a4 <main+0xfe>
		__ticks = 1;
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	9e 87       	std	Y+14, r25	; 0x0e
     1a0:	8d 87       	std	Y+13, r24	; 0x0d
     1a2:	46 c0       	rjmp	.+140    	; 0x230 <main+0x18a>
	else if (__tmp > 65535)
     1a4:	11 e0       	ldi	r17, 0x01	; 1
     1a6:	69 85       	ldd	r22, Y+9	; 0x09
     1a8:	7a 85       	ldd	r23, Y+10	; 0x0a
     1aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     1ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     1ae:	20 e0       	ldi	r18, 0x00	; 0
     1b0:	3f ef       	ldi	r19, 0xFF	; 255
     1b2:	4f e7       	ldi	r20, 0x7F	; 127
     1b4:	57 e4       	ldi	r21, 0x47	; 71
     1b6:	0e 94 71 07 	call	0xee2	; 0xee2 <__gtsf2>
     1ba:	18 16       	cp	r1, r24
     1bc:	0c f0       	brlt	.+2      	; 0x1c0 <main+0x11a>
     1be:	10 e0       	ldi	r17, 0x00	; 0
     1c0:	11 23       	and	r17, r17
     1c2:	61 f1       	breq	.+88     	; 0x21c <main+0x176>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1c4:	6d 81       	ldd	r22, Y+5	; 0x05
     1c6:	7e 81       	ldd	r23, Y+6	; 0x06
     1c8:	8f 81       	ldd	r24, Y+7	; 0x07
     1ca:	98 85       	ldd	r25, Y+8	; 0x08
     1cc:	20 e0       	ldi	r18, 0x00	; 0
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	40 e2       	ldi	r20, 0x20	; 32
     1d2:	51 e4       	ldi	r21, 0x41	; 65
     1d4:	0e 94 c9 05 	call	0xb92	; 0xb92 <__mulsf3>
     1d8:	dc 01       	movw	r26, r24
     1da:	cb 01       	movw	r24, r22
     1dc:	bc 01       	movw	r22, r24
     1de:	cd 01       	movw	r24, r26
     1e0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixunssfsi>
     1e4:	dc 01       	movw	r26, r24
     1e6:	cb 01       	movw	r24, r22
     1e8:	9e 87       	std	Y+14, r25	; 0x0e
     1ea:	8d 87       	std	Y+13, r24	; 0x0d
     1ec:	12 c0       	rjmp	.+36     	; 0x212 <main+0x16c>
     1ee:	80 e9       	ldi	r24, 0x90	; 144
     1f0:	91 e0       	ldi	r25, 0x01	; 1
     1f2:	98 8b       	std	Y+16, r25	; 0x10
     1f4:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1f6:	8f 85       	ldd	r24, Y+15	; 0x0f
     1f8:	98 89       	ldd	r25, Y+16	; 0x10
     1fa:	8c 01       	movw	r16, r24
     1fc:	c8 01       	movw	r24, r16
     1fe:	01 97       	sbiw	r24, 0x01	; 1
     200:	f1 f7       	brne	.-4      	; 0x1fe <main+0x158>
     202:	8c 01       	movw	r16, r24
     204:	18 8b       	std	Y+16, r17	; 0x10
     206:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     208:	8d 85       	ldd	r24, Y+13	; 0x0d
     20a:	9e 85       	ldd	r25, Y+14	; 0x0e
     20c:	01 97       	sbiw	r24, 0x01	; 1
     20e:	9e 87       	std	Y+14, r25	; 0x0e
     210:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     212:	8d 85       	ldd	r24, Y+13	; 0x0d
     214:	9e 85       	ldd	r25, Y+14	; 0x0e
     216:	00 97       	sbiw	r24, 0x00	; 0
     218:	51 f7       	brne	.-44     	; 0x1ee <main+0x148>
     21a:	17 c0       	rjmp	.+46     	; 0x24a <main+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     21c:	69 85       	ldd	r22, Y+9	; 0x09
     21e:	7a 85       	ldd	r23, Y+10	; 0x0a
     220:	8b 85       	ldd	r24, Y+11	; 0x0b
     222:	9c 85       	ldd	r25, Y+12	; 0x0c
     224:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixunssfsi>
     228:	dc 01       	movw	r26, r24
     22a:	cb 01       	movw	r24, r22
     22c:	9e 87       	std	Y+14, r25	; 0x0e
     22e:	8d 87       	std	Y+13, r24	; 0x0d
     230:	8d 85       	ldd	r24, Y+13	; 0x0d
     232:	9e 85       	ldd	r25, Y+14	; 0x0e
     234:	9a 8b       	std	Y+18, r25	; 0x12
     236:	89 8b       	std	Y+17, r24	; 0x11
     238:	89 89       	ldd	r24, Y+17	; 0x11
     23a:	9a 89       	ldd	r25, Y+18	; 0x12
     23c:	8c 01       	movw	r16, r24
     23e:	f8 01       	movw	r30, r16
     240:	31 97       	sbiw	r30, 0x01	; 1
     242:	f1 f7       	brne	.-4      	; 0x240 <main+0x19a>
     244:	8f 01       	movw	r16, r30
     246:	1a 8b       	std	Y+18, r17	; 0x12
     248:	09 8b       	std	Y+17, r16	; 0x11
	// turn on interrupts
	sei();
	
	while(1)
	{
		for( int j = 1; j < 115; ++j )
     24a:	89 81       	ldd	r24, Y+1	; 0x01
     24c:	9a 81       	ldd	r25, Y+2	; 0x02
     24e:	01 96       	adiw	r24, 0x01	; 1
     250:	9a 83       	std	Y+2, r25	; 0x02
     252:	89 83       	std	Y+1, r24	; 0x01
     254:	89 81       	ldd	r24, Y+1	; 0x01
     256:	9a 81       	ldd	r25, Y+2	; 0x02
     258:	83 37       	cpi	r24, 0x73	; 115
     25a:	91 05       	cpc	r25, r1
     25c:	0c f4       	brge	.+2      	; 0x260 <main+0x1ba>
     25e:	66 cf       	rjmp	.-308    	; 0x12c <main+0x86>
		{
			PORTD |= (1 << PORTD3);
			dim = j;
			_delay_ms(40);
		}
		for( int j = 115; j > 1; --j)
     260:	83 e7       	ldi	r24, 0x73	; 115
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	9c 83       	std	Y+4, r25	; 0x04
     266:	8b 83       	std	Y+3, r24	; 0x03
     268:	94 c0       	rjmp	.+296    	; 0x392 <main+0x2ec>
		{
			PORTD &= ~(1 << PORTD3);
     26a:	8b e2       	ldi	r24, 0x2B	; 43
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	2b e2       	ldi	r18, 0x2B	; 43
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	f9 01       	movw	r30, r18
     274:	20 81       	ld	r18, Z
     276:	27 7f       	andi	r18, 0xF7	; 247
     278:	fc 01       	movw	r30, r24
     27a:	20 83       	st	Z, r18
			dim = j;
     27c:	8b 81       	ldd	r24, Y+3	; 0x03
     27e:	9c 81       	ldd	r25, Y+4	; 0x04
     280:	90 93 01 01 	sts	0x0101, r25
     284:	80 93 00 01 	sts	0x0100, r24
     288:	80 e0       	ldi	r24, 0x00	; 0
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	a0 e2       	ldi	r26, 0x20	; 32
     28e:	b2 e4       	ldi	r27, 0x42	; 66
     290:	8b 8b       	std	Y+19, r24	; 0x13
     292:	9c 8b       	std	Y+20, r25	; 0x14
     294:	ad 8b       	std	Y+21, r26	; 0x15
     296:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     298:	6b 89       	ldd	r22, Y+19	; 0x13
     29a:	7c 89       	ldd	r23, Y+20	; 0x14
     29c:	8d 89       	ldd	r24, Y+21	; 0x15
     29e:	9e 89       	ldd	r25, Y+22	; 0x16
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	4a e7       	ldi	r20, 0x7A	; 122
     2a6:	55 e4       	ldi	r21, 0x45	; 69
     2a8:	0e 94 c9 05 	call	0xb92	; 0xb92 <__mulsf3>
     2ac:	dc 01       	movw	r26, r24
     2ae:	cb 01       	movw	r24, r22
     2b0:	8f 8b       	std	Y+23, r24	; 0x17
     2b2:	98 8f       	std	Y+24, r25	; 0x18
     2b4:	a9 8f       	std	Y+25, r26	; 0x19
     2b6:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     2b8:	11 e0       	ldi	r17, 0x01	; 1
     2ba:	6f 89       	ldd	r22, Y+23	; 0x17
     2bc:	78 8d       	ldd	r23, Y+24	; 0x18
     2be:	89 8d       	ldd	r24, Y+25	; 0x19
     2c0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2c2:	20 e0       	ldi	r18, 0x00	; 0
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	40 e8       	ldi	r20, 0x80	; 128
     2c8:	5f e3       	ldi	r21, 0x3F	; 63
     2ca:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__ltsf2>
     2ce:	88 23       	and	r24, r24
     2d0:	0c f0       	brlt	.+2      	; 0x2d4 <main+0x22e>
     2d2:	10 e0       	ldi	r17, 0x00	; 0
     2d4:	11 23       	and	r17, r17
     2d6:	29 f0       	breq	.+10     	; 0x2e2 <main+0x23c>
		__ticks = 1;
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	9c 8f       	std	Y+28, r25	; 0x1c
     2de:	8b 8f       	std	Y+27, r24	; 0x1b
     2e0:	46 c0       	rjmp	.+140    	; 0x36e <main+0x2c8>
	else if (__tmp > 65535)
     2e2:	11 e0       	ldi	r17, 0x01	; 1
     2e4:	6f 89       	ldd	r22, Y+23	; 0x17
     2e6:	78 8d       	ldd	r23, Y+24	; 0x18
     2e8:	89 8d       	ldd	r24, Y+25	; 0x19
     2ea:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	3f ef       	ldi	r19, 0xFF	; 255
     2f0:	4f e7       	ldi	r20, 0x7F	; 127
     2f2:	57 e4       	ldi	r21, 0x47	; 71
     2f4:	0e 94 71 07 	call	0xee2	; 0xee2 <__gtsf2>
     2f8:	18 16       	cp	r1, r24
     2fa:	0c f0       	brlt	.+2      	; 0x2fe <main+0x258>
     2fc:	10 e0       	ldi	r17, 0x00	; 0
     2fe:	11 23       	and	r17, r17
     300:	61 f1       	breq	.+88     	; 0x35a <main+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     302:	6b 89       	ldd	r22, Y+19	; 0x13
     304:	7c 89       	ldd	r23, Y+20	; 0x14
     306:	8d 89       	ldd	r24, Y+21	; 0x15
     308:	9e 89       	ldd	r25, Y+22	; 0x16
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	40 e2       	ldi	r20, 0x20	; 32
     310:	51 e4       	ldi	r21, 0x41	; 65
     312:	0e 94 c9 05 	call	0xb92	; 0xb92 <__mulsf3>
     316:	dc 01       	movw	r26, r24
     318:	cb 01       	movw	r24, r22
     31a:	bc 01       	movw	r22, r24
     31c:	cd 01       	movw	r24, r26
     31e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixunssfsi>
     322:	dc 01       	movw	r26, r24
     324:	cb 01       	movw	r24, r22
     326:	9c 8f       	std	Y+28, r25	; 0x1c
     328:	8b 8f       	std	Y+27, r24	; 0x1b
     32a:	12 c0       	rjmp	.+36     	; 0x350 <main+0x2aa>
     32c:	80 e9       	ldi	r24, 0x90	; 144
     32e:	91 e0       	ldi	r25, 0x01	; 1
     330:	9e 8f       	std	Y+30, r25	; 0x1e
     332:	8d 8f       	std	Y+29, r24	; 0x1d
     334:	8d 8d       	ldd	r24, Y+29	; 0x1d
     336:	9e 8d       	ldd	r25, Y+30	; 0x1e
     338:	8c 01       	movw	r16, r24
     33a:	c8 01       	movw	r24, r16
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	f1 f7       	brne	.-4      	; 0x33c <main+0x296>
     340:	8c 01       	movw	r16, r24
     342:	1e 8f       	std	Y+30, r17	; 0x1e
     344:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     346:	8b 8d       	ldd	r24, Y+27	; 0x1b
     348:	9c 8d       	ldd	r25, Y+28	; 0x1c
     34a:	01 97       	sbiw	r24, 0x01	; 1
     34c:	9c 8f       	std	Y+28, r25	; 0x1c
     34e:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     350:	8b 8d       	ldd	r24, Y+27	; 0x1b
     352:	9c 8d       	ldd	r25, Y+28	; 0x1c
     354:	00 97       	sbiw	r24, 0x00	; 0
     356:	51 f7       	brne	.-44     	; 0x32c <main+0x286>
     358:	17 c0       	rjmp	.+46     	; 0x388 <main+0x2e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     35a:	6f 89       	ldd	r22, Y+23	; 0x17
     35c:	78 8d       	ldd	r23, Y+24	; 0x18
     35e:	89 8d       	ldd	r24, Y+25	; 0x19
     360:	9a 8d       	ldd	r25, Y+26	; 0x1a
     362:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixunssfsi>
     366:	dc 01       	movw	r26, r24
     368:	cb 01       	movw	r24, r22
     36a:	9c 8f       	std	Y+28, r25	; 0x1c
     36c:	8b 8f       	std	Y+27, r24	; 0x1b
     36e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     370:	9c 8d       	ldd	r25, Y+28	; 0x1c
     372:	98 a3       	std	Y+32, r25	; 0x20
     374:	8f 8f       	std	Y+31, r24	; 0x1f
     376:	8f 8d       	ldd	r24, Y+31	; 0x1f
     378:	98 a1       	ldd	r25, Y+32	; 0x20
     37a:	8c 01       	movw	r16, r24
     37c:	f8 01       	movw	r30, r16
     37e:	31 97       	sbiw	r30, 0x01	; 1
     380:	f1 f7       	brne	.-4      	; 0x37e <main+0x2d8>
     382:	8f 01       	movw	r16, r30
     384:	18 a3       	std	Y+32, r17	; 0x20
     386:	0f 8f       	std	Y+31, r16	; 0x1f
		{
			PORTD |= (1 << PORTD3);
			dim = j;
			_delay_ms(40);
		}
		for( int j = 115; j > 1; --j)
     388:	8b 81       	ldd	r24, Y+3	; 0x03
     38a:	9c 81       	ldd	r25, Y+4	; 0x04
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	9c 83       	std	Y+4, r25	; 0x04
     390:	8b 83       	std	Y+3, r24	; 0x03
     392:	8b 81       	ldd	r24, Y+3	; 0x03
     394:	9c 81       	ldd	r25, Y+4	; 0x04
     396:	82 30       	cpi	r24, 0x02	; 2
     398:	91 05       	cpc	r25, r1
     39a:	0c f0       	brlt	.+2      	; 0x39e <main+0x2f8>
     39c:	66 cf       	rjmp	.-308    	; 0x26a <main+0x1c4>
		{
			PORTD &= ~(1 << PORTD3);
			dim = j;
			_delay_ms(40);
		}
	}				
     39e:	c1 ce       	rjmp	.-638    	; 0x122 <main+0x7c>

000003a0 <initTimer>:
    return(0);
}

void initTimer( int dutycycle )
{
     3a0:	df 93       	push	r29
     3a2:	cf 93       	push	r28
     3a4:	00 d0       	rcall	.+0      	; 0x3a6 <initTimer+0x6>
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
     3aa:	9a 83       	std	Y+2, r25	; 0x02
     3ac:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = 255;
     3ae:	87 e4       	ldi	r24, 0x47	; 71
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	2f ef       	ldi	r18, 0xFF	; 255
     3b4:	fc 01       	movw	r30, r24
     3b6:	20 83       	st	Z, r18
	OCR0B = dutycycle;
     3b8:	88 e4       	ldi	r24, 0x48	; 72
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	29 81       	ldd	r18, Y+1	; 0x01
     3be:	fc 01       	movw	r30, r24
     3c0:	20 83       	st	Z, r18
    DDRD |= (1 << PORTD6);         
     3c2:	8a e2       	ldi	r24, 0x2A	; 42
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	2a e2       	ldi	r18, 0x2A	; 42
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	f9 01       	movw	r30, r18
     3cc:	20 81       	ld	r18, Z
     3ce:	20 64       	ori	r18, 0x40	; 64
     3d0:	fc 01       	movw	r30, r24
     3d2:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);
     3d4:	84 e4       	ldi	r24, 0x44	; 68
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	24 e4       	ldi	r18, 0x44	; 68
     3da:	30 e0       	ldi	r19, 0x00	; 0
     3dc:	f9 01       	movw	r30, r18
     3de:	20 81       	ld	r18, Z
     3e0:	20 68       	ori	r18, 0x80	; 128
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
    // set none-inverting mode

    TCCR0A |= (1 << WGM01) | (1 << WGM00);
     3e6:	84 e4       	ldi	r24, 0x44	; 68
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	24 e4       	ldi	r18, 0x44	; 68
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	f9 01       	movw	r30, r18
     3f0:	20 81       	ld	r18, Z
     3f2:	23 60       	ori	r18, 0x03	; 3
     3f4:	fc 01       	movw	r30, r24
     3f6:	20 83       	st	Z, r18
    // set fast PWM Mode

    TCCR0B |= (1 << CS01);
     3f8:	85 e4       	ldi	r24, 0x45	; 69
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	25 e4       	ldi	r18, 0x45	; 69
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	f9 01       	movw	r30, r18
     402:	20 81       	ld	r18, Z
     404:	22 60       	ori	r18, 0x02	; 2
     406:	fc 01       	movw	r30, r24
     408:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0B);
     40a:	8e e6       	ldi	r24, 0x6E	; 110
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	24 e0       	ldi	r18, 0x04	; 4
     410:	fc 01       	movw	r30, r24
     412:	20 83       	st	Z, r18
	//Enable COMPA, COMPB, and OVF interrupts
}
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
     418:	cf 91       	pop	r28
     41a:	df 91       	pop	r29
     41c:	08 95       	ret

0000041e <initInterrupt0>:

void initInterrupt0()
{
     41e:	df 93       	push	r29
     420:	cf 93       	push	r28
     422:	cd b7       	in	r28, 0x3d	; 61
     424:	de b7       	in	r29, 0x3e	; 62
	PORTD |= (1 << PORTD2);
     426:	8b e2       	ldi	r24, 0x2B	; 43
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	2b e2       	ldi	r18, 0x2B	; 43
     42c:	30 e0       	ldi	r19, 0x00	; 0
     42e:	f9 01       	movw	r30, r18
     430:	20 81       	ld	r18, Z
     432:	24 60       	ori	r18, 0x04	; 4
     434:	fc 01       	movw	r30, r24
     436:	20 83       	st	Z, r18
	EICRA = 0b00000010;
     438:	89 e6       	ldi	r24, 0x69	; 105
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	22 e0       	ldi	r18, 0x02	; 2
     43e:	fc 01       	movw	r30, r24
     440:	20 83       	st	Z, r18
	EIMSK |= (1 << INT0);
     442:	8d e3       	ldi	r24, 0x3D	; 61
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	2d e3       	ldi	r18, 0x3D	; 61
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	f9 01       	movw	r30, r18
     44c:	20 81       	ld	r18, Z
     44e:	21 60       	ori	r18, 0x01	; 1
     450:	fc 01       	movw	r30, r24
     452:	20 83       	st	Z, r18
}	
     454:	cf 91       	pop	r28
     456:	df 91       	pop	r29
     458:	08 95       	ret

0000045a <setCycle>:


void setCycle(int dutycycle)
{
     45a:	df 93       	push	r29
     45c:	cf 93       	push	r28
     45e:	00 d0       	rcall	.+0      	; 0x460 <setCycle+0x6>
     460:	cd b7       	in	r28, 0x3d	; 61
     462:	de b7       	in	r29, 0x3e	; 62
     464:	9a 83       	std	Y+2, r25	; 0x02
     466:	89 83       	std	Y+1, r24	; 0x01
	cli();
     468:	f8 94       	cli
	OCR0A = dutycycle;
     46a:	87 e4       	ldi	r24, 0x47	; 71
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	29 81       	ldd	r18, Y+1	; 0x01
     470:	fc 01       	movw	r30, r24
     472:	20 83       	st	Z, r18
	sei();
     474:	78 94       	sei
	return;
}
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	cf 91       	pop	r28
     47c:	df 91       	pop	r29
     47e:	08 95       	ret

00000480 <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     480:	1f 92       	push	r1
     482:	0f 92       	push	r0
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	0f 92       	push	r0
     488:	11 24       	eor	r1, r1
     48a:	8f 93       	push	r24
     48c:	9f 93       	push	r25
     48e:	ef 93       	push	r30
     490:	ff 93       	push	r31
     492:	df 93       	push	r29
     494:	cf 93       	push	r28
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1 << RXC0)) )
     49a:	00 00       	nop
     49c:	80 ec       	ldi	r24, 0xC0	; 192
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	fc 01       	movw	r30, r24
     4a2:	80 81       	ld	r24, Z
     4a4:	88 23       	and	r24, r24
     4a6:	d4 f7       	brge	.-12     	; 0x49c <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	//dim = UDR0;
	rxflag = 1;
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	80 93 0e 01 	sts	0x010E, r24
}
     4ae:	cf 91       	pop	r28
     4b0:	df 91       	pop	r29
     4b2:	ff 91       	pop	r31
     4b4:	ef 91       	pop	r30
     4b6:	9f 91       	pop	r25
     4b8:	8f 91       	pop	r24
     4ba:	0f 90       	pop	r0
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	0f 90       	pop	r0
     4c0:	1f 90       	pop	r1
     4c2:	18 95       	reti

000004c4 <__vector_15>:
 
ISR(TIMER0_COMPB_vect)
{
     4c4:	1f 92       	push	r1
     4c6:	0f 92       	push	r0
     4c8:	0f b6       	in	r0, 0x3f	; 63
     4ca:	0f 92       	push	r0
     4cc:	11 24       	eor	r1, r1
     4ce:	0f 93       	push	r16
     4d0:	1f 93       	push	r17
     4d2:	2f 93       	push	r18
     4d4:	3f 93       	push	r19
     4d6:	4f 93       	push	r20
     4d8:	5f 93       	push	r21
     4da:	6f 93       	push	r22
     4dc:	7f 93       	push	r23
     4de:	8f 93       	push	r24
     4e0:	9f 93       	push	r25
     4e2:	af 93       	push	r26
     4e4:	bf 93       	push	r27
     4e6:	ef 93       	push	r30
     4e8:	ff 93       	push	r31
     4ea:	df 93       	push	r29
     4ec:	cf 93       	push	r28
     4ee:	cd b7       	in	r28, 0x3d	; 61
     4f0:	de b7       	in	r29, 0x3e	; 62
     4f2:	68 97       	sbiw	r28, 0x18	; 24
     4f4:	de bf       	out	0x3e, r29	; 62
     4f6:	cd bf       	out	0x3d, r28	; 61
	if( zerocross == 1) 
     4f8:	80 91 02 01 	lds	r24, 0x0102
     4fc:	81 30       	cpi	r24, 0x01	; 1
     4fe:	09 f0       	breq	.+2      	; 0x502 <__vector_15+0x3e>
     500:	03 c1       	rjmp	.+518    	; 0x708 <__vector_15+0x244>
	{
		if( count >= dim )
     502:	20 91 0c 01 	lds	r18, 0x010C
     506:	30 91 0d 01 	lds	r19, 0x010D
     50a:	80 91 00 01 	lds	r24, 0x0100
     50e:	90 91 01 01 	lds	r25, 0x0101
     512:	28 17       	cp	r18, r24
     514:	39 07       	cpc	r19, r25
     516:	08 f4       	brcc	.+2      	; 0x51a <__vector_15+0x56>
     518:	ee c0       	rjmp	.+476    	; 0x6f6 <__vector_15+0x232>
		{
			PORTB |= (1 << PORTB0);
     51a:	85 e2       	ldi	r24, 0x25	; 37
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	25 e2       	ldi	r18, 0x25	; 37
     520:	30 e0       	ldi	r19, 0x00	; 0
     522:	f9 01       	movw	r30, r18
     524:	20 81       	ld	r18, Z
     526:	21 60       	ori	r18, 0x01	; 1
     528:	fc 01       	movw	r30, r24
     52a:	20 83       	st	Z, r18
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	a0 ea       	ldi	r26, 0xA0	; 160
     532:	b0 e4       	ldi	r27, 0x40	; 64
     534:	89 83       	std	Y+1, r24	; 0x01
     536:	9a 83       	std	Y+2, r25	; 0x02
     538:	ab 83       	std	Y+3, r26	; 0x03
     53a:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     53c:	69 81       	ldd	r22, Y+1	; 0x01
     53e:	7a 81       	ldd	r23, Y+2	; 0x02
     540:	8b 81       	ldd	r24, Y+3	; 0x03
     542:	9c 81       	ldd	r25, Y+4	; 0x04
     544:	2b ea       	ldi	r18, 0xAB	; 171
     546:	3a ea       	ldi	r19, 0xAA	; 170
     548:	4a ea       	ldi	r20, 0xAA	; 170
     54a:	50 e4       	ldi	r21, 0x40	; 64
     54c:	0e 94 c9 05 	call	0xb92	; 0xb92 <__mulsf3>
     550:	dc 01       	movw	r26, r24
     552:	cb 01       	movw	r24, r22
     554:	8d 83       	std	Y+5, r24	; 0x05
     556:	9e 83       	std	Y+6, r25	; 0x06
     558:	af 83       	std	Y+7, r26	; 0x07
     55a:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     55c:	11 e0       	ldi	r17, 0x01	; 1
     55e:	6d 81       	ldd	r22, Y+5	; 0x05
     560:	7e 81       	ldd	r23, Y+6	; 0x06
     562:	8f 81       	ldd	r24, Y+7	; 0x07
     564:	98 85       	ldd	r25, Y+8	; 0x08
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	40 e8       	ldi	r20, 0x80	; 128
     56c:	5f e3       	ldi	r21, 0x3F	; 63
     56e:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__ltsf2>
     572:	88 23       	and	r24, r24
     574:	0c f0       	brlt	.+2      	; 0x578 <__vector_15+0xb4>
     576:	10 e0       	ldi	r17, 0x00	; 0
     578:	11 23       	and	r17, r17
     57a:	19 f0       	breq	.+6      	; 0x582 <__vector_15+0xbe>
		__ticks = 1;
     57c:	81 e0       	ldi	r24, 0x01	; 1
     57e:	89 87       	std	Y+9, r24	; 0x09
     580:	a3 c0       	rjmp	.+326    	; 0x6c8 <__vector_15+0x204>
	else if (__tmp > 255)
     582:	11 e0       	ldi	r17, 0x01	; 1
     584:	6d 81       	ldd	r22, Y+5	; 0x05
     586:	7e 81       	ldd	r23, Y+6	; 0x06
     588:	8f 81       	ldd	r24, Y+7	; 0x07
     58a:	98 85       	ldd	r25, Y+8	; 0x08
     58c:	20 e0       	ldi	r18, 0x00	; 0
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	4f e7       	ldi	r20, 0x7F	; 127
     592:	53 e4       	ldi	r21, 0x43	; 67
     594:	0e 94 71 07 	call	0xee2	; 0xee2 <__gtsf2>
     598:	18 16       	cp	r1, r24
     59a:	0c f0       	brlt	.+2      	; 0x59e <__vector_15+0xda>
     59c:	10 e0       	ldi	r17, 0x00	; 0
     59e:	11 23       	and	r17, r17
     5a0:	09 f4       	brne	.+2      	; 0x5a4 <__vector_15+0xe0>
     5a2:	89 c0       	rjmp	.+274    	; 0x6b6 <__vector_15+0x1f2>
	{
		_delay_ms(__us / 1000.0);
     5a4:	69 81       	ldd	r22, Y+1	; 0x01
     5a6:	7a 81       	ldd	r23, Y+2	; 0x02
     5a8:	8b 81       	ldd	r24, Y+3	; 0x03
     5aa:	9c 81       	ldd	r25, Y+4	; 0x04
     5ac:	20 e0       	ldi	r18, 0x00	; 0
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	4a e7       	ldi	r20, 0x7A	; 122
     5b2:	54 e4       	ldi	r21, 0x44	; 68
     5b4:	0e 94 c3 06 	call	0xd86	; 0xd86 <__divsf3>
     5b8:	dc 01       	movw	r26, r24
     5ba:	cb 01       	movw	r24, r22
     5bc:	8a 87       	std	Y+10, r24	; 0x0a
     5be:	9b 87       	std	Y+11, r25	; 0x0b
     5c0:	ac 87       	std	Y+12, r26	; 0x0c
     5c2:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5c4:	6a 85       	ldd	r22, Y+10	; 0x0a
     5c6:	7b 85       	ldd	r23, Y+11	; 0x0b
     5c8:	8c 85       	ldd	r24, Y+12	; 0x0c
     5ca:	9d 85       	ldd	r25, Y+13	; 0x0d
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	4a e7       	ldi	r20, 0x7A	; 122
     5d2:	55 e4       	ldi	r21, 0x45	; 69
     5d4:	0e 94 c9 05 	call	0xb92	; 0xb92 <__mulsf3>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22
     5dc:	8e 87       	std	Y+14, r24	; 0x0e
     5de:	9f 87       	std	Y+15, r25	; 0x0f
     5e0:	a8 8b       	std	Y+16, r26	; 0x10
     5e2:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     5e4:	11 e0       	ldi	r17, 0x01	; 1
     5e6:	6e 85       	ldd	r22, Y+14	; 0x0e
     5e8:	7f 85       	ldd	r23, Y+15	; 0x0f
     5ea:	88 89       	ldd	r24, Y+16	; 0x10
     5ec:	99 89       	ldd	r25, Y+17	; 0x11
     5ee:	20 e0       	ldi	r18, 0x00	; 0
     5f0:	30 e0       	ldi	r19, 0x00	; 0
     5f2:	40 e8       	ldi	r20, 0x80	; 128
     5f4:	5f e3       	ldi	r21, 0x3F	; 63
     5f6:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__ltsf2>
     5fa:	88 23       	and	r24, r24
     5fc:	0c f0       	brlt	.+2      	; 0x600 <__vector_15+0x13c>
     5fe:	10 e0       	ldi	r17, 0x00	; 0
     600:	11 23       	and	r17, r17
     602:	29 f0       	breq	.+10     	; 0x60e <__vector_15+0x14a>
		__ticks = 1;
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	9b 8b       	std	Y+19, r25	; 0x13
     60a:	8a 8b       	std	Y+18, r24	; 0x12
     60c:	46 c0       	rjmp	.+140    	; 0x69a <__vector_15+0x1d6>
	else if (__tmp > 65535)
     60e:	11 e0       	ldi	r17, 0x01	; 1
     610:	6e 85       	ldd	r22, Y+14	; 0x0e
     612:	7f 85       	ldd	r23, Y+15	; 0x0f
     614:	88 89       	ldd	r24, Y+16	; 0x10
     616:	99 89       	ldd	r25, Y+17	; 0x11
     618:	20 e0       	ldi	r18, 0x00	; 0
     61a:	3f ef       	ldi	r19, 0xFF	; 255
     61c:	4f e7       	ldi	r20, 0x7F	; 127
     61e:	57 e4       	ldi	r21, 0x47	; 71
     620:	0e 94 71 07 	call	0xee2	; 0xee2 <__gtsf2>
     624:	18 16       	cp	r1, r24
     626:	0c f0       	brlt	.+2      	; 0x62a <__vector_15+0x166>
     628:	10 e0       	ldi	r17, 0x00	; 0
     62a:	11 23       	and	r17, r17
     62c:	61 f1       	breq	.+88     	; 0x686 <__vector_15+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     62e:	6a 85       	ldd	r22, Y+10	; 0x0a
     630:	7b 85       	ldd	r23, Y+11	; 0x0b
     632:	8c 85       	ldd	r24, Y+12	; 0x0c
     634:	9d 85       	ldd	r25, Y+13	; 0x0d
     636:	20 e0       	ldi	r18, 0x00	; 0
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	40 e2       	ldi	r20, 0x20	; 32
     63c:	51 e4       	ldi	r21, 0x41	; 65
     63e:	0e 94 c9 05 	call	0xb92	; 0xb92 <__mulsf3>
     642:	dc 01       	movw	r26, r24
     644:	cb 01       	movw	r24, r22
     646:	bc 01       	movw	r22, r24
     648:	cd 01       	movw	r24, r26
     64a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixunssfsi>
     64e:	dc 01       	movw	r26, r24
     650:	cb 01       	movw	r24, r22
     652:	9b 8b       	std	Y+19, r25	; 0x13
     654:	8a 8b       	std	Y+18, r24	; 0x12
     656:	12 c0       	rjmp	.+36     	; 0x67c <__vector_15+0x1b8>
     658:	80 e9       	ldi	r24, 0x90	; 144
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	9d 8b       	std	Y+21, r25	; 0x15
     65e:	8c 8b       	std	Y+20, r24	; 0x14
     660:	8c 89       	ldd	r24, Y+20	; 0x14
     662:	9d 89       	ldd	r25, Y+21	; 0x15
     664:	8c 01       	movw	r16, r24
     666:	c8 01       	movw	r24, r16
     668:	01 97       	sbiw	r24, 0x01	; 1
     66a:	f1 f7       	brne	.-4      	; 0x668 <__vector_15+0x1a4>
     66c:	8c 01       	movw	r16, r24
     66e:	1d 8b       	std	Y+21, r17	; 0x15
     670:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     672:	8a 89       	ldd	r24, Y+18	; 0x12
     674:	9b 89       	ldd	r25, Y+19	; 0x13
     676:	01 97       	sbiw	r24, 0x01	; 1
     678:	9b 8b       	std	Y+19, r25	; 0x13
     67a:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     67c:	8a 89       	ldd	r24, Y+18	; 0x12
     67e:	9b 89       	ldd	r25, Y+19	; 0x13
     680:	00 97       	sbiw	r24, 0x00	; 0
     682:	51 f7       	brne	.-44     	; 0x658 <__vector_15+0x194>
     684:	28 c0       	rjmp	.+80     	; 0x6d6 <__vector_15+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     686:	6e 85       	ldd	r22, Y+14	; 0x0e
     688:	7f 85       	ldd	r23, Y+15	; 0x0f
     68a:	88 89       	ldd	r24, Y+16	; 0x10
     68c:	99 89       	ldd	r25, Y+17	; 0x11
     68e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixunssfsi>
     692:	dc 01       	movw	r26, r24
     694:	cb 01       	movw	r24, r22
     696:	9b 8b       	std	Y+19, r25	; 0x13
     698:	8a 8b       	std	Y+18, r24	; 0x12
     69a:	8a 89       	ldd	r24, Y+18	; 0x12
     69c:	9b 89       	ldd	r25, Y+19	; 0x13
     69e:	9f 8b       	std	Y+23, r25	; 0x17
     6a0:	8e 8b       	std	Y+22, r24	; 0x16
     6a2:	8e 89       	ldd	r24, Y+22	; 0x16
     6a4:	9f 89       	ldd	r25, Y+23	; 0x17
     6a6:	8c 01       	movw	r16, r24
     6a8:	f8 01       	movw	r30, r16
     6aa:	31 97       	sbiw	r30, 0x01	; 1
     6ac:	f1 f7       	brne	.-4      	; 0x6aa <__vector_15+0x1e6>
     6ae:	8f 01       	movw	r16, r30
     6b0:	1f 8b       	std	Y+23, r17	; 0x17
     6b2:	0e 8b       	std	Y+22, r16	; 0x16
     6b4:	10 c0       	rjmp	.+32     	; 0x6d6 <__vector_15+0x212>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     6b6:	6d 81       	ldd	r22, Y+5	; 0x05
     6b8:	7e 81       	ldd	r23, Y+6	; 0x06
     6ba:	8f 81       	ldd	r24, Y+7	; 0x07
     6bc:	98 85       	ldd	r25, Y+8	; 0x08
     6be:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixunssfsi>
     6c2:	dc 01       	movw	r26, r24
     6c4:	cb 01       	movw	r24, r22
     6c6:	89 87       	std	Y+9, r24	; 0x09
     6c8:	89 85       	ldd	r24, Y+9	; 0x09
     6ca:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     6cc:	88 8d       	ldd	r24, Y+24	; 0x18
     6ce:	18 2f       	mov	r17, r24
     6d0:	1a 95       	dec	r17
     6d2:	f1 f7       	brne	.-4      	; 0x6d0 <__vector_15+0x20c>
     6d4:	18 8f       	std	Y+24, r17	; 0x18
			_delay_us( 5 );
			PORTB &= ~(1 << PORTB0);
     6d6:	85 e2       	ldi	r24, 0x25	; 37
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	25 e2       	ldi	r18, 0x25	; 37
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	f9 01       	movw	r30, r18
     6e0:	20 81       	ld	r18, Z
     6e2:	2e 7f       	andi	r18, 0xFE	; 254
     6e4:	fc 01       	movw	r30, r24
     6e6:	20 83       	st	Z, r18
			count = 0;
     6e8:	10 92 0d 01 	sts	0x010D, r1
     6ec:	10 92 0c 01 	sts	0x010C, r1
			zerocross = 0;
     6f0:	10 92 02 01 	sts	0x0102, r1
     6f4:	09 c0       	rjmp	.+18     	; 0x708 <__vector_15+0x244>
		}
		else
		{
			
			count = count + 1;
     6f6:	80 91 0c 01 	lds	r24, 0x010C
     6fa:	90 91 0d 01 	lds	r25, 0x010D
     6fe:	01 96       	adiw	r24, 0x01	; 1
     700:	90 93 0d 01 	sts	0x010D, r25
     704:	80 93 0c 01 	sts	0x010C, r24
		}
	}
}
     708:	68 96       	adiw	r28, 0x18	; 24
     70a:	de bf       	out	0x3e, r29	; 62
     70c:	cd bf       	out	0x3d, r28	; 61
     70e:	cf 91       	pop	r28
     710:	df 91       	pop	r29
     712:	ff 91       	pop	r31
     714:	ef 91       	pop	r30
     716:	bf 91       	pop	r27
     718:	af 91       	pop	r26
     71a:	9f 91       	pop	r25
     71c:	8f 91       	pop	r24
     71e:	7f 91       	pop	r23
     720:	6f 91       	pop	r22
     722:	5f 91       	pop	r21
     724:	4f 91       	pop	r20
     726:	3f 91       	pop	r19
     728:	2f 91       	pop	r18
     72a:	1f 91       	pop	r17
     72c:	0f 91       	pop	r16
     72e:	0f 90       	pop	r0
     730:	0f be       	out	0x3f, r0	; 63
     732:	0f 90       	pop	r0
     734:	1f 90       	pop	r1
     736:	18 95       	reti

00000738 <__vector_1>:

ISR(INT0_vect)
{
     738:	1f 92       	push	r1
     73a:	0f 92       	push	r0
     73c:	0f b6       	in	r0, 0x3f	; 63
     73e:	0f 92       	push	r0
     740:	11 24       	eor	r1, r1
     742:	8f 93       	push	r24
     744:	df 93       	push	r29
     746:	cf 93       	push	r28
     748:	cd b7       	in	r28, 0x3d	; 61
     74a:	de b7       	in	r29, 0x3e	; 62
	zerocross = 1;
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	80 93 02 01 	sts	0x0102, r24
     752:	cf 91       	pop	r28
     754:	df 91       	pop	r29
     756:	8f 91       	pop	r24
     758:	0f 90       	pop	r0
     75a:	0f be       	out	0x3f, r0	; 63
     75c:	0f 90       	pop	r0
     75e:	1f 90       	pop	r1
     760:	18 95       	reti

00000762 <USART_Init>:
 */ 

#include <avr\io.h> 

void USART_Init( unsigned int ubrr)
{
     762:	df 93       	push	r29
     764:	cf 93       	push	r28
     766:	00 d0       	rcall	.+0      	; 0x768 <USART_Init+0x6>
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
     76c:	9a 83       	std	Y+2, r25	; 0x02
     76e:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     770:	85 ec       	ldi	r24, 0xC5	; 197
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	29 81       	ldd	r18, Y+1	; 0x01
     776:	3a 81       	ldd	r19, Y+2	; 0x02
     778:	23 2f       	mov	r18, r19
     77a:	33 27       	eor	r19, r19
     77c:	fc 01       	movw	r30, r24
     77e:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     780:	84 ec       	ldi	r24, 0xC4	; 196
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	29 81       	ldd	r18, Y+1	; 0x01
     786:	fc 01       	movw	r30, r24
     788:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     78a:	81 ec       	ldi	r24, 0xC1	; 193
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	28 e9       	ldi	r18, 0x98	; 152
     790:	fc 01       	movw	r30, r24
     792:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     794:	82 ec       	ldi	r24, 0xC2	; 194
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	26 e0       	ldi	r18, 0x06	; 6
     79a:	fc 01       	movw	r30, r24
     79c:	20 83       	st	Z, r18
}
     79e:	0f 90       	pop	r0
     7a0:	0f 90       	pop	r0
     7a2:	cf 91       	pop	r28
     7a4:	df 91       	pop	r29
     7a6:	08 95       	ret

000007a8 <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     7a8:	df 93       	push	r29
     7aa:	cf 93       	push	r28
     7ac:	0f 92       	push	r0
     7ae:	cd b7       	in	r28, 0x3d	; 61
     7b0:	de b7       	in	r29, 0x3e	; 62
     7b2:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     7b4:	00 00       	nop
     7b6:	80 ec       	ldi	r24, 0xC0	; 192
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	fc 01       	movw	r30, r24
     7bc:	80 81       	ld	r24, Z
     7be:	88 2f       	mov	r24, r24
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	80 72       	andi	r24, 0x20	; 32
     7c4:	90 70       	andi	r25, 0x00	; 0
     7c6:	00 97       	sbiw	r24, 0x00	; 0
     7c8:	b1 f3       	breq	.-20     	; 0x7b6 <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     7ca:	86 ec       	ldi	r24, 0xC6	; 198
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	29 81       	ldd	r18, Y+1	; 0x01
     7d0:	fc 01       	movw	r30, r24
     7d2:	20 83       	st	Z, r18
}
     7d4:	0f 90       	pop	r0
     7d6:	cf 91       	pop	r28
     7d8:	df 91       	pop	r29
     7da:	08 95       	ret

000007dc <USART_Receive>:


unsigned char USART_Receive( void )
{
     7dc:	df 93       	push	r29
     7de:	cf 93       	push	r28
     7e0:	cd b7       	in	r28, 0x3d	; 61
     7e2:	de b7       	in	r29, 0x3e	; 62
	
}
     7e4:	cf 91       	pop	r28
     7e6:	df 91       	pop	r29
     7e8:	08 95       	ret

000007ea <__fixunssfsi>:
     7ea:	ef 92       	push	r14
     7ec:	ff 92       	push	r15
     7ee:	0f 93       	push	r16
     7f0:	1f 93       	push	r17
     7f2:	7b 01       	movw	r14, r22
     7f4:	8c 01       	movw	r16, r24
     7f6:	20 e0       	ldi	r18, 0x00	; 0
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	40 e0       	ldi	r20, 0x00	; 0
     7fc:	5f e4       	ldi	r21, 0x4F	; 79
     7fe:	0e 94 a1 07 	call	0xf42	; 0xf42 <__gesf2>
     802:	87 fd       	sbrc	r24, 7
     804:	11 c0       	rjmp	.+34     	; 0x828 <__fixunssfsi+0x3e>
     806:	c8 01       	movw	r24, r16
     808:	b7 01       	movw	r22, r14
     80a:	20 e0       	ldi	r18, 0x00	; 0
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	5f e4       	ldi	r21, 0x4F	; 79
     812:	0e 94 98 05 	call	0xb30	; 0xb30 <__subsf3>
     816:	0e 94 01 08 	call	0x1002	; 0x1002 <__fixsfsi>
     81a:	9b 01       	movw	r18, r22
     81c:	ac 01       	movw	r20, r24
     81e:	20 50       	subi	r18, 0x00	; 0
     820:	30 40       	sbci	r19, 0x00	; 0
     822:	40 40       	sbci	r20, 0x00	; 0
     824:	50 48       	sbci	r21, 0x80	; 128
     826:	06 c0       	rjmp	.+12     	; 0x834 <__fixunssfsi+0x4a>
     828:	c8 01       	movw	r24, r16
     82a:	b7 01       	movw	r22, r14
     82c:	0e 94 01 08 	call	0x1002	; 0x1002 <__fixsfsi>
     830:	9b 01       	movw	r18, r22
     832:	ac 01       	movw	r20, r24
     834:	b9 01       	movw	r22, r18
     836:	ca 01       	movw	r24, r20
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	ef 90       	pop	r14
     840:	08 95       	ret

00000842 <_fpadd_parts>:
     842:	a0 e0       	ldi	r26, 0x00	; 0
     844:	b0 e0       	ldi	r27, 0x00	; 0
     846:	e7 e2       	ldi	r30, 0x27	; 39
     848:	f4 e0       	ldi	r31, 0x04	; 4
     84a:	0c 94 e7 09 	jmp	0x13ce	; 0x13ce <__prologue_saves__+0x8>
     84e:	fc 01       	movw	r30, r24
     850:	ea 01       	movw	r28, r20
     852:	80 81       	ld	r24, Z
     854:	82 30       	cpi	r24, 0x02	; 2
     856:	08 f4       	brcc	.+2      	; 0x85a <_fpadd_parts+0x18>
     858:	38 c1       	rjmp	.+624    	; 0xaca <__stack+0x1cb>
     85a:	db 01       	movw	r26, r22
     85c:	9c 91       	ld	r25, X
     85e:	92 30       	cpi	r25, 0x02	; 2
     860:	08 f4       	brcc	.+2      	; 0x864 <_fpadd_parts+0x22>
     862:	30 c1       	rjmp	.+608    	; 0xac4 <__stack+0x1c5>
     864:	84 30       	cpi	r24, 0x04	; 4
     866:	59 f4       	brne	.+22     	; 0x87e <_fpadd_parts+0x3c>
     868:	94 30       	cpi	r25, 0x04	; 4
     86a:	09 f0       	breq	.+2      	; 0x86e <_fpadd_parts+0x2c>
     86c:	2e c1       	rjmp	.+604    	; 0xaca <__stack+0x1cb>
     86e:	91 81       	ldd	r25, Z+1	; 0x01
     870:	11 96       	adiw	r26, 0x01	; 1
     872:	8c 91       	ld	r24, X
     874:	11 97       	sbiw	r26, 0x01	; 1
     876:	98 17       	cp	r25, r24
     878:	09 f0       	breq	.+2      	; 0x87c <_fpadd_parts+0x3a>
     87a:	21 c1       	rjmp	.+578    	; 0xabe <__stack+0x1bf>
     87c:	26 c1       	rjmp	.+588    	; 0xaca <__stack+0x1cb>
     87e:	94 30       	cpi	r25, 0x04	; 4
     880:	09 f4       	brne	.+2      	; 0x884 <_fpadd_parts+0x42>
     882:	20 c1       	rjmp	.+576    	; 0xac4 <__stack+0x1c5>
     884:	92 30       	cpi	r25, 0x02	; 2
     886:	b1 f4       	brne	.+44     	; 0x8b4 <_fpadd_parts+0x72>
     888:	82 30       	cpi	r24, 0x02	; 2
     88a:	09 f0       	breq	.+2      	; 0x88e <_fpadd_parts+0x4c>
     88c:	1e c1       	rjmp	.+572    	; 0xaca <__stack+0x1cb>
     88e:	ca 01       	movw	r24, r20
     890:	af 01       	movw	r20, r30
     892:	28 e0       	ldi	r18, 0x08	; 8
     894:	da 01       	movw	r26, r20
     896:	0d 90       	ld	r0, X+
     898:	ad 01       	movw	r20, r26
     89a:	dc 01       	movw	r26, r24
     89c:	0d 92       	st	X+, r0
     89e:	cd 01       	movw	r24, r26
     8a0:	21 50       	subi	r18, 0x01	; 1
     8a2:	c1 f7       	brne	.-16     	; 0x894 <_fpadd_parts+0x52>
     8a4:	db 01       	movw	r26, r22
     8a6:	11 96       	adiw	r26, 0x01	; 1
     8a8:	8c 91       	ld	r24, X
     8aa:	11 97       	sbiw	r26, 0x01	; 1
     8ac:	91 81       	ldd	r25, Z+1	; 0x01
     8ae:	89 23       	and	r24, r25
     8b0:	89 83       	std	Y+1, r24	; 0x01
     8b2:	0a c1       	rjmp	.+532    	; 0xac8 <__stack+0x1c9>
     8b4:	82 30       	cpi	r24, 0x02	; 2
     8b6:	09 f4       	brne	.+2      	; 0x8ba <_fpadd_parts+0x78>
     8b8:	05 c1       	rjmp	.+522    	; 0xac4 <__stack+0x1c5>
     8ba:	c2 80       	ldd	r12, Z+2	; 0x02
     8bc:	d3 80       	ldd	r13, Z+3	; 0x03
     8be:	db 01       	movw	r26, r22
     8c0:	12 96       	adiw	r26, 0x02	; 2
     8c2:	6d 90       	ld	r6, X+
     8c4:	7c 90       	ld	r7, X
     8c6:	13 97       	sbiw	r26, 0x03	; 3
     8c8:	24 81       	ldd	r18, Z+4	; 0x04
     8ca:	35 81       	ldd	r19, Z+5	; 0x05
     8cc:	46 81       	ldd	r20, Z+6	; 0x06
     8ce:	57 81       	ldd	r21, Z+7	; 0x07
     8d0:	14 96       	adiw	r26, 0x04	; 4
     8d2:	ed 90       	ld	r14, X+
     8d4:	fd 90       	ld	r15, X+
     8d6:	0d 91       	ld	r16, X+
     8d8:	1c 91       	ld	r17, X
     8da:	17 97       	sbiw	r26, 0x07	; 7
     8dc:	c6 01       	movw	r24, r12
     8de:	86 19       	sub	r24, r6
     8e0:	97 09       	sbc	r25, r7
     8e2:	5c 01       	movw	r10, r24
     8e4:	97 ff       	sbrs	r25, 7
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <_fpadd_parts+0xae>
     8e8:	aa 24       	eor	r10, r10
     8ea:	bb 24       	eor	r11, r11
     8ec:	a8 1a       	sub	r10, r24
     8ee:	b9 0a       	sbc	r11, r25
     8f0:	b0 e2       	ldi	r27, 0x20	; 32
     8f2:	ab 16       	cp	r10, r27
     8f4:	b1 04       	cpc	r11, r1
     8f6:	0c f0       	brlt	.+2      	; 0x8fa <_fpadd_parts+0xb8>
     8f8:	61 c0       	rjmp	.+194    	; 0x9bc <__stack+0xbd>
     8fa:	18 16       	cp	r1, r24
     8fc:	19 06       	cpc	r1, r25
     8fe:	6c f5       	brge	.+90     	; 0x95a <__stack+0x5b>
     900:	37 01       	movw	r6, r14
     902:	48 01       	movw	r8, r16
     904:	0a 2c       	mov	r0, r10
     906:	04 c0       	rjmp	.+8      	; 0x910 <__stack+0x11>
     908:	96 94       	lsr	r9
     90a:	87 94       	ror	r8
     90c:	77 94       	ror	r7
     90e:	67 94       	ror	r6
     910:	0a 94       	dec	r0
     912:	d2 f7       	brpl	.-12     	; 0x908 <__stack+0x9>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	a0 e0       	ldi	r26, 0x00	; 0
     91a:	b0 e0       	ldi	r27, 0x00	; 0
     91c:	0a 2c       	mov	r0, r10
     91e:	04 c0       	rjmp	.+8      	; 0x928 <__stack+0x29>
     920:	88 0f       	add	r24, r24
     922:	99 1f       	adc	r25, r25
     924:	aa 1f       	adc	r26, r26
     926:	bb 1f       	adc	r27, r27
     928:	0a 94       	dec	r0
     92a:	d2 f7       	brpl	.-12     	; 0x920 <__stack+0x21>
     92c:	01 97       	sbiw	r24, 0x01	; 1
     92e:	a1 09       	sbc	r26, r1
     930:	b1 09       	sbc	r27, r1
     932:	8e 21       	and	r24, r14
     934:	9f 21       	and	r25, r15
     936:	a0 23       	and	r26, r16
     938:	b1 23       	and	r27, r17
     93a:	ee 24       	eor	r14, r14
     93c:	ff 24       	eor	r15, r15
     93e:	87 01       	movw	r16, r14
     940:	e3 94       	inc	r14
     942:	00 97       	sbiw	r24, 0x00	; 0
     944:	a1 05       	cpc	r26, r1
     946:	b1 05       	cpc	r27, r1
     948:	19 f4       	brne	.+6      	; 0x950 <__stack+0x51>
     94a:	ee 24       	eor	r14, r14
     94c:	ff 24       	eor	r15, r15
     94e:	87 01       	movw	r16, r14
     950:	e6 28       	or	r14, r6
     952:	f7 28       	or	r15, r7
     954:	08 29       	or	r16, r8
     956:	19 29       	or	r17, r9
     958:	3c c0       	rjmp	.+120    	; 0x9d2 <__stack+0xd3>
     95a:	00 97       	sbiw	r24, 0x00	; 0
     95c:	d1 f1       	breq	.+116    	; 0x9d2 <__stack+0xd3>
     95e:	ca 0c       	add	r12, r10
     960:	db 1c       	adc	r13, r11
     962:	39 01       	movw	r6, r18
     964:	4a 01       	movw	r8, r20
     966:	0a 2c       	mov	r0, r10
     968:	04 c0       	rjmp	.+8      	; 0x972 <__stack+0x73>
     96a:	96 94       	lsr	r9
     96c:	87 94       	ror	r8
     96e:	77 94       	ror	r7
     970:	67 94       	ror	r6
     972:	0a 94       	dec	r0
     974:	d2 f7       	brpl	.-12     	; 0x96a <__stack+0x6b>
     976:	81 e0       	ldi	r24, 0x01	; 1
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	a0 e0       	ldi	r26, 0x00	; 0
     97c:	b0 e0       	ldi	r27, 0x00	; 0
     97e:	0a 2c       	mov	r0, r10
     980:	04 c0       	rjmp	.+8      	; 0x98a <__stack+0x8b>
     982:	88 0f       	add	r24, r24
     984:	99 1f       	adc	r25, r25
     986:	aa 1f       	adc	r26, r26
     988:	bb 1f       	adc	r27, r27
     98a:	0a 94       	dec	r0
     98c:	d2 f7       	brpl	.-12     	; 0x982 <__stack+0x83>
     98e:	01 97       	sbiw	r24, 0x01	; 1
     990:	a1 09       	sbc	r26, r1
     992:	b1 09       	sbc	r27, r1
     994:	82 23       	and	r24, r18
     996:	93 23       	and	r25, r19
     998:	a4 23       	and	r26, r20
     99a:	b5 23       	and	r27, r21
     99c:	21 e0       	ldi	r18, 0x01	; 1
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	50 e0       	ldi	r21, 0x00	; 0
     9a4:	00 97       	sbiw	r24, 0x00	; 0
     9a6:	a1 05       	cpc	r26, r1
     9a8:	b1 05       	cpc	r27, r1
     9aa:	19 f4       	brne	.+6      	; 0x9b2 <__stack+0xb3>
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	a9 01       	movw	r20, r18
     9b2:	26 29       	or	r18, r6
     9b4:	37 29       	or	r19, r7
     9b6:	48 29       	or	r20, r8
     9b8:	59 29       	or	r21, r9
     9ba:	0b c0       	rjmp	.+22     	; 0x9d2 <__stack+0xd3>
     9bc:	6c 14       	cp	r6, r12
     9be:	7d 04       	cpc	r7, r13
     9c0:	24 f4       	brge	.+8      	; 0x9ca <__stack+0xcb>
     9c2:	ee 24       	eor	r14, r14
     9c4:	ff 24       	eor	r15, r15
     9c6:	87 01       	movw	r16, r14
     9c8:	04 c0       	rjmp	.+8      	; 0x9d2 <__stack+0xd3>
     9ca:	63 01       	movw	r12, r6
     9cc:	20 e0       	ldi	r18, 0x00	; 0
     9ce:	30 e0       	ldi	r19, 0x00	; 0
     9d0:	a9 01       	movw	r20, r18
     9d2:	81 81       	ldd	r24, Z+1	; 0x01
     9d4:	fb 01       	movw	r30, r22
     9d6:	91 81       	ldd	r25, Z+1	; 0x01
     9d8:	89 17       	cp	r24, r25
     9da:	09 f4       	brne	.+2      	; 0x9de <__stack+0xdf>
     9dc:	45 c0       	rjmp	.+138    	; 0xa68 <__stack+0x169>
     9de:	88 23       	and	r24, r24
     9e0:	49 f0       	breq	.+18     	; 0x9f4 <__stack+0xf5>
     9e2:	d8 01       	movw	r26, r16
     9e4:	c7 01       	movw	r24, r14
     9e6:	82 1b       	sub	r24, r18
     9e8:	93 0b       	sbc	r25, r19
     9ea:	a4 0b       	sbc	r26, r20
     9ec:	b5 0b       	sbc	r27, r21
     9ee:	9c 01       	movw	r18, r24
     9f0:	ad 01       	movw	r20, r26
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <__stack+0xfd>
     9f4:	2e 19       	sub	r18, r14
     9f6:	3f 09       	sbc	r19, r15
     9f8:	40 0b       	sbc	r20, r16
     9fa:	51 0b       	sbc	r21, r17
     9fc:	57 fd       	sbrc	r21, 7
     9fe:	04 c0       	rjmp	.+8      	; 0xa08 <__stack+0x109>
     a00:	19 82       	std	Y+1, r1	; 0x01
     a02:	db 82       	std	Y+3, r13	; 0x03
     a04:	ca 82       	std	Y+2, r12	; 0x02
     a06:	0b c0       	rjmp	.+22     	; 0xa1e <__stack+0x11f>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	89 83       	std	Y+1, r24	; 0x01
     a0c:	db 82       	std	Y+3, r13	; 0x03
     a0e:	ca 82       	std	Y+2, r12	; 0x02
     a10:	50 95       	com	r21
     a12:	40 95       	com	r20
     a14:	30 95       	com	r19
     a16:	21 95       	neg	r18
     a18:	3f 4f       	sbci	r19, 0xFF	; 255
     a1a:	4f 4f       	sbci	r20, 0xFF	; 255
     a1c:	5f 4f       	sbci	r21, 0xFF	; 255
     a1e:	2c 83       	std	Y+4, r18	; 0x04
     a20:	3d 83       	std	Y+5, r19	; 0x05
     a22:	4e 83       	std	Y+6, r20	; 0x06
     a24:	5f 83       	std	Y+7, r21	; 0x07
     a26:	0d c0       	rjmp	.+26     	; 0xa42 <__stack+0x143>
     a28:	88 0f       	add	r24, r24
     a2a:	99 1f       	adc	r25, r25
     a2c:	aa 1f       	adc	r26, r26
     a2e:	bb 1f       	adc	r27, r27
     a30:	8c 83       	std	Y+4, r24	; 0x04
     a32:	9d 83       	std	Y+5, r25	; 0x05
     a34:	ae 83       	std	Y+6, r26	; 0x06
     a36:	bf 83       	std	Y+7, r27	; 0x07
     a38:	8a 81       	ldd	r24, Y+2	; 0x02
     a3a:	9b 81       	ldd	r25, Y+3	; 0x03
     a3c:	01 97       	sbiw	r24, 0x01	; 1
     a3e:	9b 83       	std	Y+3, r25	; 0x03
     a40:	8a 83       	std	Y+2, r24	; 0x02
     a42:	8c 81       	ldd	r24, Y+4	; 0x04
     a44:	9d 81       	ldd	r25, Y+5	; 0x05
     a46:	ae 81       	ldd	r26, Y+6	; 0x06
     a48:	bf 81       	ldd	r27, Y+7	; 0x07
     a4a:	9c 01       	movw	r18, r24
     a4c:	ad 01       	movw	r20, r26
     a4e:	21 50       	subi	r18, 0x01	; 1
     a50:	30 40       	sbci	r19, 0x00	; 0
     a52:	40 40       	sbci	r20, 0x00	; 0
     a54:	50 40       	sbci	r21, 0x00	; 0
     a56:	2f 3f       	cpi	r18, 0xFF	; 255
     a58:	ef ef       	ldi	r30, 0xFF	; 255
     a5a:	3e 07       	cpc	r19, r30
     a5c:	ef ef       	ldi	r30, 0xFF	; 255
     a5e:	4e 07       	cpc	r20, r30
     a60:	ef e3       	ldi	r30, 0x3F	; 63
     a62:	5e 07       	cpc	r21, r30
     a64:	08 f3       	brcs	.-62     	; 0xa28 <__stack+0x129>
     a66:	0b c0       	rjmp	.+22     	; 0xa7e <__stack+0x17f>
     a68:	89 83       	std	Y+1, r24	; 0x01
     a6a:	db 82       	std	Y+3, r13	; 0x03
     a6c:	ca 82       	std	Y+2, r12	; 0x02
     a6e:	2e 0d       	add	r18, r14
     a70:	3f 1d       	adc	r19, r15
     a72:	40 1f       	adc	r20, r16
     a74:	51 1f       	adc	r21, r17
     a76:	2c 83       	std	Y+4, r18	; 0x04
     a78:	3d 83       	std	Y+5, r19	; 0x05
     a7a:	4e 83       	std	Y+6, r20	; 0x06
     a7c:	5f 83       	std	Y+7, r21	; 0x07
     a7e:	83 e0       	ldi	r24, 0x03	; 3
     a80:	88 83       	st	Y, r24
     a82:	2c 81       	ldd	r18, Y+4	; 0x04
     a84:	3d 81       	ldd	r19, Y+5	; 0x05
     a86:	4e 81       	ldd	r20, Y+6	; 0x06
     a88:	5f 81       	ldd	r21, Y+7	; 0x07
     a8a:	57 ff       	sbrs	r21, 7
     a8c:	1d c0       	rjmp	.+58     	; 0xac8 <__stack+0x1c9>
     a8e:	da 01       	movw	r26, r20
     a90:	c9 01       	movw	r24, r18
     a92:	81 70       	andi	r24, 0x01	; 1
     a94:	90 70       	andi	r25, 0x00	; 0
     a96:	a0 70       	andi	r26, 0x00	; 0
     a98:	b0 70       	andi	r27, 0x00	; 0
     a9a:	56 95       	lsr	r21
     a9c:	47 95       	ror	r20
     a9e:	37 95       	ror	r19
     aa0:	27 95       	ror	r18
     aa2:	82 2b       	or	r24, r18
     aa4:	93 2b       	or	r25, r19
     aa6:	a4 2b       	or	r26, r20
     aa8:	b5 2b       	or	r27, r21
     aaa:	8c 83       	std	Y+4, r24	; 0x04
     aac:	9d 83       	std	Y+5, r25	; 0x05
     aae:	ae 83       	std	Y+6, r26	; 0x06
     ab0:	bf 83       	std	Y+7, r27	; 0x07
     ab2:	8a 81       	ldd	r24, Y+2	; 0x02
     ab4:	9b 81       	ldd	r25, Y+3	; 0x03
     ab6:	01 96       	adiw	r24, 0x01	; 1
     ab8:	9b 83       	std	Y+3, r25	; 0x03
     aba:	8a 83       	std	Y+2, r24	; 0x02
     abc:	05 c0       	rjmp	.+10     	; 0xac8 <__stack+0x1c9>
     abe:	e3 e0       	ldi	r30, 0x03	; 3
     ac0:	f1 e0       	ldi	r31, 0x01	; 1
     ac2:	03 c0       	rjmp	.+6      	; 0xaca <__stack+0x1cb>
     ac4:	fb 01       	movw	r30, r22
     ac6:	01 c0       	rjmp	.+2      	; 0xaca <__stack+0x1cb>
     ac8:	fe 01       	movw	r30, r28
     aca:	cf 01       	movw	r24, r30
     acc:	cd b7       	in	r28, 0x3d	; 61
     ace:	de b7       	in	r29, 0x3e	; 62
     ad0:	ee e0       	ldi	r30, 0x0E	; 14
     ad2:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__epilogue_restores__+0x8>

00000ad6 <__addsf3>:
     ad6:	a0 e2       	ldi	r26, 0x20	; 32
     ad8:	b0 e0       	ldi	r27, 0x00	; 0
     ada:	e1 e7       	ldi	r30, 0x71	; 113
     adc:	f5 e0       	ldi	r31, 0x05	; 5
     ade:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__prologue_saves__+0x18>
     ae2:	69 83       	std	Y+1, r22	; 0x01
     ae4:	7a 83       	std	Y+2, r23	; 0x02
     ae6:	8b 83       	std	Y+3, r24	; 0x03
     ae8:	9c 83       	std	Y+4, r25	; 0x04
     aea:	2d 83       	std	Y+5, r18	; 0x05
     aec:	3e 83       	std	Y+6, r19	; 0x06
     aee:	4f 83       	std	Y+7, r20	; 0x07
     af0:	58 87       	std	Y+8, r21	; 0x08
     af2:	89 e0       	ldi	r24, 0x09	; 9
     af4:	e8 2e       	mov	r14, r24
     af6:	f1 2c       	mov	r15, r1
     af8:	ec 0e       	add	r14, r28
     afa:	fd 1e       	adc	r15, r29
     afc:	ce 01       	movw	r24, r28
     afe:	01 96       	adiw	r24, 0x01	; 1
     b00:	b7 01       	movw	r22, r14
     b02:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     b06:	8e 01       	movw	r16, r28
     b08:	0f 5e       	subi	r16, 0xEF	; 239
     b0a:	1f 4f       	sbci	r17, 0xFF	; 255
     b0c:	ce 01       	movw	r24, r28
     b0e:	05 96       	adiw	r24, 0x05	; 5
     b10:	b8 01       	movw	r22, r16
     b12:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     b16:	c7 01       	movw	r24, r14
     b18:	b8 01       	movw	r22, r16
     b1a:	ae 01       	movw	r20, r28
     b1c:	47 5e       	subi	r20, 0xE7	; 231
     b1e:	5f 4f       	sbci	r21, 0xFF	; 255
     b20:	0e 94 21 04 	call	0x842	; 0x842 <_fpadd_parts>
     b24:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__pack_f>
     b28:	a0 96       	adiw	r28, 0x20	; 32
     b2a:	e6 e0       	ldi	r30, 0x06	; 6
     b2c:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__epilogue_restores__+0x18>

00000b30 <__subsf3>:
     b30:	a0 e2       	ldi	r26, 0x20	; 32
     b32:	b0 e0       	ldi	r27, 0x00	; 0
     b34:	ee e9       	ldi	r30, 0x9E	; 158
     b36:	f5 e0       	ldi	r31, 0x05	; 5
     b38:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__prologue_saves__+0x18>
     b3c:	69 83       	std	Y+1, r22	; 0x01
     b3e:	7a 83       	std	Y+2, r23	; 0x02
     b40:	8b 83       	std	Y+3, r24	; 0x03
     b42:	9c 83       	std	Y+4, r25	; 0x04
     b44:	2d 83       	std	Y+5, r18	; 0x05
     b46:	3e 83       	std	Y+6, r19	; 0x06
     b48:	4f 83       	std	Y+7, r20	; 0x07
     b4a:	58 87       	std	Y+8, r21	; 0x08
     b4c:	8e 01       	movw	r16, r28
     b4e:	07 5f       	subi	r16, 0xF7	; 247
     b50:	1f 4f       	sbci	r17, 0xFF	; 255
     b52:	ce 01       	movw	r24, r28
     b54:	01 96       	adiw	r24, 0x01	; 1
     b56:	b8 01       	movw	r22, r16
     b58:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     b5c:	91 e1       	ldi	r25, 0x11	; 17
     b5e:	e9 2e       	mov	r14, r25
     b60:	f1 2c       	mov	r15, r1
     b62:	ec 0e       	add	r14, r28
     b64:	fd 1e       	adc	r15, r29
     b66:	ce 01       	movw	r24, r28
     b68:	05 96       	adiw	r24, 0x05	; 5
     b6a:	b7 01       	movw	r22, r14
     b6c:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     b70:	8a 89       	ldd	r24, Y+18	; 0x12
     b72:	91 e0       	ldi	r25, 0x01	; 1
     b74:	89 27       	eor	r24, r25
     b76:	8a 8b       	std	Y+18, r24	; 0x12
     b78:	c8 01       	movw	r24, r16
     b7a:	b7 01       	movw	r22, r14
     b7c:	ae 01       	movw	r20, r28
     b7e:	47 5e       	subi	r20, 0xE7	; 231
     b80:	5f 4f       	sbci	r21, 0xFF	; 255
     b82:	0e 94 21 04 	call	0x842	; 0x842 <_fpadd_parts>
     b86:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__pack_f>
     b8a:	a0 96       	adiw	r28, 0x20	; 32
     b8c:	e6 e0       	ldi	r30, 0x06	; 6
     b8e:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__epilogue_restores__+0x18>

00000b92 <__mulsf3>:
     b92:	a0 e2       	ldi	r26, 0x20	; 32
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	ef ec       	ldi	r30, 0xCF	; 207
     b98:	f5 e0       	ldi	r31, 0x05	; 5
     b9a:	0c 94 e3 09 	jmp	0x13c6	; 0x13c6 <__prologue_saves__>
     b9e:	69 83       	std	Y+1, r22	; 0x01
     ba0:	7a 83       	std	Y+2, r23	; 0x02
     ba2:	8b 83       	std	Y+3, r24	; 0x03
     ba4:	9c 83       	std	Y+4, r25	; 0x04
     ba6:	2d 83       	std	Y+5, r18	; 0x05
     ba8:	3e 83       	std	Y+6, r19	; 0x06
     baa:	4f 83       	std	Y+7, r20	; 0x07
     bac:	58 87       	std	Y+8, r21	; 0x08
     bae:	ce 01       	movw	r24, r28
     bb0:	01 96       	adiw	r24, 0x01	; 1
     bb2:	be 01       	movw	r22, r28
     bb4:	67 5f       	subi	r22, 0xF7	; 247
     bb6:	7f 4f       	sbci	r23, 0xFF	; 255
     bb8:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     bbc:	ce 01       	movw	r24, r28
     bbe:	05 96       	adiw	r24, 0x05	; 5
     bc0:	be 01       	movw	r22, r28
     bc2:	6f 5e       	subi	r22, 0xEF	; 239
     bc4:	7f 4f       	sbci	r23, 0xFF	; 255
     bc6:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     bca:	99 85       	ldd	r25, Y+9	; 0x09
     bcc:	92 30       	cpi	r25, 0x02	; 2
     bce:	78 f0       	brcs	.+30     	; 0xbee <__mulsf3+0x5c>
     bd0:	89 89       	ldd	r24, Y+17	; 0x11
     bd2:	82 30       	cpi	r24, 0x02	; 2
     bd4:	c0 f0       	brcs	.+48     	; 0xc06 <__mulsf3+0x74>
     bd6:	94 30       	cpi	r25, 0x04	; 4
     bd8:	19 f4       	brne	.+6      	; 0xbe0 <__mulsf3+0x4e>
     bda:	82 30       	cpi	r24, 0x02	; 2
     bdc:	41 f4       	brne	.+16     	; 0xbee <__mulsf3+0x5c>
     bde:	cb c0       	rjmp	.+406    	; 0xd76 <__mulsf3+0x1e4>
     be0:	84 30       	cpi	r24, 0x04	; 4
     be2:	19 f4       	brne	.+6      	; 0xbea <__mulsf3+0x58>
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	79 f4       	brne	.+30     	; 0xc06 <__mulsf3+0x74>
     be8:	c6 c0       	rjmp	.+396    	; 0xd76 <__mulsf3+0x1e4>
     bea:	92 30       	cpi	r25, 0x02	; 2
     bec:	51 f4       	brne	.+20     	; 0xc02 <__mulsf3+0x70>
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	2a 85       	ldd	r18, Y+10	; 0x0a
     bf2:	9a 89       	ldd	r25, Y+18	; 0x12
     bf4:	29 17       	cp	r18, r25
     bf6:	09 f4       	brne	.+2      	; 0xbfa <__mulsf3+0x68>
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	8a 87       	std	Y+10, r24	; 0x0a
     bfc:	ce 01       	movw	r24, r28
     bfe:	09 96       	adiw	r24, 0x09	; 9
     c00:	bc c0       	rjmp	.+376    	; 0xd7a <__mulsf3+0x1e8>
     c02:	82 30       	cpi	r24, 0x02	; 2
     c04:	51 f4       	brne	.+20     	; 0xc1a <__mulsf3+0x88>
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	2a 85       	ldd	r18, Y+10	; 0x0a
     c0a:	9a 89       	ldd	r25, Y+18	; 0x12
     c0c:	29 17       	cp	r18, r25
     c0e:	09 f4       	brne	.+2      	; 0xc12 <__mulsf3+0x80>
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	8a 8b       	std	Y+18, r24	; 0x12
     c14:	ce 01       	movw	r24, r28
     c16:	41 96       	adiw	r24, 0x11	; 17
     c18:	b0 c0       	rjmp	.+352    	; 0xd7a <__mulsf3+0x1e8>
     c1a:	6d 84       	ldd	r6, Y+13	; 0x0d
     c1c:	7e 84       	ldd	r7, Y+14	; 0x0e
     c1e:	8f 84       	ldd	r8, Y+15	; 0x0f
     c20:	98 88       	ldd	r9, Y+16	; 0x10
     c22:	ed 88       	ldd	r14, Y+21	; 0x15
     c24:	fe 88       	ldd	r15, Y+22	; 0x16
     c26:	0f 89       	ldd	r16, Y+23	; 0x17
     c28:	18 8d       	ldd	r17, Y+24	; 0x18
     c2a:	e0 e2       	ldi	r30, 0x20	; 32
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	dc 01       	movw	r26, r24
     c34:	aa 24       	eor	r10, r10
     c36:	bb 24       	eor	r11, r11
     c38:	65 01       	movw	r12, r10
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	30 e0       	ldi	r19, 0x00	; 0
     c3e:	a9 01       	movw	r20, r18
     c40:	b3 01       	movw	r22, r6
     c42:	61 70       	andi	r22, 0x01	; 1
     c44:	70 70       	andi	r23, 0x00	; 0
     c46:	61 15       	cp	r22, r1
     c48:	71 05       	cpc	r23, r1
     c4a:	d1 f0       	breq	.+52     	; 0xc80 <__mulsf3+0xee>
     c4c:	2e 0d       	add	r18, r14
     c4e:	3f 1d       	adc	r19, r15
     c50:	40 1f       	adc	r20, r16
     c52:	51 1f       	adc	r21, r17
     c54:	15 01       	movw	r2, r10
     c56:	26 01       	movw	r4, r12
     c58:	28 0e       	add	r2, r24
     c5a:	39 1e       	adc	r3, r25
     c5c:	4a 1e       	adc	r4, r26
     c5e:	5b 1e       	adc	r5, r27
     c60:	81 e0       	ldi	r24, 0x01	; 1
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	a0 e0       	ldi	r26, 0x00	; 0
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	2e 15       	cp	r18, r14
     c6a:	3f 05       	cpc	r19, r15
     c6c:	40 07       	cpc	r20, r16
     c6e:	51 07       	cpc	r21, r17
     c70:	18 f0       	brcs	.+6      	; 0xc78 <__mulsf3+0xe6>
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	dc 01       	movw	r26, r24
     c78:	82 0d       	add	r24, r2
     c7a:	93 1d       	adc	r25, r3
     c7c:	a4 1d       	adc	r26, r4
     c7e:	b5 1d       	adc	r27, r5
     c80:	aa 0c       	add	r10, r10
     c82:	bb 1c       	adc	r11, r11
     c84:	cc 1c       	adc	r12, r12
     c86:	dd 1c       	adc	r13, r13
     c88:	17 ff       	sbrs	r17, 7
     c8a:	09 c0       	rjmp	.+18     	; 0xc9e <__mulsf3+0x10c>
     c8c:	61 e0       	ldi	r22, 0x01	; 1
     c8e:	26 2e       	mov	r2, r22
     c90:	31 2c       	mov	r3, r1
     c92:	41 2c       	mov	r4, r1
     c94:	51 2c       	mov	r5, r1
     c96:	a2 28       	or	r10, r2
     c98:	b3 28       	or	r11, r3
     c9a:	c4 28       	or	r12, r4
     c9c:	d5 28       	or	r13, r5
     c9e:	31 97       	sbiw	r30, 0x01	; 1
     ca0:	49 f0       	breq	.+18     	; 0xcb4 <__mulsf3+0x122>
     ca2:	ee 0c       	add	r14, r14
     ca4:	ff 1c       	adc	r15, r15
     ca6:	00 1f       	adc	r16, r16
     ca8:	11 1f       	adc	r17, r17
     caa:	96 94       	lsr	r9
     cac:	87 94       	ror	r8
     cae:	77 94       	ror	r7
     cb0:	67 94       	ror	r6
     cb2:	c6 cf       	rjmp	.-116    	; 0xc40 <__mulsf3+0xae>
     cb4:	6b 89       	ldd	r22, Y+19	; 0x13
     cb6:	7c 89       	ldd	r23, Y+20	; 0x14
     cb8:	eb 85       	ldd	r30, Y+11	; 0x0b
     cba:	fc 85       	ldd	r31, Y+12	; 0x0c
     cbc:	6e 0f       	add	r22, r30
     cbe:	7f 1f       	adc	r23, r31
     cc0:	6e 5f       	subi	r22, 0xFE	; 254
     cc2:	7f 4f       	sbci	r23, 0xFF	; 255
     cc4:	7c 8f       	std	Y+28, r23	; 0x1c
     cc6:	6b 8f       	std	Y+27, r22	; 0x1b
     cc8:	61 e0       	ldi	r22, 0x01	; 1
     cca:	ea 85       	ldd	r30, Y+10	; 0x0a
     ccc:	7a 89       	ldd	r23, Y+18	; 0x12
     cce:	e7 17       	cp	r30, r23
     cd0:	09 f4       	brne	.+2      	; 0xcd4 <__mulsf3+0x142>
     cd2:	60 e0       	ldi	r22, 0x00	; 0
     cd4:	6a 8f       	std	Y+26, r22	; 0x1a
     cd6:	6b 8d       	ldd	r22, Y+27	; 0x1b
     cd8:	7c 8d       	ldd	r23, Y+28	; 0x1c
     cda:	10 c0       	rjmp	.+32     	; 0xcfc <__mulsf3+0x16a>
     cdc:	fc 01       	movw	r30, r24
     cde:	e1 70       	andi	r30, 0x01	; 1
     ce0:	f0 70       	andi	r31, 0x00	; 0
     ce2:	30 97       	sbiw	r30, 0x00	; 0
     ce4:	29 f0       	breq	.+10     	; 0xcf0 <__mulsf3+0x15e>
     ce6:	56 95       	lsr	r21
     ce8:	47 95       	ror	r20
     cea:	37 95       	ror	r19
     cec:	27 95       	ror	r18
     cee:	50 68       	ori	r21, 0x80	; 128
     cf0:	b6 95       	lsr	r27
     cf2:	a7 95       	ror	r26
     cf4:	97 95       	ror	r25
     cf6:	87 95       	ror	r24
     cf8:	6f 5f       	subi	r22, 0xFF	; 255
     cfa:	7f 4f       	sbci	r23, 0xFF	; 255
     cfc:	b7 fd       	sbrc	r27, 7
     cfe:	ee cf       	rjmp	.-36     	; 0xcdc <__mulsf3+0x14a>
     d00:	0c c0       	rjmp	.+24     	; 0xd1a <__mulsf3+0x188>
     d02:	88 0f       	add	r24, r24
     d04:	99 1f       	adc	r25, r25
     d06:	aa 1f       	adc	r26, r26
     d08:	bb 1f       	adc	r27, r27
     d0a:	57 fd       	sbrc	r21, 7
     d0c:	81 60       	ori	r24, 0x01	; 1
     d0e:	22 0f       	add	r18, r18
     d10:	33 1f       	adc	r19, r19
     d12:	44 1f       	adc	r20, r20
     d14:	55 1f       	adc	r21, r21
     d16:	61 50       	subi	r22, 0x01	; 1
     d18:	70 40       	sbci	r23, 0x00	; 0
     d1a:	80 30       	cpi	r24, 0x00	; 0
     d1c:	e0 e0       	ldi	r30, 0x00	; 0
     d1e:	9e 07       	cpc	r25, r30
     d20:	e0 e0       	ldi	r30, 0x00	; 0
     d22:	ae 07       	cpc	r26, r30
     d24:	e0 e4       	ldi	r30, 0x40	; 64
     d26:	be 07       	cpc	r27, r30
     d28:	60 f3       	brcs	.-40     	; 0xd02 <__mulsf3+0x170>
     d2a:	6b 8f       	std	Y+27, r22	; 0x1b
     d2c:	7c 8f       	std	Y+28, r23	; 0x1c
     d2e:	6f e7       	ldi	r22, 0x7F	; 127
     d30:	e6 2e       	mov	r14, r22
     d32:	f1 2c       	mov	r15, r1
     d34:	01 2d       	mov	r16, r1
     d36:	11 2d       	mov	r17, r1
     d38:	e8 22       	and	r14, r24
     d3a:	f9 22       	and	r15, r25
     d3c:	0a 23       	and	r16, r26
     d3e:	1b 23       	and	r17, r27
     d40:	60 e4       	ldi	r22, 0x40	; 64
     d42:	e6 16       	cp	r14, r22
     d44:	f1 04       	cpc	r15, r1
     d46:	01 05       	cpc	r16, r1
     d48:	11 05       	cpc	r17, r1
     d4a:	61 f4       	brne	.+24     	; 0xd64 <__mulsf3+0x1d2>
     d4c:	87 fd       	sbrc	r24, 7
     d4e:	0a c0       	rjmp	.+20     	; 0xd64 <__mulsf3+0x1d2>
     d50:	21 15       	cp	r18, r1
     d52:	31 05       	cpc	r19, r1
     d54:	41 05       	cpc	r20, r1
     d56:	51 05       	cpc	r21, r1
     d58:	29 f0       	breq	.+10     	; 0xd64 <__mulsf3+0x1d2>
     d5a:	80 5c       	subi	r24, 0xC0	; 192
     d5c:	9f 4f       	sbci	r25, 0xFF	; 255
     d5e:	af 4f       	sbci	r26, 0xFF	; 255
     d60:	bf 4f       	sbci	r27, 0xFF	; 255
     d62:	80 78       	andi	r24, 0x80	; 128
     d64:	8d 8f       	std	Y+29, r24	; 0x1d
     d66:	9e 8f       	std	Y+30, r25	; 0x1e
     d68:	af 8f       	std	Y+31, r26	; 0x1f
     d6a:	b8 a3       	std	Y+32, r27	; 0x20
     d6c:	83 e0       	ldi	r24, 0x03	; 3
     d6e:	89 8f       	std	Y+25, r24	; 0x19
     d70:	ce 01       	movw	r24, r28
     d72:	49 96       	adiw	r24, 0x19	; 25
     d74:	02 c0       	rjmp	.+4      	; 0xd7a <__mulsf3+0x1e8>
     d76:	83 e0       	ldi	r24, 0x03	; 3
     d78:	91 e0       	ldi	r25, 0x01	; 1
     d7a:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__pack_f>
     d7e:	a0 96       	adiw	r28, 0x20	; 32
     d80:	e2 e1       	ldi	r30, 0x12	; 18
     d82:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__epilogue_restores__>

00000d86 <__divsf3>:
     d86:	a8 e1       	ldi	r26, 0x18	; 24
     d88:	b0 e0       	ldi	r27, 0x00	; 0
     d8a:	e9 ec       	ldi	r30, 0xC9	; 201
     d8c:	f6 e0       	ldi	r31, 0x06	; 6
     d8e:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__prologue_saves__+0x10>
     d92:	69 83       	std	Y+1, r22	; 0x01
     d94:	7a 83       	std	Y+2, r23	; 0x02
     d96:	8b 83       	std	Y+3, r24	; 0x03
     d98:	9c 83       	std	Y+4, r25	; 0x04
     d9a:	2d 83       	std	Y+5, r18	; 0x05
     d9c:	3e 83       	std	Y+6, r19	; 0x06
     d9e:	4f 83       	std	Y+7, r20	; 0x07
     da0:	58 87       	std	Y+8, r21	; 0x08
     da2:	8e 01       	movw	r16, r28
     da4:	07 5f       	subi	r16, 0xF7	; 247
     da6:	1f 4f       	sbci	r17, 0xFF	; 255
     da8:	ce 01       	movw	r24, r28
     daa:	01 96       	adiw	r24, 0x01	; 1
     dac:	b8 01       	movw	r22, r16
     dae:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     db2:	81 e1       	ldi	r24, 0x11	; 17
     db4:	e8 2e       	mov	r14, r24
     db6:	f1 2c       	mov	r15, r1
     db8:	ec 0e       	add	r14, r28
     dba:	fd 1e       	adc	r15, r29
     dbc:	ce 01       	movw	r24, r28
     dbe:	05 96       	adiw	r24, 0x05	; 5
     dc0:	b7 01       	movw	r22, r14
     dc2:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     dc6:	99 85       	ldd	r25, Y+9	; 0x09
     dc8:	92 30       	cpi	r25, 0x02	; 2
     dca:	08 f4       	brcc	.+2      	; 0xdce <__divsf3+0x48>
     dcc:	83 c0       	rjmp	.+262    	; 0xed4 <__divsf3+0x14e>
     dce:	89 89       	ldd	r24, Y+17	; 0x11
     dd0:	82 30       	cpi	r24, 0x02	; 2
     dd2:	08 f4       	brcc	.+2      	; 0xdd6 <__divsf3+0x50>
     dd4:	7b c0       	rjmp	.+246    	; 0xecc <__divsf3+0x146>
     dd6:	2a 85       	ldd	r18, Y+10	; 0x0a
     dd8:	3a 89       	ldd	r19, Y+18	; 0x12
     dda:	23 27       	eor	r18, r19
     ddc:	2a 87       	std	Y+10, r18	; 0x0a
     dde:	94 30       	cpi	r25, 0x04	; 4
     de0:	11 f0       	breq	.+4      	; 0xde6 <__divsf3+0x60>
     de2:	92 30       	cpi	r25, 0x02	; 2
     de4:	21 f4       	brne	.+8      	; 0xdee <__divsf3+0x68>
     de6:	98 17       	cp	r25, r24
     de8:	09 f0       	breq	.+2      	; 0xdec <__divsf3+0x66>
     dea:	6c c0       	rjmp	.+216    	; 0xec4 <__divsf3+0x13e>
     dec:	71 c0       	rjmp	.+226    	; 0xed0 <__divsf3+0x14a>
     dee:	84 30       	cpi	r24, 0x04	; 4
     df0:	39 f4       	brne	.+14     	; 0xe00 <__divsf3+0x7a>
     df2:	1d 86       	std	Y+13, r1	; 0x0d
     df4:	1e 86       	std	Y+14, r1	; 0x0e
     df6:	1f 86       	std	Y+15, r1	; 0x0f
     df8:	18 8a       	std	Y+16, r1	; 0x10
     dfa:	1c 86       	std	Y+12, r1	; 0x0c
     dfc:	1b 86       	std	Y+11, r1	; 0x0b
     dfe:	6a c0       	rjmp	.+212    	; 0xed4 <__divsf3+0x14e>
     e00:	82 30       	cpi	r24, 0x02	; 2
     e02:	19 f4       	brne	.+6      	; 0xe0a <__divsf3+0x84>
     e04:	84 e0       	ldi	r24, 0x04	; 4
     e06:	89 87       	std	Y+9, r24	; 0x09
     e08:	65 c0       	rjmp	.+202    	; 0xed4 <__divsf3+0x14e>
     e0a:	8b 85       	ldd	r24, Y+11	; 0x0b
     e0c:	9c 85       	ldd	r25, Y+12	; 0x0c
     e0e:	2b 89       	ldd	r18, Y+19	; 0x13
     e10:	3c 89       	ldd	r19, Y+20	; 0x14
     e12:	82 1b       	sub	r24, r18
     e14:	93 0b       	sbc	r25, r19
     e16:	9c 87       	std	Y+12, r25	; 0x0c
     e18:	8b 87       	std	Y+11, r24	; 0x0b
     e1a:	2d 85       	ldd	r18, Y+13	; 0x0d
     e1c:	3e 85       	ldd	r19, Y+14	; 0x0e
     e1e:	4f 85       	ldd	r20, Y+15	; 0x0f
     e20:	58 89       	ldd	r21, Y+16	; 0x10
     e22:	ed 88       	ldd	r14, Y+21	; 0x15
     e24:	fe 88       	ldd	r15, Y+22	; 0x16
     e26:	0f 89       	ldd	r16, Y+23	; 0x17
     e28:	18 8d       	ldd	r17, Y+24	; 0x18
     e2a:	2e 15       	cp	r18, r14
     e2c:	3f 05       	cpc	r19, r15
     e2e:	40 07       	cpc	r20, r16
     e30:	51 07       	cpc	r21, r17
     e32:	38 f4       	brcc	.+14     	; 0xe42 <__divsf3+0xbc>
     e34:	22 0f       	add	r18, r18
     e36:	33 1f       	adc	r19, r19
     e38:	44 1f       	adc	r20, r20
     e3a:	55 1f       	adc	r21, r21
     e3c:	01 97       	sbiw	r24, 0x01	; 1
     e3e:	9c 87       	std	Y+12, r25	; 0x0c
     e40:	8b 87       	std	Y+11, r24	; 0x0b
     e42:	6f e1       	ldi	r22, 0x1F	; 31
     e44:	70 e0       	ldi	r23, 0x00	; 0
     e46:	a1 2c       	mov	r10, r1
     e48:	b1 2c       	mov	r11, r1
     e4a:	c1 2c       	mov	r12, r1
     e4c:	a0 e4       	ldi	r26, 0x40	; 64
     e4e:	da 2e       	mov	r13, r26
     e50:	80 e0       	ldi	r24, 0x00	; 0
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	dc 01       	movw	r26, r24
     e56:	2e 15       	cp	r18, r14
     e58:	3f 05       	cpc	r19, r15
     e5a:	40 07       	cpc	r20, r16
     e5c:	51 07       	cpc	r21, r17
     e5e:	40 f0       	brcs	.+16     	; 0xe70 <__divsf3+0xea>
     e60:	8a 29       	or	r24, r10
     e62:	9b 29       	or	r25, r11
     e64:	ac 29       	or	r26, r12
     e66:	bd 29       	or	r27, r13
     e68:	2e 19       	sub	r18, r14
     e6a:	3f 09       	sbc	r19, r15
     e6c:	40 0b       	sbc	r20, r16
     e6e:	51 0b       	sbc	r21, r17
     e70:	d6 94       	lsr	r13
     e72:	c7 94       	ror	r12
     e74:	b7 94       	ror	r11
     e76:	a7 94       	ror	r10
     e78:	22 0f       	add	r18, r18
     e7a:	33 1f       	adc	r19, r19
     e7c:	44 1f       	adc	r20, r20
     e7e:	55 1f       	adc	r21, r21
     e80:	61 50       	subi	r22, 0x01	; 1
     e82:	70 40       	sbci	r23, 0x00	; 0
     e84:	41 f7       	brne	.-48     	; 0xe56 <__divsf3+0xd0>
     e86:	6f e7       	ldi	r22, 0x7F	; 127
     e88:	e6 2e       	mov	r14, r22
     e8a:	f1 2c       	mov	r15, r1
     e8c:	01 2d       	mov	r16, r1
     e8e:	11 2d       	mov	r17, r1
     e90:	e8 22       	and	r14, r24
     e92:	f9 22       	and	r15, r25
     e94:	0a 23       	and	r16, r26
     e96:	1b 23       	and	r17, r27
     e98:	60 e4       	ldi	r22, 0x40	; 64
     e9a:	e6 16       	cp	r14, r22
     e9c:	f1 04       	cpc	r15, r1
     e9e:	01 05       	cpc	r16, r1
     ea0:	11 05       	cpc	r17, r1
     ea2:	61 f4       	brne	.+24     	; 0xebc <__divsf3+0x136>
     ea4:	87 fd       	sbrc	r24, 7
     ea6:	0a c0       	rjmp	.+20     	; 0xebc <__divsf3+0x136>
     ea8:	21 15       	cp	r18, r1
     eaa:	31 05       	cpc	r19, r1
     eac:	41 05       	cpc	r20, r1
     eae:	51 05       	cpc	r21, r1
     eb0:	29 f0       	breq	.+10     	; 0xebc <__divsf3+0x136>
     eb2:	80 5c       	subi	r24, 0xC0	; 192
     eb4:	9f 4f       	sbci	r25, 0xFF	; 255
     eb6:	af 4f       	sbci	r26, 0xFF	; 255
     eb8:	bf 4f       	sbci	r27, 0xFF	; 255
     eba:	80 78       	andi	r24, 0x80	; 128
     ebc:	8d 87       	std	Y+13, r24	; 0x0d
     ebe:	9e 87       	std	Y+14, r25	; 0x0e
     ec0:	af 87       	std	Y+15, r26	; 0x0f
     ec2:	b8 8b       	std	Y+16, r27	; 0x10
     ec4:	8e 01       	movw	r16, r28
     ec6:	07 5f       	subi	r16, 0xF7	; 247
     ec8:	1f 4f       	sbci	r17, 0xFF	; 255
     eca:	04 c0       	rjmp	.+8      	; 0xed4 <__divsf3+0x14e>
     ecc:	87 01       	movw	r16, r14
     ece:	02 c0       	rjmp	.+4      	; 0xed4 <__divsf3+0x14e>
     ed0:	03 e0       	ldi	r16, 0x03	; 3
     ed2:	11 e0       	ldi	r17, 0x01	; 1
     ed4:	c8 01       	movw	r24, r16
     ed6:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__pack_f>
     eda:	68 96       	adiw	r28, 0x18	; 24
     edc:	ea e0       	ldi	r30, 0x0A	; 10
     ede:	0c 94 07 0a 	jmp	0x140e	; 0x140e <__epilogue_restores__+0x10>

00000ee2 <__gtsf2>:
     ee2:	a8 e1       	ldi	r26, 0x18	; 24
     ee4:	b0 e0       	ldi	r27, 0x00	; 0
     ee6:	e7 e7       	ldi	r30, 0x77	; 119
     ee8:	f7 e0       	ldi	r31, 0x07	; 7
     eea:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__prologue_saves__+0x18>
     eee:	69 83       	std	Y+1, r22	; 0x01
     ef0:	7a 83       	std	Y+2, r23	; 0x02
     ef2:	8b 83       	std	Y+3, r24	; 0x03
     ef4:	9c 83       	std	Y+4, r25	; 0x04
     ef6:	2d 83       	std	Y+5, r18	; 0x05
     ef8:	3e 83       	std	Y+6, r19	; 0x06
     efa:	4f 83       	std	Y+7, r20	; 0x07
     efc:	58 87       	std	Y+8, r21	; 0x08
     efe:	8e 01       	movw	r16, r28
     f00:	07 5f       	subi	r16, 0xF7	; 247
     f02:	1f 4f       	sbci	r17, 0xFF	; 255
     f04:	ce 01       	movw	r24, r28
     f06:	01 96       	adiw	r24, 0x01	; 1
     f08:	b8 01       	movw	r22, r16
     f0a:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     f0e:	81 e1       	ldi	r24, 0x11	; 17
     f10:	e8 2e       	mov	r14, r24
     f12:	f1 2c       	mov	r15, r1
     f14:	ec 0e       	add	r14, r28
     f16:	fd 1e       	adc	r15, r29
     f18:	ce 01       	movw	r24, r28
     f1a:	05 96       	adiw	r24, 0x05	; 5
     f1c:	b7 01       	movw	r22, r14
     f1e:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     f22:	89 85       	ldd	r24, Y+9	; 0x09
     f24:	82 30       	cpi	r24, 0x02	; 2
     f26:	40 f0       	brcs	.+16     	; 0xf38 <__gtsf2+0x56>
     f28:	89 89       	ldd	r24, Y+17	; 0x11
     f2a:	82 30       	cpi	r24, 0x02	; 2
     f2c:	28 f0       	brcs	.+10     	; 0xf38 <__gtsf2+0x56>
     f2e:	c8 01       	movw	r24, r16
     f30:	b7 01       	movw	r22, r14
     f32:	0e 94 8a 09 	call	0x1314	; 0x1314 <__fpcmp_parts_f>
     f36:	01 c0       	rjmp	.+2      	; 0xf3a <__gtsf2+0x58>
     f38:	8f ef       	ldi	r24, 0xFF	; 255
     f3a:	68 96       	adiw	r28, 0x18	; 24
     f3c:	e6 e0       	ldi	r30, 0x06	; 6
     f3e:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__epilogue_restores__+0x18>

00000f42 <__gesf2>:
     f42:	a8 e1       	ldi	r26, 0x18	; 24
     f44:	b0 e0       	ldi	r27, 0x00	; 0
     f46:	e7 ea       	ldi	r30, 0xA7	; 167
     f48:	f7 e0       	ldi	r31, 0x07	; 7
     f4a:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__prologue_saves__+0x18>
     f4e:	69 83       	std	Y+1, r22	; 0x01
     f50:	7a 83       	std	Y+2, r23	; 0x02
     f52:	8b 83       	std	Y+3, r24	; 0x03
     f54:	9c 83       	std	Y+4, r25	; 0x04
     f56:	2d 83       	std	Y+5, r18	; 0x05
     f58:	3e 83       	std	Y+6, r19	; 0x06
     f5a:	4f 83       	std	Y+7, r20	; 0x07
     f5c:	58 87       	std	Y+8, r21	; 0x08
     f5e:	8e 01       	movw	r16, r28
     f60:	07 5f       	subi	r16, 0xF7	; 247
     f62:	1f 4f       	sbci	r17, 0xFF	; 255
     f64:	ce 01       	movw	r24, r28
     f66:	01 96       	adiw	r24, 0x01	; 1
     f68:	b8 01       	movw	r22, r16
     f6a:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     f6e:	81 e1       	ldi	r24, 0x11	; 17
     f70:	e8 2e       	mov	r14, r24
     f72:	f1 2c       	mov	r15, r1
     f74:	ec 0e       	add	r14, r28
     f76:	fd 1e       	adc	r15, r29
     f78:	ce 01       	movw	r24, r28
     f7a:	05 96       	adiw	r24, 0x05	; 5
     f7c:	b7 01       	movw	r22, r14
     f7e:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     f82:	89 85       	ldd	r24, Y+9	; 0x09
     f84:	82 30       	cpi	r24, 0x02	; 2
     f86:	40 f0       	brcs	.+16     	; 0xf98 <__gesf2+0x56>
     f88:	89 89       	ldd	r24, Y+17	; 0x11
     f8a:	82 30       	cpi	r24, 0x02	; 2
     f8c:	28 f0       	brcs	.+10     	; 0xf98 <__gesf2+0x56>
     f8e:	c8 01       	movw	r24, r16
     f90:	b7 01       	movw	r22, r14
     f92:	0e 94 8a 09 	call	0x1314	; 0x1314 <__fpcmp_parts_f>
     f96:	01 c0       	rjmp	.+2      	; 0xf9a <__gesf2+0x58>
     f98:	8f ef       	ldi	r24, 0xFF	; 255
     f9a:	68 96       	adiw	r28, 0x18	; 24
     f9c:	e6 e0       	ldi	r30, 0x06	; 6
     f9e:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__epilogue_restores__+0x18>

00000fa2 <__ltsf2>:
     fa2:	a8 e1       	ldi	r26, 0x18	; 24
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	e7 ed       	ldi	r30, 0xD7	; 215
     fa8:	f7 e0       	ldi	r31, 0x07	; 7
     faa:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__prologue_saves__+0x18>
     fae:	69 83       	std	Y+1, r22	; 0x01
     fb0:	7a 83       	std	Y+2, r23	; 0x02
     fb2:	8b 83       	std	Y+3, r24	; 0x03
     fb4:	9c 83       	std	Y+4, r25	; 0x04
     fb6:	2d 83       	std	Y+5, r18	; 0x05
     fb8:	3e 83       	std	Y+6, r19	; 0x06
     fba:	4f 83       	std	Y+7, r20	; 0x07
     fbc:	58 87       	std	Y+8, r21	; 0x08
     fbe:	8e 01       	movw	r16, r28
     fc0:	07 5f       	subi	r16, 0xF7	; 247
     fc2:	1f 4f       	sbci	r17, 0xFF	; 255
     fc4:	ce 01       	movw	r24, r28
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	b8 01       	movw	r22, r16
     fca:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     fce:	81 e1       	ldi	r24, 0x11	; 17
     fd0:	e8 2e       	mov	r14, r24
     fd2:	f1 2c       	mov	r15, r1
     fd4:	ec 0e       	add	r14, r28
     fd6:	fd 1e       	adc	r15, r29
     fd8:	ce 01       	movw	r24, r28
     fda:	05 96       	adiw	r24, 0x05	; 5
     fdc:	b7 01       	movw	r22, r14
     fde:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
     fe2:	89 85       	ldd	r24, Y+9	; 0x09
     fe4:	82 30       	cpi	r24, 0x02	; 2
     fe6:	40 f0       	brcs	.+16     	; 0xff8 <__ltsf2+0x56>
     fe8:	89 89       	ldd	r24, Y+17	; 0x11
     fea:	82 30       	cpi	r24, 0x02	; 2
     fec:	28 f0       	brcs	.+10     	; 0xff8 <__ltsf2+0x56>
     fee:	c8 01       	movw	r24, r16
     ff0:	b7 01       	movw	r22, r14
     ff2:	0e 94 8a 09 	call	0x1314	; 0x1314 <__fpcmp_parts_f>
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <__ltsf2+0x58>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	68 96       	adiw	r28, 0x18	; 24
     ffc:	e6 e0       	ldi	r30, 0x06	; 6
     ffe:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__epilogue_restores__+0x18>

00001002 <__fixsfsi>:
    1002:	ac e0       	ldi	r26, 0x0C	; 12
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	e7 e0       	ldi	r30, 0x07	; 7
    1008:	f8 e0       	ldi	r31, 0x08	; 8
    100a:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__prologue_saves__+0x20>
    100e:	69 83       	std	Y+1, r22	; 0x01
    1010:	7a 83       	std	Y+2, r23	; 0x02
    1012:	8b 83       	std	Y+3, r24	; 0x03
    1014:	9c 83       	std	Y+4, r25	; 0x04
    1016:	ce 01       	movw	r24, r28
    1018:	01 96       	adiw	r24, 0x01	; 1
    101a:	be 01       	movw	r22, r28
    101c:	6b 5f       	subi	r22, 0xFB	; 251
    101e:	7f 4f       	sbci	r23, 0xFF	; 255
    1020:	0e 94 21 09 	call	0x1242	; 0x1242 <__unpack_f>
    1024:	8d 81       	ldd	r24, Y+5	; 0x05
    1026:	82 30       	cpi	r24, 0x02	; 2
    1028:	81 f1       	breq	.+96     	; 0x108a <__fixsfsi+0x88>
    102a:	82 30       	cpi	r24, 0x02	; 2
    102c:	70 f1       	brcs	.+92     	; 0x108a <__fixsfsi+0x88>
    102e:	84 30       	cpi	r24, 0x04	; 4
    1030:	21 f4       	brne	.+8      	; 0x103a <__fixsfsi+0x38>
    1032:	8e 81       	ldd	r24, Y+6	; 0x06
    1034:	88 23       	and	r24, r24
    1036:	69 f1       	breq	.+90     	; 0x1092 <__fixsfsi+0x90>
    1038:	0a c0       	rjmp	.+20     	; 0x104e <__fixsfsi+0x4c>
    103a:	2f 81       	ldd	r18, Y+7	; 0x07
    103c:	38 85       	ldd	r19, Y+8	; 0x08
    103e:	37 fd       	sbrc	r19, 7
    1040:	24 c0       	rjmp	.+72     	; 0x108a <__fixsfsi+0x88>
    1042:	6e 81       	ldd	r22, Y+6	; 0x06
    1044:	2f 31       	cpi	r18, 0x1F	; 31
    1046:	31 05       	cpc	r19, r1
    1048:	3c f0       	brlt	.+14     	; 0x1058 <__fixsfsi+0x56>
    104a:	66 23       	and	r22, r22
    104c:	11 f1       	breq	.+68     	; 0x1092 <__fixsfsi+0x90>
    104e:	20 e0       	ldi	r18, 0x00	; 0
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	40 e0       	ldi	r20, 0x00	; 0
    1054:	50 e8       	ldi	r21, 0x80	; 128
    1056:	21 c0       	rjmp	.+66     	; 0x109a <__fixsfsi+0x98>
    1058:	8e e1       	ldi	r24, 0x1E	; 30
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	82 1b       	sub	r24, r18
    105e:	93 0b       	sbc	r25, r19
    1060:	29 85       	ldd	r18, Y+9	; 0x09
    1062:	3a 85       	ldd	r19, Y+10	; 0x0a
    1064:	4b 85       	ldd	r20, Y+11	; 0x0b
    1066:	5c 85       	ldd	r21, Y+12	; 0x0c
    1068:	04 c0       	rjmp	.+8      	; 0x1072 <__fixsfsi+0x70>
    106a:	56 95       	lsr	r21
    106c:	47 95       	ror	r20
    106e:	37 95       	ror	r19
    1070:	27 95       	ror	r18
    1072:	8a 95       	dec	r24
    1074:	d2 f7       	brpl	.-12     	; 0x106a <__fixsfsi+0x68>
    1076:	66 23       	and	r22, r22
    1078:	81 f0       	breq	.+32     	; 0x109a <__fixsfsi+0x98>
    107a:	50 95       	com	r21
    107c:	40 95       	com	r20
    107e:	30 95       	com	r19
    1080:	21 95       	neg	r18
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	4f 4f       	sbci	r20, 0xFF	; 255
    1086:	5f 4f       	sbci	r21, 0xFF	; 255
    1088:	08 c0       	rjmp	.+16     	; 0x109a <__fixsfsi+0x98>
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	a9 01       	movw	r20, r18
    1090:	04 c0       	rjmp	.+8      	; 0x109a <__fixsfsi+0x98>
    1092:	2f ef       	ldi	r18, 0xFF	; 255
    1094:	3f ef       	ldi	r19, 0xFF	; 255
    1096:	4f ef       	ldi	r20, 0xFF	; 255
    1098:	5f e7       	ldi	r21, 0x7F	; 127
    109a:	b9 01       	movw	r22, r18
    109c:	ca 01       	movw	r24, r20
    109e:	2c 96       	adiw	r28, 0x0c	; 12
    10a0:	e2 e0       	ldi	r30, 0x02	; 2
    10a2:	0c 94 0f 0a 	jmp	0x141e	; 0x141e <__epilogue_restores__+0x20>

000010a6 <__pack_f>:
    10a6:	ef 92       	push	r14
    10a8:	ff 92       	push	r15
    10aa:	0f 93       	push	r16
    10ac:	1f 93       	push	r17
    10ae:	cf 93       	push	r28
    10b0:	df 93       	push	r29
    10b2:	fc 01       	movw	r30, r24
    10b4:	24 81       	ldd	r18, Z+4	; 0x04
    10b6:	35 81       	ldd	r19, Z+5	; 0x05
    10b8:	46 81       	ldd	r20, Z+6	; 0x06
    10ba:	57 81       	ldd	r21, Z+7	; 0x07
    10bc:	61 81       	ldd	r22, Z+1	; 0x01
    10be:	80 81       	ld	r24, Z
    10c0:	82 30       	cpi	r24, 0x02	; 2
    10c2:	20 f4       	brcc	.+8      	; 0x10cc <__pack_f+0x26>
    10c4:	40 61       	ori	r20, 0x10	; 16
    10c6:	ef ef       	ldi	r30, 0xFF	; 255
    10c8:	f0 e0       	ldi	r31, 0x00	; 0
    10ca:	a3 c0       	rjmp	.+326    	; 0x1212 <__pack_f+0x16c>
    10cc:	84 30       	cpi	r24, 0x04	; 4
    10ce:	09 f4       	brne	.+2      	; 0x10d2 <__pack_f+0x2c>
    10d0:	9b c0       	rjmp	.+310    	; 0x1208 <__pack_f+0x162>
    10d2:	82 30       	cpi	r24, 0x02	; 2
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <__pack_f+0x32>
    10d6:	92 c0       	rjmp	.+292    	; 0x11fc <__pack_f+0x156>
    10d8:	21 15       	cp	r18, r1
    10da:	31 05       	cpc	r19, r1
    10dc:	41 05       	cpc	r20, r1
    10de:	51 05       	cpc	r21, r1
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <__pack_f+0x3e>
    10e2:	8f c0       	rjmp	.+286    	; 0x1202 <__pack_f+0x15c>
    10e4:	02 80       	ldd	r0, Z+2	; 0x02
    10e6:	f3 81       	ldd	r31, Z+3	; 0x03
    10e8:	e0 2d       	mov	r30, r0
    10ea:	8f ef       	ldi	r24, 0xFF	; 255
    10ec:	e2 38       	cpi	r30, 0x82	; 130
    10ee:	f8 07       	cpc	r31, r24
    10f0:	0c f0       	brlt	.+2      	; 0x10f4 <__pack_f+0x4e>
    10f2:	5a c0       	rjmp	.+180    	; 0x11a8 <__pack_f+0x102>
    10f4:	c2 e8       	ldi	r28, 0x82	; 130
    10f6:	df ef       	ldi	r29, 0xFF	; 255
    10f8:	ce 1b       	sub	r28, r30
    10fa:	df 0b       	sbc	r29, r31
    10fc:	ca 31       	cpi	r28, 0x1A	; 26
    10fe:	d1 05       	cpc	r29, r1
    1100:	6c f5       	brge	.+90     	; 0x115c <__pack_f+0xb6>
    1102:	79 01       	movw	r14, r18
    1104:	8a 01       	movw	r16, r20
    1106:	0c 2e       	mov	r0, r28
    1108:	04 c0       	rjmp	.+8      	; 0x1112 <__pack_f+0x6c>
    110a:	16 95       	lsr	r17
    110c:	07 95       	ror	r16
    110e:	f7 94       	ror	r15
    1110:	e7 94       	ror	r14
    1112:	0a 94       	dec	r0
    1114:	d2 f7       	brpl	.-12     	; 0x110a <__pack_f+0x64>
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	a0 e0       	ldi	r26, 0x00	; 0
    111c:	b0 e0       	ldi	r27, 0x00	; 0
    111e:	0c 2e       	mov	r0, r28
    1120:	04 c0       	rjmp	.+8      	; 0x112a <__pack_f+0x84>
    1122:	88 0f       	add	r24, r24
    1124:	99 1f       	adc	r25, r25
    1126:	aa 1f       	adc	r26, r26
    1128:	bb 1f       	adc	r27, r27
    112a:	0a 94       	dec	r0
    112c:	d2 f7       	brpl	.-12     	; 0x1122 <__pack_f+0x7c>
    112e:	01 97       	sbiw	r24, 0x01	; 1
    1130:	a1 09       	sbc	r26, r1
    1132:	b1 09       	sbc	r27, r1
    1134:	82 23       	and	r24, r18
    1136:	93 23       	and	r25, r19
    1138:	a4 23       	and	r26, r20
    113a:	b5 23       	and	r27, r21
    113c:	21 e0       	ldi	r18, 0x01	; 1
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	40 e0       	ldi	r20, 0x00	; 0
    1142:	50 e0       	ldi	r21, 0x00	; 0
    1144:	00 97       	sbiw	r24, 0x00	; 0
    1146:	a1 05       	cpc	r26, r1
    1148:	b1 05       	cpc	r27, r1
    114a:	19 f4       	brne	.+6      	; 0x1152 <__pack_f+0xac>
    114c:	20 e0       	ldi	r18, 0x00	; 0
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	a9 01       	movw	r20, r18
    1152:	2e 29       	or	r18, r14
    1154:	3f 29       	or	r19, r15
    1156:	40 2b       	or	r20, r16
    1158:	51 2b       	or	r21, r17
    115a:	03 c0       	rjmp	.+6      	; 0x1162 <__pack_f+0xbc>
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	a9 01       	movw	r20, r18
    1162:	da 01       	movw	r26, r20
    1164:	c9 01       	movw	r24, r18
    1166:	8f 77       	andi	r24, 0x7F	; 127
    1168:	90 70       	andi	r25, 0x00	; 0
    116a:	a0 70       	andi	r26, 0x00	; 0
    116c:	b0 70       	andi	r27, 0x00	; 0
    116e:	80 34       	cpi	r24, 0x40	; 64
    1170:	91 05       	cpc	r25, r1
    1172:	a1 05       	cpc	r26, r1
    1174:	b1 05       	cpc	r27, r1
    1176:	39 f4       	brne	.+14     	; 0x1186 <__pack_f+0xe0>
    1178:	27 ff       	sbrs	r18, 7
    117a:	09 c0       	rjmp	.+18     	; 0x118e <__pack_f+0xe8>
    117c:	20 5c       	subi	r18, 0xC0	; 192
    117e:	3f 4f       	sbci	r19, 0xFF	; 255
    1180:	4f 4f       	sbci	r20, 0xFF	; 255
    1182:	5f 4f       	sbci	r21, 0xFF	; 255
    1184:	04 c0       	rjmp	.+8      	; 0x118e <__pack_f+0xe8>
    1186:	21 5c       	subi	r18, 0xC1	; 193
    1188:	3f 4f       	sbci	r19, 0xFF	; 255
    118a:	4f 4f       	sbci	r20, 0xFF	; 255
    118c:	5f 4f       	sbci	r21, 0xFF	; 255
    118e:	e1 e0       	ldi	r30, 0x01	; 1
    1190:	f0 e0       	ldi	r31, 0x00	; 0
    1192:	20 30       	cpi	r18, 0x00	; 0
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	38 07       	cpc	r19, r24
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	48 07       	cpc	r20, r24
    119c:	80 e4       	ldi	r24, 0x40	; 64
    119e:	58 07       	cpc	r21, r24
    11a0:	28 f5       	brcc	.+74     	; 0x11ec <__pack_f+0x146>
    11a2:	e0 e0       	ldi	r30, 0x00	; 0
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	22 c0       	rjmp	.+68     	; 0x11ec <__pack_f+0x146>
    11a8:	e0 38       	cpi	r30, 0x80	; 128
    11aa:	f1 05       	cpc	r31, r1
    11ac:	6c f5       	brge	.+90     	; 0x1208 <__pack_f+0x162>
    11ae:	e1 58       	subi	r30, 0x81	; 129
    11b0:	ff 4f       	sbci	r31, 0xFF	; 255
    11b2:	da 01       	movw	r26, r20
    11b4:	c9 01       	movw	r24, r18
    11b6:	8f 77       	andi	r24, 0x7F	; 127
    11b8:	90 70       	andi	r25, 0x00	; 0
    11ba:	a0 70       	andi	r26, 0x00	; 0
    11bc:	b0 70       	andi	r27, 0x00	; 0
    11be:	80 34       	cpi	r24, 0x40	; 64
    11c0:	91 05       	cpc	r25, r1
    11c2:	a1 05       	cpc	r26, r1
    11c4:	b1 05       	cpc	r27, r1
    11c6:	39 f4       	brne	.+14     	; 0x11d6 <__pack_f+0x130>
    11c8:	27 ff       	sbrs	r18, 7
    11ca:	09 c0       	rjmp	.+18     	; 0x11de <__pack_f+0x138>
    11cc:	20 5c       	subi	r18, 0xC0	; 192
    11ce:	3f 4f       	sbci	r19, 0xFF	; 255
    11d0:	4f 4f       	sbci	r20, 0xFF	; 255
    11d2:	5f 4f       	sbci	r21, 0xFF	; 255
    11d4:	04 c0       	rjmp	.+8      	; 0x11de <__pack_f+0x138>
    11d6:	21 5c       	subi	r18, 0xC1	; 193
    11d8:	3f 4f       	sbci	r19, 0xFF	; 255
    11da:	4f 4f       	sbci	r20, 0xFF	; 255
    11dc:	5f 4f       	sbci	r21, 0xFF	; 255
    11de:	57 ff       	sbrs	r21, 7
    11e0:	05 c0       	rjmp	.+10     	; 0x11ec <__pack_f+0x146>
    11e2:	56 95       	lsr	r21
    11e4:	47 95       	ror	r20
    11e6:	37 95       	ror	r19
    11e8:	27 95       	ror	r18
    11ea:	31 96       	adiw	r30, 0x01	; 1
    11ec:	87 e0       	ldi	r24, 0x07	; 7
    11ee:	56 95       	lsr	r21
    11f0:	47 95       	ror	r20
    11f2:	37 95       	ror	r19
    11f4:	27 95       	ror	r18
    11f6:	8a 95       	dec	r24
    11f8:	d1 f7       	brne	.-12     	; 0x11ee <__pack_f+0x148>
    11fa:	0b c0       	rjmp	.+22     	; 0x1212 <__pack_f+0x16c>
    11fc:	e0 e0       	ldi	r30, 0x00	; 0
    11fe:	f0 e0       	ldi	r31, 0x00	; 0
    1200:	05 c0       	rjmp	.+10     	; 0x120c <__pack_f+0x166>
    1202:	e0 e0       	ldi	r30, 0x00	; 0
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	05 c0       	rjmp	.+10     	; 0x1212 <__pack_f+0x16c>
    1208:	ef ef       	ldi	r30, 0xFF	; 255
    120a:	f0 e0       	ldi	r31, 0x00	; 0
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	a9 01       	movw	r20, r18
    1212:	8e 2f       	mov	r24, r30
    1214:	87 95       	ror	r24
    1216:	88 27       	eor	r24, r24
    1218:	87 95       	ror	r24
    121a:	94 2f       	mov	r25, r20
    121c:	9f 77       	andi	r25, 0x7F	; 127
    121e:	67 95       	ror	r22
    1220:	66 27       	eor	r22, r22
    1222:	67 95       	ror	r22
    1224:	e6 95       	lsr	r30
    1226:	e2 2e       	mov	r14, r18
    1228:	a9 2f       	mov	r26, r25
    122a:	a8 2b       	or	r26, r24
    122c:	fe 2f       	mov	r31, r30
    122e:	f6 2b       	or	r31, r22
    1230:	62 2f       	mov	r22, r18
    1232:	73 2f       	mov	r23, r19
    1234:	8a 2f       	mov	r24, r26
    1236:	9f 2f       	mov	r25, r31
    1238:	cd b7       	in	r28, 0x3d	; 61
    123a:	de b7       	in	r29, 0x3e	; 62
    123c:	e6 e0       	ldi	r30, 0x06	; 6
    123e:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__epilogue_restores__+0x18>

00001242 <__unpack_f>:
    1242:	dc 01       	movw	r26, r24
    1244:	fb 01       	movw	r30, r22
    1246:	2c 91       	ld	r18, X
    1248:	11 96       	adiw	r26, 0x01	; 1
    124a:	3c 91       	ld	r19, X
    124c:	11 97       	sbiw	r26, 0x01	; 1
    124e:	12 96       	adiw	r26, 0x02	; 2
    1250:	8c 91       	ld	r24, X
    1252:	12 97       	sbiw	r26, 0x02	; 2
    1254:	48 2f       	mov	r20, r24
    1256:	4f 77       	andi	r20, 0x7F	; 127
    1258:	50 e0       	ldi	r21, 0x00	; 0
    125a:	98 2f       	mov	r25, r24
    125c:	99 1f       	adc	r25, r25
    125e:	99 27       	eor	r25, r25
    1260:	99 1f       	adc	r25, r25
    1262:	13 96       	adiw	r26, 0x03	; 3
    1264:	6c 91       	ld	r22, X
    1266:	13 97       	sbiw	r26, 0x03	; 3
    1268:	86 2f       	mov	r24, r22
    126a:	88 0f       	add	r24, r24
    126c:	89 2b       	or	r24, r25
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	66 1f       	adc	r22, r22
    1272:	66 27       	eor	r22, r22
    1274:	66 1f       	adc	r22, r22
    1276:	61 83       	std	Z+1, r22	; 0x01
    1278:	00 97       	sbiw	r24, 0x00	; 0
    127a:	39 f5       	brne	.+78     	; 0x12ca <__unpack_f+0x88>
    127c:	21 15       	cp	r18, r1
    127e:	31 05       	cpc	r19, r1
    1280:	41 05       	cpc	r20, r1
    1282:	51 05       	cpc	r21, r1
    1284:	11 f4       	brne	.+4      	; 0x128a <__unpack_f+0x48>
    1286:	82 e0       	ldi	r24, 0x02	; 2
    1288:	29 c0       	rjmp	.+82     	; 0x12dc <__unpack_f+0x9a>
    128a:	82 e8       	ldi	r24, 0x82	; 130
    128c:	9f ef       	ldi	r25, 0xFF	; 255
    128e:	93 83       	std	Z+3, r25	; 0x03
    1290:	82 83       	std	Z+2, r24	; 0x02
    1292:	67 e0       	ldi	r22, 0x07	; 7
    1294:	22 0f       	add	r18, r18
    1296:	33 1f       	adc	r19, r19
    1298:	44 1f       	adc	r20, r20
    129a:	55 1f       	adc	r21, r21
    129c:	6a 95       	dec	r22
    129e:	d1 f7       	brne	.-12     	; 0x1294 <__unpack_f+0x52>
    12a0:	83 e0       	ldi	r24, 0x03	; 3
    12a2:	80 83       	st	Z, r24
    12a4:	09 c0       	rjmp	.+18     	; 0x12b8 <__unpack_f+0x76>
    12a6:	22 0f       	add	r18, r18
    12a8:	33 1f       	adc	r19, r19
    12aa:	44 1f       	adc	r20, r20
    12ac:	55 1f       	adc	r21, r21
    12ae:	82 81       	ldd	r24, Z+2	; 0x02
    12b0:	93 81       	ldd	r25, Z+3	; 0x03
    12b2:	01 97       	sbiw	r24, 0x01	; 1
    12b4:	93 83       	std	Z+3, r25	; 0x03
    12b6:	82 83       	std	Z+2, r24	; 0x02
    12b8:	20 30       	cpi	r18, 0x00	; 0
    12ba:	80 e0       	ldi	r24, 0x00	; 0
    12bc:	38 07       	cpc	r19, r24
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	48 07       	cpc	r20, r24
    12c2:	80 e4       	ldi	r24, 0x40	; 64
    12c4:	58 07       	cpc	r21, r24
    12c6:	78 f3       	brcs	.-34     	; 0x12a6 <__unpack_f+0x64>
    12c8:	20 c0       	rjmp	.+64     	; 0x130a <__unpack_f+0xc8>
    12ca:	8f 3f       	cpi	r24, 0xFF	; 255
    12cc:	91 05       	cpc	r25, r1
    12ce:	79 f4       	brne	.+30     	; 0x12ee <__unpack_f+0xac>
    12d0:	21 15       	cp	r18, r1
    12d2:	31 05       	cpc	r19, r1
    12d4:	41 05       	cpc	r20, r1
    12d6:	51 05       	cpc	r21, r1
    12d8:	19 f4       	brne	.+6      	; 0x12e0 <__unpack_f+0x9e>
    12da:	84 e0       	ldi	r24, 0x04	; 4
    12dc:	80 83       	st	Z, r24
    12de:	08 95       	ret
    12e0:	44 ff       	sbrs	r20, 4
    12e2:	03 c0       	rjmp	.+6      	; 0x12ea <__unpack_f+0xa8>
    12e4:	81 e0       	ldi	r24, 0x01	; 1
    12e6:	80 83       	st	Z, r24
    12e8:	10 c0       	rjmp	.+32     	; 0x130a <__unpack_f+0xc8>
    12ea:	10 82       	st	Z, r1
    12ec:	0e c0       	rjmp	.+28     	; 0x130a <__unpack_f+0xc8>
    12ee:	8f 57       	subi	r24, 0x7F	; 127
    12f0:	90 40       	sbci	r25, 0x00	; 0
    12f2:	93 83       	std	Z+3, r25	; 0x03
    12f4:	82 83       	std	Z+2, r24	; 0x02
    12f6:	83 e0       	ldi	r24, 0x03	; 3
    12f8:	80 83       	st	Z, r24
    12fa:	87 e0       	ldi	r24, 0x07	; 7
    12fc:	22 0f       	add	r18, r18
    12fe:	33 1f       	adc	r19, r19
    1300:	44 1f       	adc	r20, r20
    1302:	55 1f       	adc	r21, r21
    1304:	8a 95       	dec	r24
    1306:	d1 f7       	brne	.-12     	; 0x12fc <__unpack_f+0xba>
    1308:	50 64       	ori	r21, 0x40	; 64
    130a:	24 83       	std	Z+4, r18	; 0x04
    130c:	35 83       	std	Z+5, r19	; 0x05
    130e:	46 83       	std	Z+6, r20	; 0x06
    1310:	57 83       	std	Z+7, r21	; 0x07
    1312:	08 95       	ret

00001314 <__fpcmp_parts_f>:
    1314:	fc 01       	movw	r30, r24
    1316:	db 01       	movw	r26, r22
    1318:	90 81       	ld	r25, Z
    131a:	92 30       	cpi	r25, 0x02	; 2
    131c:	08 f4       	brcc	.+2      	; 0x1320 <__fpcmp_parts_f+0xc>
    131e:	49 c0       	rjmp	.+146    	; 0x13b2 <__fpcmp_parts_f+0x9e>
    1320:	8c 91       	ld	r24, X
    1322:	82 30       	cpi	r24, 0x02	; 2
    1324:	08 f4       	brcc	.+2      	; 0x1328 <__fpcmp_parts_f+0x14>
    1326:	45 c0       	rjmp	.+138    	; 0x13b2 <__fpcmp_parts_f+0x9e>
    1328:	94 30       	cpi	r25, 0x04	; 4
    132a:	51 f4       	brne	.+20     	; 0x1340 <__fpcmp_parts_f+0x2c>
    132c:	61 81       	ldd	r22, Z+1	; 0x01
    132e:	84 30       	cpi	r24, 0x04	; 4
    1330:	b1 f5       	brne	.+108    	; 0x139e <__fpcmp_parts_f+0x8a>
    1332:	11 96       	adiw	r26, 0x01	; 1
    1334:	2c 91       	ld	r18, X
    1336:	11 97       	sbiw	r26, 0x01	; 1
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	26 1b       	sub	r18, r22
    133c:	31 09       	sbc	r19, r1
    133e:	41 c0       	rjmp	.+130    	; 0x13c2 <__fpcmp_parts_f+0xae>
    1340:	84 30       	cpi	r24, 0x04	; 4
    1342:	21 f0       	breq	.+8      	; 0x134c <__fpcmp_parts_f+0x38>
    1344:	92 30       	cpi	r25, 0x02	; 2
    1346:	41 f4       	brne	.+16     	; 0x1358 <__fpcmp_parts_f+0x44>
    1348:	82 30       	cpi	r24, 0x02	; 2
    134a:	b1 f1       	breq	.+108    	; 0x13b8 <__fpcmp_parts_f+0xa4>
    134c:	11 96       	adiw	r26, 0x01	; 1
    134e:	8c 91       	ld	r24, X
    1350:	11 97       	sbiw	r26, 0x01	; 1
    1352:	88 23       	and	r24, r24
    1354:	a1 f1       	breq	.+104    	; 0x13be <__fpcmp_parts_f+0xaa>
    1356:	2d c0       	rjmp	.+90     	; 0x13b2 <__fpcmp_parts_f+0x9e>
    1358:	61 81       	ldd	r22, Z+1	; 0x01
    135a:	82 30       	cpi	r24, 0x02	; 2
    135c:	01 f1       	breq	.+64     	; 0x139e <__fpcmp_parts_f+0x8a>
    135e:	11 96       	adiw	r26, 0x01	; 1
    1360:	8c 91       	ld	r24, X
    1362:	11 97       	sbiw	r26, 0x01	; 1
    1364:	68 17       	cp	r22, r24
    1366:	d9 f4       	brne	.+54     	; 0x139e <__fpcmp_parts_f+0x8a>
    1368:	22 81       	ldd	r18, Z+2	; 0x02
    136a:	33 81       	ldd	r19, Z+3	; 0x03
    136c:	12 96       	adiw	r26, 0x02	; 2
    136e:	8d 91       	ld	r24, X+
    1370:	9c 91       	ld	r25, X
    1372:	13 97       	sbiw	r26, 0x03	; 3
    1374:	82 17       	cp	r24, r18
    1376:	93 07       	cpc	r25, r19
    1378:	94 f0       	brlt	.+36     	; 0x139e <__fpcmp_parts_f+0x8a>
    137a:	28 17       	cp	r18, r24
    137c:	39 07       	cpc	r19, r25
    137e:	bc f0       	brlt	.+46     	; 0x13ae <__fpcmp_parts_f+0x9a>
    1380:	24 81       	ldd	r18, Z+4	; 0x04
    1382:	35 81       	ldd	r19, Z+5	; 0x05
    1384:	46 81       	ldd	r20, Z+6	; 0x06
    1386:	57 81       	ldd	r21, Z+7	; 0x07
    1388:	14 96       	adiw	r26, 0x04	; 4
    138a:	8d 91       	ld	r24, X+
    138c:	9d 91       	ld	r25, X+
    138e:	0d 90       	ld	r0, X+
    1390:	bc 91       	ld	r27, X
    1392:	a0 2d       	mov	r26, r0
    1394:	82 17       	cp	r24, r18
    1396:	93 07       	cpc	r25, r19
    1398:	a4 07       	cpc	r26, r20
    139a:	b5 07       	cpc	r27, r21
    139c:	18 f4       	brcc	.+6      	; 0x13a4 <__fpcmp_parts_f+0x90>
    139e:	66 23       	and	r22, r22
    13a0:	41 f0       	breq	.+16     	; 0x13b2 <__fpcmp_parts_f+0x9e>
    13a2:	0d c0       	rjmp	.+26     	; 0x13be <__fpcmp_parts_f+0xaa>
    13a4:	28 17       	cp	r18, r24
    13a6:	39 07       	cpc	r19, r25
    13a8:	4a 07       	cpc	r20, r26
    13aa:	5b 07       	cpc	r21, r27
    13ac:	28 f4       	brcc	.+10     	; 0x13b8 <__fpcmp_parts_f+0xa4>
    13ae:	66 23       	and	r22, r22
    13b0:	31 f0       	breq	.+12     	; 0x13be <__fpcmp_parts_f+0xaa>
    13b2:	21 e0       	ldi	r18, 0x01	; 1
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	05 c0       	rjmp	.+10     	; 0x13c2 <__fpcmp_parts_f+0xae>
    13b8:	20 e0       	ldi	r18, 0x00	; 0
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	02 c0       	rjmp	.+4      	; 0x13c2 <__fpcmp_parts_f+0xae>
    13be:	2f ef       	ldi	r18, 0xFF	; 255
    13c0:	3f ef       	ldi	r19, 0xFF	; 255
    13c2:	c9 01       	movw	r24, r18
    13c4:	08 95       	ret

000013c6 <__prologue_saves__>:
    13c6:	2f 92       	push	r2
    13c8:	3f 92       	push	r3
    13ca:	4f 92       	push	r4
    13cc:	5f 92       	push	r5
    13ce:	6f 92       	push	r6
    13d0:	7f 92       	push	r7
    13d2:	8f 92       	push	r8
    13d4:	9f 92       	push	r9
    13d6:	af 92       	push	r10
    13d8:	bf 92       	push	r11
    13da:	cf 92       	push	r12
    13dc:	df 92       	push	r13
    13de:	ef 92       	push	r14
    13e0:	ff 92       	push	r15
    13e2:	0f 93       	push	r16
    13e4:	1f 93       	push	r17
    13e6:	cf 93       	push	r28
    13e8:	df 93       	push	r29
    13ea:	cd b7       	in	r28, 0x3d	; 61
    13ec:	de b7       	in	r29, 0x3e	; 62
    13ee:	ca 1b       	sub	r28, r26
    13f0:	db 0b       	sbc	r29, r27
    13f2:	0f b6       	in	r0, 0x3f	; 63
    13f4:	f8 94       	cli
    13f6:	de bf       	out	0x3e, r29	; 62
    13f8:	0f be       	out	0x3f, r0	; 63
    13fa:	cd bf       	out	0x3d, r28	; 61
    13fc:	09 94       	ijmp

000013fe <__epilogue_restores__>:
    13fe:	2a 88       	ldd	r2, Y+18	; 0x12
    1400:	39 88       	ldd	r3, Y+17	; 0x11
    1402:	48 88       	ldd	r4, Y+16	; 0x10
    1404:	5f 84       	ldd	r5, Y+15	; 0x0f
    1406:	6e 84       	ldd	r6, Y+14	; 0x0e
    1408:	7d 84       	ldd	r7, Y+13	; 0x0d
    140a:	8c 84       	ldd	r8, Y+12	; 0x0c
    140c:	9b 84       	ldd	r9, Y+11	; 0x0b
    140e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1410:	b9 84       	ldd	r11, Y+9	; 0x09
    1412:	c8 84       	ldd	r12, Y+8	; 0x08
    1414:	df 80       	ldd	r13, Y+7	; 0x07
    1416:	ee 80       	ldd	r14, Y+6	; 0x06
    1418:	fd 80       	ldd	r15, Y+5	; 0x05
    141a:	0c 81       	ldd	r16, Y+4	; 0x04
    141c:	1b 81       	ldd	r17, Y+3	; 0x03
    141e:	aa 81       	ldd	r26, Y+2	; 0x02
    1420:	b9 81       	ldd	r27, Y+1	; 0x01
    1422:	ce 0f       	add	r28, r30
    1424:	d1 1d       	adc	r29, r1
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	f8 94       	cli
    142a:	de bf       	out	0x3e, r29	; 62
    142c:	0f be       	out	0x3f, r0	; 63
    142e:	cd bf       	out	0x3d, r28	; 61
    1430:	ed 01       	movw	r28, r26
    1432:	08 95       	ret

00001434 <_exit>:
    1434:	f8 94       	cli

00001436 <__stop_program>:
    1436:	ff cf       	rjmp	.-2      	; 0x1436 <__stop_program>
