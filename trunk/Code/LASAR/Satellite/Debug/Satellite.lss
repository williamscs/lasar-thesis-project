
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00001506  0000159a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001506  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010a  0080010a  000015a4  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000015a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00001cf5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000027d  00000000  00000000  00001e95  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002495  00000000  00000000  00002112  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000117f  00000000  00000000  000045a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000018a0  00000000  00000000  00005726  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  00006fc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000047a  00000000  00000000  00007208  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  00007682  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000062c  00000000  00000000  000082a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  000088d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 03 04 	jmp	0x806	; 0x806 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 c0 02 	jmp	0x580	; 0x580 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 94 02 	jmp	0x528	; 0x528 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 e0       	ldi	r30, 0x06	; 6
      7c:	f5 e1       	ldi	r31, 0x15	; 21
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 30       	cpi	r26, 0x0A	; 10
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	aa e0       	ldi	r26, 0x0A	; 10
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a0 31       	cpi	r26, 0x10	; 16
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 81 0a 	jmp	0x1502	; 0x1502 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile unsigned int tick = 0;
volatile uint8_t rxflag = 0;
volatile uint8_t zerocross = 0;

int main(void)
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	ae 97       	sbiw	r28, 0x2e	; 46
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	DDRB = (1<<PORTB0);
      be:	84 e2       	ldi	r24, 0x24	; 36
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
	DDRD = (1 << PORTD3);
      c8:	8a e2       	ldi	r24, 0x2A	; 42
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	28 e0       	ldi	r18, 0x08	; 8
      ce:	fc 01       	movw	r30, r24
      d0:	20 83       	st	Z, r18
	PORTB &= ~(1 << PORTB0);
      d2:	85 e2       	ldi	r24, 0x25	; 37
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	25 e2       	ldi	r18, 0x25	; 37
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	f9 01       	movw	r30, r18
      dc:	20 81       	ld	r18, Z
      de:	2e 7f       	andi	r18, 0xFE	; 254
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
	
	//PORTB |= (1 << PORTB0);
	// turn on interrupts
	sei();
      e4:	78 94       	sei
      e6:	80 e0       	ldi	r24, 0x00	; 0
      e8:	90 e4       	ldi	r25, 0x40	; 64
      ea:	ac e1       	ldi	r26, 0x1C	; 28
      ec:	b6 e4       	ldi	r27, 0x46	; 70
      ee:	8d 83       	std	Y+5, r24	; 0x05
      f0:	9e 83       	std	Y+6, r25	; 0x06
      f2:	af 83       	std	Y+7, r26	; 0x07
      f4:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      f6:	6d 81       	ldd	r22, Y+5	; 0x05
      f8:	7e 81       	ldd	r23, Y+6	; 0x06
      fa:	8f 81       	ldd	r24, Y+7	; 0x07
      fc:	98 85       	ldd	r25, Y+8	; 0x08
      fe:	20 e0       	ldi	r18, 0x00	; 0
     100:	30 e0       	ldi	r19, 0x00	; 0
     102:	4a e7       	ldi	r20, 0x7A	; 122
     104:	55 e4       	ldi	r21, 0x45	; 69
     106:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     10a:	dc 01       	movw	r26, r24
     10c:	cb 01       	movw	r24, r22
     10e:	89 87       	std	Y+9, r24	; 0x09
     110:	9a 87       	std	Y+10, r25	; 0x0a
     112:	ab 87       	std	Y+11, r26	; 0x0b
     114:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     116:	11 e0       	ldi	r17, 0x01	; 1
     118:	69 85       	ldd	r22, Y+9	; 0x09
     11a:	7a 85       	ldd	r23, Y+10	; 0x0a
     11c:	8b 85       	ldd	r24, Y+11	; 0x0b
     11e:	9c 85       	ldd	r25, Y+12	; 0x0c
     120:	20 e0       	ldi	r18, 0x00	; 0
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	40 e8       	ldi	r20, 0x80	; 128
     126:	5f e3       	ldi	r21, 0x3F	; 63
     128:	0e 94 38 08 	call	0x1070	; 0x1070 <__ltsf2>
     12c:	88 23       	and	r24, r24
     12e:	0c f0       	brlt	.+2      	; 0x132 <main+0x8c>
     130:	10 e0       	ldi	r17, 0x00	; 0
     132:	11 23       	and	r17, r17
     134:	29 f0       	breq	.+10     	; 0x140 <main+0x9a>
		__ticks = 1;
     136:	81 e0       	ldi	r24, 0x01	; 1
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	9e 87       	std	Y+14, r25	; 0x0e
     13c:	8d 87       	std	Y+13, r24	; 0x0d
     13e:	46 c0       	rjmp	.+140    	; 0x1cc <main+0x126>
	else if (__tmp > 65535)
     140:	11 e0       	ldi	r17, 0x01	; 1
     142:	69 85       	ldd	r22, Y+9	; 0x09
     144:	7a 85       	ldd	r23, Y+10	; 0x0a
     146:	8b 85       	ldd	r24, Y+11	; 0x0b
     148:	9c 85       	ldd	r25, Y+12	; 0x0c
     14a:	20 e0       	ldi	r18, 0x00	; 0
     14c:	3f ef       	ldi	r19, 0xFF	; 255
     14e:	4f e7       	ldi	r20, 0x7F	; 127
     150:	57 e4       	ldi	r21, 0x47	; 71
     152:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__gtsf2>
     156:	18 16       	cp	r1, r24
     158:	0c f0       	brlt	.+2      	; 0x15c <main+0xb6>
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	11 23       	and	r17, r17
     15e:	61 f1       	breq	.+88     	; 0x1b8 <main+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     160:	6d 81       	ldd	r22, Y+5	; 0x05
     162:	7e 81       	ldd	r23, Y+6	; 0x06
     164:	8f 81       	ldd	r24, Y+7	; 0x07
     166:	98 85       	ldd	r25, Y+8	; 0x08
     168:	20 e0       	ldi	r18, 0x00	; 0
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	40 e2       	ldi	r20, 0x20	; 32
     16e:	51 e4       	ldi	r21, 0x41	; 65
     170:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     174:	dc 01       	movw	r26, r24
     176:	cb 01       	movw	r24, r22
     178:	bc 01       	movw	r22, r24
     17a:	cd 01       	movw	r24, r26
     17c:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     180:	dc 01       	movw	r26, r24
     182:	cb 01       	movw	r24, r22
     184:	9e 87       	std	Y+14, r25	; 0x0e
     186:	8d 87       	std	Y+13, r24	; 0x0d
     188:	12 c0       	rjmp	.+36     	; 0x1ae <main+0x108>
     18a:	80 e9       	ldi	r24, 0x90	; 144
     18c:	91 e0       	ldi	r25, 0x01	; 1
     18e:	98 8b       	std	Y+16, r25	; 0x10
     190:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     192:	8f 85       	ldd	r24, Y+15	; 0x0f
     194:	98 89       	ldd	r25, Y+16	; 0x10
     196:	8c 01       	movw	r16, r24
     198:	c8 01       	movw	r24, r16
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <main+0xf4>
     19e:	8c 01       	movw	r16, r24
     1a0:	18 8b       	std	Y+16, r17	; 0x10
     1a2:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1a4:	8d 85       	ldd	r24, Y+13	; 0x0d
     1a6:	9e 85       	ldd	r25, Y+14	; 0x0e
     1a8:	01 97       	sbiw	r24, 0x01	; 1
     1aa:	9e 87       	std	Y+14, r25	; 0x0e
     1ac:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ae:	8d 85       	ldd	r24, Y+13	; 0x0d
     1b0:	9e 85       	ldd	r25, Y+14	; 0x0e
     1b2:	00 97       	sbiw	r24, 0x00	; 0
     1b4:	51 f7       	brne	.-44     	; 0x18a <main+0xe4>
     1b6:	17 c0       	rjmp	.+46     	; 0x1e6 <main+0x140>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1b8:	69 85       	ldd	r22, Y+9	; 0x09
     1ba:	7a 85       	ldd	r23, Y+10	; 0x0a
     1bc:	8b 85       	ldd	r24, Y+11	; 0x0b
     1be:	9c 85       	ldd	r25, Y+12	; 0x0c
     1c0:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     1c4:	dc 01       	movw	r26, r24
     1c6:	cb 01       	movw	r24, r22
     1c8:	9e 87       	std	Y+14, r25	; 0x0e
     1ca:	8d 87       	std	Y+13, r24	; 0x0d
     1cc:	8d 85       	ldd	r24, Y+13	; 0x0d
     1ce:	9e 85       	ldd	r25, Y+14	; 0x0e
     1d0:	9a 8b       	std	Y+18, r25	; 0x12
     1d2:	89 8b       	std	Y+17, r24	; 0x11
     1d4:	89 89       	ldd	r24, Y+17	; 0x11
     1d6:	9a 89       	ldd	r25, Y+18	; 0x12
     1d8:	8c 01       	movw	r16, r24
     1da:	f8 01       	movw	r30, r16
     1dc:	31 97       	sbiw	r30, 0x01	; 1
     1de:	f1 f7       	brne	.-4      	; 0x1dc <main+0x136>
     1e0:	8f 01       	movw	r16, r30
     1e2:	1a 8b       	std	Y+18, r17	; 0x12
     1e4:	09 8b       	std	Y+17, r16	; 0x11
	_delay_ms(10000);
	dim = 128;
     1e6:	80 e8       	ldi	r24, 0x80	; 128
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	90 93 01 01 	sts	0x0101, r25
     1ee:	80 93 00 01 	sts	0x0100, r24
	initTimer(65);
     1f2:	81 e4       	ldi	r24, 0x41	; 65
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 25 02 	call	0x44a	; 0x44a <initTimer>
	while(1)
	{
		for( int i = 0; i < 256; ++i )
     1fa:	1a 82       	std	Y+2, r1	; 0x02
     1fc:	19 82       	std	Y+1, r1	; 0x01
     1fe:	89 c0       	rjmp	.+274    	; 0x312 <main+0x26c>
		{
			setCycle(i);
     200:	89 81       	ldd	r24, Y+1	; 0x01
     202:	9a 81       	ldd	r25, Y+2	; 0x02
     204:	0e 94 81 02 	call	0x502	; 0x502 <setCycle>
     208:	80 e0       	ldi	r24, 0x00	; 0
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	a0 e2       	ldi	r26, 0x20	; 32
     20e:	b2 e4       	ldi	r27, 0x42	; 66
     210:	8b 8b       	std	Y+19, r24	; 0x13
     212:	9c 8b       	std	Y+20, r25	; 0x14
     214:	ad 8b       	std	Y+21, r26	; 0x15
     216:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     218:	6b 89       	ldd	r22, Y+19	; 0x13
     21a:	7c 89       	ldd	r23, Y+20	; 0x14
     21c:	8d 89       	ldd	r24, Y+21	; 0x15
     21e:	9e 89       	ldd	r25, Y+22	; 0x16
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	4a e7       	ldi	r20, 0x7A	; 122
     226:	55 e4       	ldi	r21, 0x45	; 69
     228:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     22c:	dc 01       	movw	r26, r24
     22e:	cb 01       	movw	r24, r22
     230:	8f 8b       	std	Y+23, r24	; 0x17
     232:	98 8f       	std	Y+24, r25	; 0x18
     234:	a9 8f       	std	Y+25, r26	; 0x19
     236:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     238:	11 e0       	ldi	r17, 0x01	; 1
     23a:	6f 89       	ldd	r22, Y+23	; 0x17
     23c:	78 8d       	ldd	r23, Y+24	; 0x18
     23e:	89 8d       	ldd	r24, Y+25	; 0x19
     240:	9a 8d       	ldd	r25, Y+26	; 0x1a
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	40 e8       	ldi	r20, 0x80	; 128
     248:	5f e3       	ldi	r21, 0x3F	; 63
     24a:	0e 94 38 08 	call	0x1070	; 0x1070 <__ltsf2>
     24e:	88 23       	and	r24, r24
     250:	0c f0       	brlt	.+2      	; 0x254 <main+0x1ae>
     252:	10 e0       	ldi	r17, 0x00	; 0
     254:	11 23       	and	r17, r17
     256:	29 f0       	breq	.+10     	; 0x262 <main+0x1bc>
		__ticks = 1;
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	9c 8f       	std	Y+28, r25	; 0x1c
     25e:	8b 8f       	std	Y+27, r24	; 0x1b
     260:	46 c0       	rjmp	.+140    	; 0x2ee <main+0x248>
	else if (__tmp > 65535)
     262:	11 e0       	ldi	r17, 0x01	; 1
     264:	6f 89       	ldd	r22, Y+23	; 0x17
     266:	78 8d       	ldd	r23, Y+24	; 0x18
     268:	89 8d       	ldd	r24, Y+25	; 0x19
     26a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     26c:	20 e0       	ldi	r18, 0x00	; 0
     26e:	3f ef       	ldi	r19, 0xFF	; 255
     270:	4f e7       	ldi	r20, 0x7F	; 127
     272:	57 e4       	ldi	r21, 0x47	; 71
     274:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__gtsf2>
     278:	18 16       	cp	r1, r24
     27a:	0c f0       	brlt	.+2      	; 0x27e <main+0x1d8>
     27c:	10 e0       	ldi	r17, 0x00	; 0
     27e:	11 23       	and	r17, r17
     280:	61 f1       	breq	.+88     	; 0x2da <main+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     282:	6b 89       	ldd	r22, Y+19	; 0x13
     284:	7c 89       	ldd	r23, Y+20	; 0x14
     286:	8d 89       	ldd	r24, Y+21	; 0x15
     288:	9e 89       	ldd	r25, Y+22	; 0x16
     28a:	20 e0       	ldi	r18, 0x00	; 0
     28c:	30 e0       	ldi	r19, 0x00	; 0
     28e:	40 e2       	ldi	r20, 0x20	; 32
     290:	51 e4       	ldi	r21, 0x41	; 65
     292:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     296:	dc 01       	movw	r26, r24
     298:	cb 01       	movw	r24, r22
     29a:	bc 01       	movw	r22, r24
     29c:	cd 01       	movw	r24, r26
     29e:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     2a2:	dc 01       	movw	r26, r24
     2a4:	cb 01       	movw	r24, r22
     2a6:	9c 8f       	std	Y+28, r25	; 0x1c
     2a8:	8b 8f       	std	Y+27, r24	; 0x1b
     2aa:	12 c0       	rjmp	.+36     	; 0x2d0 <main+0x22a>
     2ac:	80 e9       	ldi	r24, 0x90	; 144
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	9e 8f       	std	Y+30, r25	; 0x1e
     2b2:	8d 8f       	std	Y+29, r24	; 0x1d
     2b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2b8:	8c 01       	movw	r16, r24
     2ba:	c8 01       	movw	r24, r16
     2bc:	01 97       	sbiw	r24, 0x01	; 1
     2be:	f1 f7       	brne	.-4      	; 0x2bc <main+0x216>
     2c0:	8c 01       	movw	r16, r24
     2c2:	1e 8f       	std	Y+30, r17	; 0x1e
     2c4:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2c6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2c8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	9c 8f       	std	Y+28, r25	; 0x1c
     2ce:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2d4:	00 97       	sbiw	r24, 0x00	; 0
     2d6:	51 f7       	brne	.-44     	; 0x2ac <main+0x206>
     2d8:	17 c0       	rjmp	.+46     	; 0x308 <main+0x262>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2da:	6f 89       	ldd	r22, Y+23	; 0x17
     2dc:	78 8d       	ldd	r23, Y+24	; 0x18
     2de:	89 8d       	ldd	r24, Y+25	; 0x19
     2e0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2e2:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     2e6:	dc 01       	movw	r26, r24
     2e8:	cb 01       	movw	r24, r22
     2ea:	9c 8f       	std	Y+28, r25	; 0x1c
     2ec:	8b 8f       	std	Y+27, r24	; 0x1b
     2ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2f2:	98 a3       	std	Y+32, r25	; 0x20
     2f4:	8f 8f       	std	Y+31, r24	; 0x1f
     2f6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2f8:	98 a1       	ldd	r25, Y+32	; 0x20
     2fa:	8c 01       	movw	r16, r24
     2fc:	f8 01       	movw	r30, r16
     2fe:	31 97       	sbiw	r30, 0x01	; 1
     300:	f1 f7       	brne	.-4      	; 0x2fe <main+0x258>
     302:	8f 01       	movw	r16, r30
     304:	18 a3       	std	Y+32, r17	; 0x20
     306:	0f 8f       	std	Y+31, r16	; 0x1f
	_delay_ms(10000);
	dim = 128;
	initTimer(65);
	while(1)
	{
		for( int i = 0; i < 256; ++i )
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	9a 81       	ldd	r25, Y+2	; 0x02
     30c:	01 96       	adiw	r24, 0x01	; 1
     30e:	9a 83       	std	Y+2, r25	; 0x02
     310:	89 83       	std	Y+1, r24	; 0x01
     312:	89 81       	ldd	r24, Y+1	; 0x01
     314:	9a 81       	ldd	r25, Y+2	; 0x02
     316:	8f 3f       	cpi	r24, 0xFF	; 255
     318:	91 05       	cpc	r25, r1
     31a:	09 f0       	breq	.+2      	; 0x31e <main+0x278>
     31c:	0c f4       	brge	.+2      	; 0x320 <main+0x27a>
     31e:	70 cf       	rjmp	.-288    	; 0x200 <main+0x15a>
		{
			setCycle(i);
			_delay_ms(40);
		}
		
		for( int i = 255; i > 0; --i)
     320:	8f ef       	ldi	r24, 0xFF	; 255
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	9c 83       	std	Y+4, r25	; 0x04
     326:	8b 83       	std	Y+3, r24	; 0x03
     328:	89 c0       	rjmp	.+274    	; 0x43c <main+0x396>
		{
			setCycle(i);
     32a:	8b 81       	ldd	r24, Y+3	; 0x03
     32c:	9c 81       	ldd	r25, Y+4	; 0x04
     32e:	0e 94 81 02 	call	0x502	; 0x502 <setCycle>
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	a0 e2       	ldi	r26, 0x20	; 32
     338:	b2 e4       	ldi	r27, 0x42	; 66
     33a:	89 a3       	std	Y+33, r24	; 0x21
     33c:	9a a3       	std	Y+34, r25	; 0x22
     33e:	ab a3       	std	Y+35, r26	; 0x23
     340:	bc a3       	std	Y+36, r27	; 0x24
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     342:	69 a1       	ldd	r22, Y+33	; 0x21
     344:	7a a1       	ldd	r23, Y+34	; 0x22
     346:	8b a1       	ldd	r24, Y+35	; 0x23
     348:	9c a1       	ldd	r25, Y+36	; 0x24
     34a:	20 e0       	ldi	r18, 0x00	; 0
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	4a e7       	ldi	r20, 0x7A	; 122
     350:	55 e4       	ldi	r21, 0x45	; 69
     352:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     356:	dc 01       	movw	r26, r24
     358:	cb 01       	movw	r24, r22
     35a:	8d a3       	std	Y+37, r24	; 0x25
     35c:	9e a3       	std	Y+38, r25	; 0x26
     35e:	af a3       	std	Y+39, r26	; 0x27
     360:	b8 a7       	std	Y+40, r27	; 0x28
	if (__tmp < 1.0)
     362:	11 e0       	ldi	r17, 0x01	; 1
     364:	6d a1       	ldd	r22, Y+37	; 0x25
     366:	7e a1       	ldd	r23, Y+38	; 0x26
     368:	8f a1       	ldd	r24, Y+39	; 0x27
     36a:	98 a5       	ldd	r25, Y+40	; 0x28
     36c:	20 e0       	ldi	r18, 0x00	; 0
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	40 e8       	ldi	r20, 0x80	; 128
     372:	5f e3       	ldi	r21, 0x3F	; 63
     374:	0e 94 38 08 	call	0x1070	; 0x1070 <__ltsf2>
     378:	88 23       	and	r24, r24
     37a:	0c f0       	brlt	.+2      	; 0x37e <main+0x2d8>
     37c:	10 e0       	ldi	r17, 0x00	; 0
     37e:	11 23       	and	r17, r17
     380:	29 f0       	breq	.+10     	; 0x38c <main+0x2e6>
		__ticks = 1;
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	9a a7       	std	Y+42, r25	; 0x2a
     388:	89 a7       	std	Y+41, r24	; 0x29
     38a:	46 c0       	rjmp	.+140    	; 0x418 <main+0x372>
	else if (__tmp > 65535)
     38c:	11 e0       	ldi	r17, 0x01	; 1
     38e:	6d a1       	ldd	r22, Y+37	; 0x25
     390:	7e a1       	ldd	r23, Y+38	; 0x26
     392:	8f a1       	ldd	r24, Y+39	; 0x27
     394:	98 a5       	ldd	r25, Y+40	; 0x28
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	3f ef       	ldi	r19, 0xFF	; 255
     39a:	4f e7       	ldi	r20, 0x7F	; 127
     39c:	57 e4       	ldi	r21, 0x47	; 71
     39e:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__gtsf2>
     3a2:	18 16       	cp	r1, r24
     3a4:	0c f0       	brlt	.+2      	; 0x3a8 <main+0x302>
     3a6:	10 e0       	ldi	r17, 0x00	; 0
     3a8:	11 23       	and	r17, r17
     3aa:	61 f1       	breq	.+88     	; 0x404 <main+0x35e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3ac:	69 a1       	ldd	r22, Y+33	; 0x21
     3ae:	7a a1       	ldd	r23, Y+34	; 0x22
     3b0:	8b a1       	ldd	r24, Y+35	; 0x23
     3b2:	9c a1       	ldd	r25, Y+36	; 0x24
     3b4:	20 e0       	ldi	r18, 0x00	; 0
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	40 e2       	ldi	r20, 0x20	; 32
     3ba:	51 e4       	ldi	r21, 0x41	; 65
     3bc:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     3c0:	dc 01       	movw	r26, r24
     3c2:	cb 01       	movw	r24, r22
     3c4:	bc 01       	movw	r22, r24
     3c6:	cd 01       	movw	r24, r26
     3c8:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     3cc:	dc 01       	movw	r26, r24
     3ce:	cb 01       	movw	r24, r22
     3d0:	9a a7       	std	Y+42, r25	; 0x2a
     3d2:	89 a7       	std	Y+41, r24	; 0x29
     3d4:	12 c0       	rjmp	.+36     	; 0x3fa <main+0x354>
     3d6:	80 e9       	ldi	r24, 0x90	; 144
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	9c a7       	std	Y+44, r25	; 0x2c
     3dc:	8b a7       	std	Y+43, r24	; 0x2b
     3de:	8b a5       	ldd	r24, Y+43	; 0x2b
     3e0:	9c a5       	ldd	r25, Y+44	; 0x2c
     3e2:	8c 01       	movw	r16, r24
     3e4:	c8 01       	movw	r24, r16
     3e6:	01 97       	sbiw	r24, 0x01	; 1
     3e8:	f1 f7       	brne	.-4      	; 0x3e6 <main+0x340>
     3ea:	8c 01       	movw	r16, r24
     3ec:	1c a7       	std	Y+44, r17	; 0x2c
     3ee:	0b a7       	std	Y+43, r16	; 0x2b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3f0:	89 a5       	ldd	r24, Y+41	; 0x29
     3f2:	9a a5       	ldd	r25, Y+42	; 0x2a
     3f4:	01 97       	sbiw	r24, 0x01	; 1
     3f6:	9a a7       	std	Y+42, r25	; 0x2a
     3f8:	89 a7       	std	Y+41, r24	; 0x29
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3fa:	89 a5       	ldd	r24, Y+41	; 0x29
     3fc:	9a a5       	ldd	r25, Y+42	; 0x2a
     3fe:	00 97       	sbiw	r24, 0x00	; 0
     400:	51 f7       	brne	.-44     	; 0x3d6 <main+0x330>
     402:	17 c0       	rjmp	.+46     	; 0x432 <main+0x38c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     404:	6d a1       	ldd	r22, Y+37	; 0x25
     406:	7e a1       	ldd	r23, Y+38	; 0x26
     408:	8f a1       	ldd	r24, Y+39	; 0x27
     40a:	98 a5       	ldd	r25, Y+40	; 0x28
     40c:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     410:	dc 01       	movw	r26, r24
     412:	cb 01       	movw	r24, r22
     414:	9a a7       	std	Y+42, r25	; 0x2a
     416:	89 a7       	std	Y+41, r24	; 0x29
     418:	89 a5       	ldd	r24, Y+41	; 0x29
     41a:	9a a5       	ldd	r25, Y+42	; 0x2a
     41c:	9e a7       	std	Y+46, r25	; 0x2e
     41e:	8d a7       	std	Y+45, r24	; 0x2d
     420:	8d a5       	ldd	r24, Y+45	; 0x2d
     422:	9e a5       	ldd	r25, Y+46	; 0x2e
     424:	8c 01       	movw	r16, r24
     426:	f8 01       	movw	r30, r16
     428:	31 97       	sbiw	r30, 0x01	; 1
     42a:	f1 f7       	brne	.-4      	; 0x428 <main+0x382>
     42c:	8f 01       	movw	r16, r30
     42e:	1e a7       	std	Y+46, r17	; 0x2e
     430:	0d a7       	std	Y+45, r16	; 0x2d
		{
			setCycle(i);
			_delay_ms(40);
		}
		
		for( int i = 255; i > 0; --i)
     432:	8b 81       	ldd	r24, Y+3	; 0x03
     434:	9c 81       	ldd	r25, Y+4	; 0x04
     436:	01 97       	sbiw	r24, 0x01	; 1
     438:	9c 83       	std	Y+4, r25	; 0x04
     43a:	8b 83       	std	Y+3, r24	; 0x03
     43c:	8b 81       	ldd	r24, Y+3	; 0x03
     43e:	9c 81       	ldd	r25, Y+4	; 0x04
     440:	18 16       	cp	r1, r24
     442:	19 06       	cpc	r1, r25
     444:	0c f4       	brge	.+2      	; 0x448 <main+0x3a2>
     446:	71 cf       	rjmp	.-286    	; 0x32a <main+0x284>
		{
			setCycle(i);
			_delay_ms(40);
		}
	}				
     448:	d8 ce       	rjmp	.-592    	; 0x1fa <main+0x154>

0000044a <initTimer>:
    return(0);
}

void initTimer( int dutycycle )
{
     44a:	df 93       	push	r29
     44c:	cf 93       	push	r28
     44e:	00 d0       	rcall	.+0      	; 0x450 <initTimer+0x6>
     450:	cd b7       	in	r28, 0x3d	; 61
     452:	de b7       	in	r29, 0x3e	; 62
     454:	9a 83       	std	Y+2, r25	; 0x02
     456:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = 65;
     458:	87 e4       	ldi	r24, 0x47	; 71
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	21 e4       	ldi	r18, 0x41	; 65
     45e:	fc 01       	movw	r30, r24
     460:	20 83       	st	Z, r18
    DDRD |= (1 << PORTD6);         
     462:	8a e2       	ldi	r24, 0x2A	; 42
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	2a e2       	ldi	r18, 0x2A	; 42
     468:	30 e0       	ldi	r19, 0x00	; 0
     46a:	f9 01       	movw	r30, r18
     46c:	20 81       	ld	r18, Z
     46e:	20 64       	ori	r18, 0x40	; 64
     470:	fc 01       	movw	r30, r24
     472:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);
     474:	84 e4       	ldi	r24, 0x44	; 68
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	24 e4       	ldi	r18, 0x44	; 68
     47a:	30 e0       	ldi	r19, 0x00	; 0
     47c:	f9 01       	movw	r30, r18
     47e:	20 81       	ld	r18, Z
     480:	20 68       	ori	r18, 0x80	; 128
     482:	fc 01       	movw	r30, r24
     484:	20 83       	st	Z, r18
    // set none-inverting mode

    TCCR0A |= (1 << WGM01) | (1 << WGM00);
     486:	84 e4       	ldi	r24, 0x44	; 68
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	24 e4       	ldi	r18, 0x44	; 68
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	f9 01       	movw	r30, r18
     490:	20 81       	ld	r18, Z
     492:	23 60       	ori	r18, 0x03	; 3
     494:	fc 01       	movw	r30, r24
     496:	20 83       	st	Z, r18
    // set fast PWM Mode

    TCCR0B |= (1 << CS01);
     498:	85 e4       	ldi	r24, 0x45	; 69
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	25 e4       	ldi	r18, 0x45	; 69
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	f9 01       	movw	r30, r18
     4a2:	20 81       	ld	r18, Z
     4a4:	22 60       	ori	r18, 0x02	; 2
     4a6:	fc 01       	movw	r30, r24
     4a8:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
}
     4aa:	0f 90       	pop	r0
     4ac:	0f 90       	pop	r0
     4ae:	cf 91       	pop	r28
     4b0:	df 91       	pop	r29
     4b2:	08 95       	ret

000004b4 <initInterrupt0>:

void initInterrupt0()
{
     4b4:	df 93       	push	r29
     4b6:	cf 93       	push	r28
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
	DDRD &= ~(1 << PORTD2);
     4bc:	8a e2       	ldi	r24, 0x2A	; 42
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	2a e2       	ldi	r18, 0x2A	; 42
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	f9 01       	movw	r30, r18
     4c6:	20 81       	ld	r18, Z
     4c8:	2b 7f       	andi	r18, 0xFB	; 251
     4ca:	fc 01       	movw	r30, r24
     4cc:	20 83       	st	Z, r18
	PORTD |= (1 << PORTD2);
     4ce:	8b e2       	ldi	r24, 0x2B	; 43
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	2b e2       	ldi	r18, 0x2B	; 43
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	f9 01       	movw	r30, r18
     4d8:	20 81       	ld	r18, Z
     4da:	24 60       	ori	r18, 0x04	; 4
     4dc:	fc 01       	movw	r30, r24
     4de:	20 83       	st	Z, r18
	PCMSK0 |= (1 << PORTD2);
     4e0:	8b e6       	ldi	r24, 0x6B	; 107
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	2b e6       	ldi	r18, 0x6B	; 107
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	f9 01       	movw	r30, r18
     4ea:	20 81       	ld	r18, Z
     4ec:	24 60       	ori	r18, 0x04	; 4
     4ee:	fc 01       	movw	r30, r24
     4f0:	20 83       	st	Z, r18
	MCUCR = (1 << ISC01) | (1 << ISC00); //falling edge triggers interrupt
     4f2:	85 e5       	ldi	r24, 0x55	; 85
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	23 e0       	ldi	r18, 0x03	; 3
     4f8:	fc 01       	movw	r30, r24
     4fa:	20 83       	st	Z, r18
}	
     4fc:	cf 91       	pop	r28
     4fe:	df 91       	pop	r29
     500:	08 95       	ret

00000502 <setCycle>:


void setCycle(int dutycycle)
{
     502:	df 93       	push	r29
     504:	cf 93       	push	r28
     506:	00 d0       	rcall	.+0      	; 0x508 <setCycle+0x6>
     508:	cd b7       	in	r28, 0x3d	; 61
     50a:	de b7       	in	r29, 0x3e	; 62
     50c:	9a 83       	std	Y+2, r25	; 0x02
     50e:	89 83       	std	Y+1, r24	; 0x01
	cli();
     510:	f8 94       	cli
	OCR0A = dutycycle;
     512:	87 e4       	ldi	r24, 0x47	; 71
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	29 81       	ldd	r18, Y+1	; 0x01
     518:	fc 01       	movw	r30, r24
     51a:	20 83       	st	Z, r18
	sei();
     51c:	78 94       	sei
}
     51e:	0f 90       	pop	r0
     520:	0f 90       	pop	r0
     522:	cf 91       	pop	r28
     524:	df 91       	pop	r29
     526:	08 95       	ret

00000528 <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     528:	1f 92       	push	r1
     52a:	0f 92       	push	r0
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	0f 92       	push	r0
     530:	11 24       	eor	r1, r1
     532:	8f 93       	push	r24
     534:	9f 93       	push	r25
     536:	ef 93       	push	r30
     538:	ff 93       	push	r31
     53a:	df 93       	push	r29
     53c:	cf 93       	push	r28
     53e:	cd b7       	in	r28, 0x3d	; 61
     540:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1 << RXC0)) )
     542:	00 00       	nop
     544:	80 ec       	ldi	r24, 0xC0	; 192
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	fc 01       	movw	r30, r24
     54a:	80 81       	ld	r24, Z
     54c:	88 23       	and	r24, r24
     54e:	d4 f7       	brge	.-12     	; 0x544 <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	dim = UDR0;
     550:	86 ec       	ldi	r24, 0xC6	; 198
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	fc 01       	movw	r30, r24
     556:	80 81       	ld	r24, Z
     558:	88 2f       	mov	r24, r24
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	90 93 01 01 	sts	0x0101, r25
     560:	80 93 00 01 	sts	0x0100, r24
	rxflag = 1;
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	80 93 0e 01 	sts	0x010E, r24
}
     56a:	cf 91       	pop	r28
     56c:	df 91       	pop	r29
     56e:	ff 91       	pop	r31
     570:	ef 91       	pop	r30
     572:	9f 91       	pop	r25
     574:	8f 91       	pop	r24
     576:	0f 90       	pop	r0
     578:	0f be       	out	0x3f, r0	; 63
     57a:	0f 90       	pop	r0
     57c:	1f 90       	pop	r1
     57e:	18 95       	reti

00000580 <__vector_14>:
 
ISR(TIMER0_COMPA_vect)
{
     580:	1f 92       	push	r1
     582:	0f 92       	push	r0
     584:	0f b6       	in	r0, 0x3f	; 63
     586:	0f 92       	push	r0
     588:	11 24       	eor	r1, r1
     58a:	0f 93       	push	r16
     58c:	1f 93       	push	r17
     58e:	2f 93       	push	r18
     590:	3f 93       	push	r19
     592:	4f 93       	push	r20
     594:	5f 93       	push	r21
     596:	6f 93       	push	r22
     598:	7f 93       	push	r23
     59a:	8f 93       	push	r24
     59c:	9f 93       	push	r25
     59e:	af 93       	push	r26
     5a0:	bf 93       	push	r27
     5a2:	ef 93       	push	r30
     5a4:	ff 93       	push	r31
     5a6:	df 93       	push	r29
     5a8:	cf 93       	push	r28
     5aa:	cd b7       	in	r28, 0x3d	; 61
     5ac:	de b7       	in	r29, 0x3e	; 62
     5ae:	68 97       	sbiw	r28, 0x18	; 24
     5b0:	de bf       	out	0x3e, r29	; 62
     5b2:	cd bf       	out	0x3d, r28	; 61
	PORTD |= (1 << PORTD3);
     5b4:	8b e2       	ldi	r24, 0x2B	; 43
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	2b e2       	ldi	r18, 0x2B	; 43
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	f9 01       	movw	r30, r18
     5be:	20 81       	ld	r18, Z
     5c0:	28 60       	ori	r18, 0x08	; 8
     5c2:	fc 01       	movw	r30, r24
     5c4:	20 83       	st	Z, r18
	if( zerocross == 1) 
     5c6:	80 91 0f 01 	lds	r24, 0x010F
     5ca:	81 30       	cpi	r24, 0x01	; 1
     5cc:	09 f0       	breq	.+2      	; 0x5d0 <__vector_14+0x50>
     5ce:	03 c1       	rjmp	.+518    	; 0x7d6 <__vector_14+0x256>
	{
		if( i >= dim )
     5d0:	20 91 0a 01 	lds	r18, 0x010A
     5d4:	30 91 0b 01 	lds	r19, 0x010B
     5d8:	80 91 00 01 	lds	r24, 0x0100
     5dc:	90 91 01 01 	lds	r25, 0x0101
     5e0:	28 17       	cp	r18, r24
     5e2:	39 07       	cpc	r19, r25
     5e4:	08 f4       	brcc	.+2      	; 0x5e8 <__vector_14+0x68>
     5e6:	ee c0       	rjmp	.+476    	; 0x7c4 <__vector_14+0x244>
		{
			PORTB |= (1 << PORTB0);
     5e8:	85 e2       	ldi	r24, 0x25	; 37
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	25 e2       	ldi	r18, 0x25	; 37
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	f9 01       	movw	r30, r18
     5f2:	20 81       	ld	r18, Z
     5f4:	21 60       	ori	r18, 0x01	; 1
     5f6:	fc 01       	movw	r30, r24
     5f8:	20 83       	st	Z, r18
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	a0 ea       	ldi	r26, 0xA0	; 160
     600:	b0 e4       	ldi	r27, 0x40	; 64
     602:	89 83       	std	Y+1, r24	; 0x01
     604:	9a 83       	std	Y+2, r25	; 0x02
     606:	ab 83       	std	Y+3, r26	; 0x03
     608:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     60a:	69 81       	ldd	r22, Y+1	; 0x01
     60c:	7a 81       	ldd	r23, Y+2	; 0x02
     60e:	8b 81       	ldd	r24, Y+3	; 0x03
     610:	9c 81       	ldd	r25, Y+4	; 0x04
     612:	2b ea       	ldi	r18, 0xAB	; 171
     614:	3a ea       	ldi	r19, 0xAA	; 170
     616:	4a ea       	ldi	r20, 0xAA	; 170
     618:	50 e4       	ldi	r21, 0x40	; 64
     61a:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     61e:	dc 01       	movw	r26, r24
     620:	cb 01       	movw	r24, r22
     622:	8d 83       	std	Y+5, r24	; 0x05
     624:	9e 83       	std	Y+6, r25	; 0x06
     626:	af 83       	std	Y+7, r26	; 0x07
     628:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     62a:	11 e0       	ldi	r17, 0x01	; 1
     62c:	6d 81       	ldd	r22, Y+5	; 0x05
     62e:	7e 81       	ldd	r23, Y+6	; 0x06
     630:	8f 81       	ldd	r24, Y+7	; 0x07
     632:	98 85       	ldd	r25, Y+8	; 0x08
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	40 e8       	ldi	r20, 0x80	; 128
     63a:	5f e3       	ldi	r21, 0x3F	; 63
     63c:	0e 94 38 08 	call	0x1070	; 0x1070 <__ltsf2>
     640:	88 23       	and	r24, r24
     642:	0c f0       	brlt	.+2      	; 0x646 <__vector_14+0xc6>
     644:	10 e0       	ldi	r17, 0x00	; 0
     646:	11 23       	and	r17, r17
     648:	19 f0       	breq	.+6      	; 0x650 <__vector_14+0xd0>
		__ticks = 1;
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	89 87       	std	Y+9, r24	; 0x09
     64e:	a3 c0       	rjmp	.+326    	; 0x796 <__vector_14+0x216>
	else if (__tmp > 255)
     650:	11 e0       	ldi	r17, 0x01	; 1
     652:	6d 81       	ldd	r22, Y+5	; 0x05
     654:	7e 81       	ldd	r23, Y+6	; 0x06
     656:	8f 81       	ldd	r24, Y+7	; 0x07
     658:	98 85       	ldd	r25, Y+8	; 0x08
     65a:	20 e0       	ldi	r18, 0x00	; 0
     65c:	30 e0       	ldi	r19, 0x00	; 0
     65e:	4f e7       	ldi	r20, 0x7F	; 127
     660:	53 e4       	ldi	r21, 0x43	; 67
     662:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__gtsf2>
     666:	18 16       	cp	r1, r24
     668:	0c f0       	brlt	.+2      	; 0x66c <__vector_14+0xec>
     66a:	10 e0       	ldi	r17, 0x00	; 0
     66c:	11 23       	and	r17, r17
     66e:	09 f4       	brne	.+2      	; 0x672 <__vector_14+0xf2>
     670:	89 c0       	rjmp	.+274    	; 0x784 <__vector_14+0x204>
	{
		_delay_ms(__us / 1000.0);
     672:	69 81       	ldd	r22, Y+1	; 0x01
     674:	7a 81       	ldd	r23, Y+2	; 0x02
     676:	8b 81       	ldd	r24, Y+3	; 0x03
     678:	9c 81       	ldd	r25, Y+4	; 0x04
     67a:	20 e0       	ldi	r18, 0x00	; 0
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	4a e7       	ldi	r20, 0x7A	; 122
     680:	54 e4       	ldi	r21, 0x44	; 68
     682:	0e 94 2a 07 	call	0xe54	; 0xe54 <__divsf3>
     686:	dc 01       	movw	r26, r24
     688:	cb 01       	movw	r24, r22
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	9b 87       	std	Y+11, r25	; 0x0b
     68e:	ac 87       	std	Y+12, r26	; 0x0c
     690:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     692:	6a 85       	ldd	r22, Y+10	; 0x0a
     694:	7b 85       	ldd	r23, Y+11	; 0x0b
     696:	8c 85       	ldd	r24, Y+12	; 0x0c
     698:	9d 85       	ldd	r25, Y+13	; 0x0d
     69a:	20 e0       	ldi	r18, 0x00	; 0
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	4a e7       	ldi	r20, 0x7A	; 122
     6a0:	55 e4       	ldi	r21, 0x45	; 69
     6a2:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     6a6:	dc 01       	movw	r26, r24
     6a8:	cb 01       	movw	r24, r22
     6aa:	8e 87       	std	Y+14, r24	; 0x0e
     6ac:	9f 87       	std	Y+15, r25	; 0x0f
     6ae:	a8 8b       	std	Y+16, r26	; 0x10
     6b0:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     6b2:	11 e0       	ldi	r17, 0x01	; 1
     6b4:	6e 85       	ldd	r22, Y+14	; 0x0e
     6b6:	7f 85       	ldd	r23, Y+15	; 0x0f
     6b8:	88 89       	ldd	r24, Y+16	; 0x10
     6ba:	99 89       	ldd	r25, Y+17	; 0x11
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	40 e8       	ldi	r20, 0x80	; 128
     6c2:	5f e3       	ldi	r21, 0x3F	; 63
     6c4:	0e 94 38 08 	call	0x1070	; 0x1070 <__ltsf2>
     6c8:	88 23       	and	r24, r24
     6ca:	0c f0       	brlt	.+2      	; 0x6ce <__vector_14+0x14e>
     6cc:	10 e0       	ldi	r17, 0x00	; 0
     6ce:	11 23       	and	r17, r17
     6d0:	29 f0       	breq	.+10     	; 0x6dc <__vector_14+0x15c>
		__ticks = 1;
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	9b 8b       	std	Y+19, r25	; 0x13
     6d8:	8a 8b       	std	Y+18, r24	; 0x12
     6da:	46 c0       	rjmp	.+140    	; 0x768 <__vector_14+0x1e8>
	else if (__tmp > 65535)
     6dc:	11 e0       	ldi	r17, 0x01	; 1
     6de:	6e 85       	ldd	r22, Y+14	; 0x0e
     6e0:	7f 85       	ldd	r23, Y+15	; 0x0f
     6e2:	88 89       	ldd	r24, Y+16	; 0x10
     6e4:	99 89       	ldd	r25, Y+17	; 0x11
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	3f ef       	ldi	r19, 0xFF	; 255
     6ea:	4f e7       	ldi	r20, 0x7F	; 127
     6ec:	57 e4       	ldi	r21, 0x47	; 71
     6ee:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__gtsf2>
     6f2:	18 16       	cp	r1, r24
     6f4:	0c f0       	brlt	.+2      	; 0x6f8 <__vector_14+0x178>
     6f6:	10 e0       	ldi	r17, 0x00	; 0
     6f8:	11 23       	and	r17, r17
     6fa:	61 f1       	breq	.+88     	; 0x754 <__vector_14+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6fc:	6a 85       	ldd	r22, Y+10	; 0x0a
     6fe:	7b 85       	ldd	r23, Y+11	; 0x0b
     700:	8c 85       	ldd	r24, Y+12	; 0x0c
     702:	9d 85       	ldd	r25, Y+13	; 0x0d
     704:	20 e0       	ldi	r18, 0x00	; 0
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	40 e2       	ldi	r20, 0x20	; 32
     70a:	51 e4       	ldi	r21, 0x41	; 65
     70c:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     710:	dc 01       	movw	r26, r24
     712:	cb 01       	movw	r24, r22
     714:	bc 01       	movw	r22, r24
     716:	cd 01       	movw	r24, r26
     718:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     71c:	dc 01       	movw	r26, r24
     71e:	cb 01       	movw	r24, r22
     720:	9b 8b       	std	Y+19, r25	; 0x13
     722:	8a 8b       	std	Y+18, r24	; 0x12
     724:	12 c0       	rjmp	.+36     	; 0x74a <__vector_14+0x1ca>
     726:	80 e9       	ldi	r24, 0x90	; 144
     728:	91 e0       	ldi	r25, 0x01	; 1
     72a:	9d 8b       	std	Y+21, r25	; 0x15
     72c:	8c 8b       	std	Y+20, r24	; 0x14
     72e:	8c 89       	ldd	r24, Y+20	; 0x14
     730:	9d 89       	ldd	r25, Y+21	; 0x15
     732:	8c 01       	movw	r16, r24
     734:	c8 01       	movw	r24, r16
     736:	01 97       	sbiw	r24, 0x01	; 1
     738:	f1 f7       	brne	.-4      	; 0x736 <__vector_14+0x1b6>
     73a:	8c 01       	movw	r16, r24
     73c:	1d 8b       	std	Y+21, r17	; 0x15
     73e:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     740:	8a 89       	ldd	r24, Y+18	; 0x12
     742:	9b 89       	ldd	r25, Y+19	; 0x13
     744:	01 97       	sbiw	r24, 0x01	; 1
     746:	9b 8b       	std	Y+19, r25	; 0x13
     748:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     74a:	8a 89       	ldd	r24, Y+18	; 0x12
     74c:	9b 89       	ldd	r25, Y+19	; 0x13
     74e:	00 97       	sbiw	r24, 0x00	; 0
     750:	51 f7       	brne	.-44     	; 0x726 <__vector_14+0x1a6>
     752:	28 c0       	rjmp	.+80     	; 0x7a4 <__vector_14+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     754:	6e 85       	ldd	r22, Y+14	; 0x0e
     756:	7f 85       	ldd	r23, Y+15	; 0x0f
     758:	88 89       	ldd	r24, Y+16	; 0x10
     75a:	99 89       	ldd	r25, Y+17	; 0x11
     75c:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     760:	dc 01       	movw	r26, r24
     762:	cb 01       	movw	r24, r22
     764:	9b 8b       	std	Y+19, r25	; 0x13
     766:	8a 8b       	std	Y+18, r24	; 0x12
     768:	8a 89       	ldd	r24, Y+18	; 0x12
     76a:	9b 89       	ldd	r25, Y+19	; 0x13
     76c:	9f 8b       	std	Y+23, r25	; 0x17
     76e:	8e 8b       	std	Y+22, r24	; 0x16
     770:	8e 89       	ldd	r24, Y+22	; 0x16
     772:	9f 89       	ldd	r25, Y+23	; 0x17
     774:	8c 01       	movw	r16, r24
     776:	f8 01       	movw	r30, r16
     778:	31 97       	sbiw	r30, 0x01	; 1
     77a:	f1 f7       	brne	.-4      	; 0x778 <__vector_14+0x1f8>
     77c:	8f 01       	movw	r16, r30
     77e:	1f 8b       	std	Y+23, r17	; 0x17
     780:	0e 8b       	std	Y+22, r16	; 0x16
     782:	10 c0       	rjmp	.+32     	; 0x7a4 <__vector_14+0x224>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     784:	6d 81       	ldd	r22, Y+5	; 0x05
     786:	7e 81       	ldd	r23, Y+6	; 0x06
     788:	8f 81       	ldd	r24, Y+7	; 0x07
     78a:	98 85       	ldd	r25, Y+8	; 0x08
     78c:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
     790:	dc 01       	movw	r26, r24
     792:	cb 01       	movw	r24, r22
     794:	89 87       	std	Y+9, r24	; 0x09
     796:	89 85       	ldd	r24, Y+9	; 0x09
     798:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     79a:	88 8d       	ldd	r24, Y+24	; 0x18
     79c:	18 2f       	mov	r17, r24
     79e:	1a 95       	dec	r17
     7a0:	f1 f7       	brne	.-4      	; 0x79e <__vector_14+0x21e>
     7a2:	18 8f       	std	Y+24, r17	; 0x18
			_delay_us( 5 );
			PORTB &= ~(1 << PORTB0);
     7a4:	85 e2       	ldi	r24, 0x25	; 37
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	25 e2       	ldi	r18, 0x25	; 37
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	f9 01       	movw	r30, r18
     7ae:	20 81       	ld	r18, Z
     7b0:	2e 7f       	andi	r18, 0xFE	; 254
     7b2:	fc 01       	movw	r30, r24
     7b4:	20 83       	st	Z, r18
			i = 0;
     7b6:	10 92 0b 01 	sts	0x010B, r1
     7ba:	10 92 0a 01 	sts	0x010A, r1
			zerocross = 0;
     7be:	10 92 0f 01 	sts	0x010F, r1
     7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <__vector_14+0x256>
		}
		else
		{
			++i;
     7c4:	80 91 0a 01 	lds	r24, 0x010A
     7c8:	90 91 0b 01 	lds	r25, 0x010B
     7cc:	01 96       	adiw	r24, 0x01	; 1
     7ce:	90 93 0b 01 	sts	0x010B, r25
     7d2:	80 93 0a 01 	sts	0x010A, r24
		}
	}		
   
}
     7d6:	68 96       	adiw	r28, 0x18	; 24
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	cd bf       	out	0x3d, r28	; 61
     7dc:	cf 91       	pop	r28
     7de:	df 91       	pop	r29
     7e0:	ff 91       	pop	r31
     7e2:	ef 91       	pop	r30
     7e4:	bf 91       	pop	r27
     7e6:	af 91       	pop	r26
     7e8:	9f 91       	pop	r25
     7ea:	8f 91       	pop	r24
     7ec:	7f 91       	pop	r23
     7ee:	6f 91       	pop	r22
     7f0:	5f 91       	pop	r21
     7f2:	4f 91       	pop	r20
     7f4:	3f 91       	pop	r19
     7f6:	2f 91       	pop	r18
     7f8:	1f 91       	pop	r17
     7fa:	0f 91       	pop	r16
     7fc:	0f 90       	pop	r0
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	0f 90       	pop	r0
     802:	1f 90       	pop	r1
     804:	18 95       	reti

00000806 <__vector_1>:

ISR(INT0_vect)
{
     806:	1f 92       	push	r1
     808:	0f 92       	push	r0
     80a:	0f b6       	in	r0, 0x3f	; 63
     80c:	0f 92       	push	r0
     80e:	11 24       	eor	r1, r1
     810:	8f 93       	push	r24
     812:	df 93       	push	r29
     814:	cf 93       	push	r28
     816:	cd b7       	in	r28, 0x3d	; 61
     818:	de b7       	in	r29, 0x3e	; 62
	zerocross = 1;
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	80 93 0f 01 	sts	0x010F, r24
     820:	cf 91       	pop	r28
     822:	df 91       	pop	r29
     824:	8f 91       	pop	r24
     826:	0f 90       	pop	r0
     828:	0f be       	out	0x3f, r0	; 63
     82a:	0f 90       	pop	r0
     82c:	1f 90       	pop	r1
     82e:	18 95       	reti

00000830 <USART_Init>:
 */ 

#include <avr\io.h> 

void USART_Init( unsigned int ubrr)
{
     830:	df 93       	push	r29
     832:	cf 93       	push	r28
     834:	00 d0       	rcall	.+0      	; 0x836 <USART_Init+0x6>
     836:	cd b7       	in	r28, 0x3d	; 61
     838:	de b7       	in	r29, 0x3e	; 62
     83a:	9a 83       	std	Y+2, r25	; 0x02
     83c:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     83e:	85 ec       	ldi	r24, 0xC5	; 197
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	29 81       	ldd	r18, Y+1	; 0x01
     844:	3a 81       	ldd	r19, Y+2	; 0x02
     846:	23 2f       	mov	r18, r19
     848:	33 27       	eor	r19, r19
     84a:	fc 01       	movw	r30, r24
     84c:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     84e:	84 ec       	ldi	r24, 0xC4	; 196
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	29 81       	ldd	r18, Y+1	; 0x01
     854:	fc 01       	movw	r30, r24
     856:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     858:	81 ec       	ldi	r24, 0xC1	; 193
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	28 e9       	ldi	r18, 0x98	; 152
     85e:	fc 01       	movw	r30, r24
     860:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     862:	82 ec       	ldi	r24, 0xC2	; 194
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	26 e0       	ldi	r18, 0x06	; 6
     868:	fc 01       	movw	r30, r24
     86a:	20 83       	st	Z, r18
}
     86c:	0f 90       	pop	r0
     86e:	0f 90       	pop	r0
     870:	cf 91       	pop	r28
     872:	df 91       	pop	r29
     874:	08 95       	ret

00000876 <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     876:	df 93       	push	r29
     878:	cf 93       	push	r28
     87a:	0f 92       	push	r0
     87c:	cd b7       	in	r28, 0x3d	; 61
     87e:	de b7       	in	r29, 0x3e	; 62
     880:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     882:	00 00       	nop
     884:	80 ec       	ldi	r24, 0xC0	; 192
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	fc 01       	movw	r30, r24
     88a:	80 81       	ld	r24, Z
     88c:	88 2f       	mov	r24, r24
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	80 72       	andi	r24, 0x20	; 32
     892:	90 70       	andi	r25, 0x00	; 0
     894:	00 97       	sbiw	r24, 0x00	; 0
     896:	b1 f3       	breq	.-20     	; 0x884 <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     898:	86 ec       	ldi	r24, 0xC6	; 198
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	29 81       	ldd	r18, Y+1	; 0x01
     89e:	fc 01       	movw	r30, r24
     8a0:	20 83       	st	Z, r18
}
     8a2:	0f 90       	pop	r0
     8a4:	cf 91       	pop	r28
     8a6:	df 91       	pop	r29
     8a8:	08 95       	ret

000008aa <USART_Receive>:


unsigned char USART_Receive( void )
{
     8aa:	df 93       	push	r29
     8ac:	cf 93       	push	r28
     8ae:	cd b7       	in	r28, 0x3d	; 61
     8b0:	de b7       	in	r29, 0x3e	; 62
	
}
     8b2:	cf 91       	pop	r28
     8b4:	df 91       	pop	r29
     8b6:	08 95       	ret

000008b8 <__fixunssfsi>:
     8b8:	ef 92       	push	r14
     8ba:	ff 92       	push	r15
     8bc:	0f 93       	push	r16
     8be:	1f 93       	push	r17
     8c0:	7b 01       	movw	r14, r22
     8c2:	8c 01       	movw	r16, r24
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	40 e0       	ldi	r20, 0x00	; 0
     8ca:	5f e4       	ldi	r21, 0x4F	; 79
     8cc:	0e 94 08 08 	call	0x1010	; 0x1010 <__gesf2>
     8d0:	87 fd       	sbrc	r24, 7
     8d2:	11 c0       	rjmp	.+34     	; 0x8f6 <__fixunssfsi+0x3e>
     8d4:	c8 01       	movw	r24, r16
     8d6:	b7 01       	movw	r22, r14
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	40 e0       	ldi	r20, 0x00	; 0
     8de:	5f e4       	ldi	r21, 0x4F	; 79
     8e0:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__subsf3>
     8e4:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixsfsi>
     8e8:	9b 01       	movw	r18, r22
     8ea:	ac 01       	movw	r20, r24
     8ec:	20 50       	subi	r18, 0x00	; 0
     8ee:	30 40       	sbci	r19, 0x00	; 0
     8f0:	40 40       	sbci	r20, 0x00	; 0
     8f2:	50 48       	sbci	r21, 0x80	; 128
     8f4:	06 c0       	rjmp	.+12     	; 0x902 <__stack+0x3>
     8f6:	c8 01       	movw	r24, r16
     8f8:	b7 01       	movw	r22, r14
     8fa:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixsfsi>
     8fe:	9b 01       	movw	r18, r22
     900:	ac 01       	movw	r20, r24
     902:	b9 01       	movw	r22, r18
     904:	ca 01       	movw	r24, r20
     906:	1f 91       	pop	r17
     908:	0f 91       	pop	r16
     90a:	ff 90       	pop	r15
     90c:	ef 90       	pop	r14
     90e:	08 95       	ret

00000910 <_fpadd_parts>:
     910:	a0 e0       	ldi	r26, 0x00	; 0
     912:	b0 e0       	ldi	r27, 0x00	; 0
     914:	ee e8       	ldi	r30, 0x8E	; 142
     916:	f4 e0       	ldi	r31, 0x04	; 4
     918:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__prologue_saves__+0x8>
     91c:	fc 01       	movw	r30, r24
     91e:	ea 01       	movw	r28, r20
     920:	80 81       	ld	r24, Z
     922:	82 30       	cpi	r24, 0x02	; 2
     924:	08 f4       	brcc	.+2      	; 0x928 <_fpadd_parts+0x18>
     926:	38 c1       	rjmp	.+624    	; 0xb98 <_fpadd_parts+0x288>
     928:	db 01       	movw	r26, r22
     92a:	9c 91       	ld	r25, X
     92c:	92 30       	cpi	r25, 0x02	; 2
     92e:	08 f4       	brcc	.+2      	; 0x932 <_fpadd_parts+0x22>
     930:	30 c1       	rjmp	.+608    	; 0xb92 <_fpadd_parts+0x282>
     932:	84 30       	cpi	r24, 0x04	; 4
     934:	59 f4       	brne	.+22     	; 0x94c <_fpadd_parts+0x3c>
     936:	94 30       	cpi	r25, 0x04	; 4
     938:	09 f0       	breq	.+2      	; 0x93c <_fpadd_parts+0x2c>
     93a:	2e c1       	rjmp	.+604    	; 0xb98 <_fpadd_parts+0x288>
     93c:	91 81       	ldd	r25, Z+1	; 0x01
     93e:	11 96       	adiw	r26, 0x01	; 1
     940:	8c 91       	ld	r24, X
     942:	11 97       	sbiw	r26, 0x01	; 1
     944:	98 17       	cp	r25, r24
     946:	09 f0       	breq	.+2      	; 0x94a <_fpadd_parts+0x3a>
     948:	21 c1       	rjmp	.+578    	; 0xb8c <_fpadd_parts+0x27c>
     94a:	26 c1       	rjmp	.+588    	; 0xb98 <_fpadd_parts+0x288>
     94c:	94 30       	cpi	r25, 0x04	; 4
     94e:	09 f4       	brne	.+2      	; 0x952 <_fpadd_parts+0x42>
     950:	20 c1       	rjmp	.+576    	; 0xb92 <_fpadd_parts+0x282>
     952:	92 30       	cpi	r25, 0x02	; 2
     954:	b1 f4       	brne	.+44     	; 0x982 <_fpadd_parts+0x72>
     956:	82 30       	cpi	r24, 0x02	; 2
     958:	09 f0       	breq	.+2      	; 0x95c <_fpadd_parts+0x4c>
     95a:	1e c1       	rjmp	.+572    	; 0xb98 <_fpadd_parts+0x288>
     95c:	ca 01       	movw	r24, r20
     95e:	af 01       	movw	r20, r30
     960:	28 e0       	ldi	r18, 0x08	; 8
     962:	da 01       	movw	r26, r20
     964:	0d 90       	ld	r0, X+
     966:	ad 01       	movw	r20, r26
     968:	dc 01       	movw	r26, r24
     96a:	0d 92       	st	X+, r0
     96c:	cd 01       	movw	r24, r26
     96e:	21 50       	subi	r18, 0x01	; 1
     970:	c1 f7       	brne	.-16     	; 0x962 <_fpadd_parts+0x52>
     972:	db 01       	movw	r26, r22
     974:	11 96       	adiw	r26, 0x01	; 1
     976:	8c 91       	ld	r24, X
     978:	11 97       	sbiw	r26, 0x01	; 1
     97a:	91 81       	ldd	r25, Z+1	; 0x01
     97c:	89 23       	and	r24, r25
     97e:	89 83       	std	Y+1, r24	; 0x01
     980:	0a c1       	rjmp	.+532    	; 0xb96 <_fpadd_parts+0x286>
     982:	82 30       	cpi	r24, 0x02	; 2
     984:	09 f4       	brne	.+2      	; 0x988 <_fpadd_parts+0x78>
     986:	05 c1       	rjmp	.+522    	; 0xb92 <_fpadd_parts+0x282>
     988:	c2 80       	ldd	r12, Z+2	; 0x02
     98a:	d3 80       	ldd	r13, Z+3	; 0x03
     98c:	db 01       	movw	r26, r22
     98e:	12 96       	adiw	r26, 0x02	; 2
     990:	6d 90       	ld	r6, X+
     992:	7c 90       	ld	r7, X
     994:	13 97       	sbiw	r26, 0x03	; 3
     996:	24 81       	ldd	r18, Z+4	; 0x04
     998:	35 81       	ldd	r19, Z+5	; 0x05
     99a:	46 81       	ldd	r20, Z+6	; 0x06
     99c:	57 81       	ldd	r21, Z+7	; 0x07
     99e:	14 96       	adiw	r26, 0x04	; 4
     9a0:	ed 90       	ld	r14, X+
     9a2:	fd 90       	ld	r15, X+
     9a4:	0d 91       	ld	r16, X+
     9a6:	1c 91       	ld	r17, X
     9a8:	17 97       	sbiw	r26, 0x07	; 7
     9aa:	c6 01       	movw	r24, r12
     9ac:	86 19       	sub	r24, r6
     9ae:	97 09       	sbc	r25, r7
     9b0:	5c 01       	movw	r10, r24
     9b2:	97 ff       	sbrs	r25, 7
     9b4:	04 c0       	rjmp	.+8      	; 0x9be <_fpadd_parts+0xae>
     9b6:	aa 24       	eor	r10, r10
     9b8:	bb 24       	eor	r11, r11
     9ba:	a8 1a       	sub	r10, r24
     9bc:	b9 0a       	sbc	r11, r25
     9be:	b0 e2       	ldi	r27, 0x20	; 32
     9c0:	ab 16       	cp	r10, r27
     9c2:	b1 04       	cpc	r11, r1
     9c4:	0c f0       	brlt	.+2      	; 0x9c8 <_fpadd_parts+0xb8>
     9c6:	61 c0       	rjmp	.+194    	; 0xa8a <_fpadd_parts+0x17a>
     9c8:	18 16       	cp	r1, r24
     9ca:	19 06       	cpc	r1, r25
     9cc:	6c f5       	brge	.+90     	; 0xa28 <_fpadd_parts+0x118>
     9ce:	37 01       	movw	r6, r14
     9d0:	48 01       	movw	r8, r16
     9d2:	0a 2c       	mov	r0, r10
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <_fpadd_parts+0xce>
     9d6:	96 94       	lsr	r9
     9d8:	87 94       	ror	r8
     9da:	77 94       	ror	r7
     9dc:	67 94       	ror	r6
     9de:	0a 94       	dec	r0
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <_fpadd_parts+0xc6>
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	a0 e0       	ldi	r26, 0x00	; 0
     9e8:	b0 e0       	ldi	r27, 0x00	; 0
     9ea:	0a 2c       	mov	r0, r10
     9ec:	04 c0       	rjmp	.+8      	; 0x9f6 <_fpadd_parts+0xe6>
     9ee:	88 0f       	add	r24, r24
     9f0:	99 1f       	adc	r25, r25
     9f2:	aa 1f       	adc	r26, r26
     9f4:	bb 1f       	adc	r27, r27
     9f6:	0a 94       	dec	r0
     9f8:	d2 f7       	brpl	.-12     	; 0x9ee <_fpadd_parts+0xde>
     9fa:	01 97       	sbiw	r24, 0x01	; 1
     9fc:	a1 09       	sbc	r26, r1
     9fe:	b1 09       	sbc	r27, r1
     a00:	8e 21       	and	r24, r14
     a02:	9f 21       	and	r25, r15
     a04:	a0 23       	and	r26, r16
     a06:	b1 23       	and	r27, r17
     a08:	ee 24       	eor	r14, r14
     a0a:	ff 24       	eor	r15, r15
     a0c:	87 01       	movw	r16, r14
     a0e:	e3 94       	inc	r14
     a10:	00 97       	sbiw	r24, 0x00	; 0
     a12:	a1 05       	cpc	r26, r1
     a14:	b1 05       	cpc	r27, r1
     a16:	19 f4       	brne	.+6      	; 0xa1e <_fpadd_parts+0x10e>
     a18:	ee 24       	eor	r14, r14
     a1a:	ff 24       	eor	r15, r15
     a1c:	87 01       	movw	r16, r14
     a1e:	e6 28       	or	r14, r6
     a20:	f7 28       	or	r15, r7
     a22:	08 29       	or	r16, r8
     a24:	19 29       	or	r17, r9
     a26:	3c c0       	rjmp	.+120    	; 0xaa0 <_fpadd_parts+0x190>
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	d1 f1       	breq	.+116    	; 0xaa0 <_fpadd_parts+0x190>
     a2c:	ca 0c       	add	r12, r10
     a2e:	db 1c       	adc	r13, r11
     a30:	39 01       	movw	r6, r18
     a32:	4a 01       	movw	r8, r20
     a34:	0a 2c       	mov	r0, r10
     a36:	04 c0       	rjmp	.+8      	; 0xa40 <_fpadd_parts+0x130>
     a38:	96 94       	lsr	r9
     a3a:	87 94       	ror	r8
     a3c:	77 94       	ror	r7
     a3e:	67 94       	ror	r6
     a40:	0a 94       	dec	r0
     a42:	d2 f7       	brpl	.-12     	; 0xa38 <_fpadd_parts+0x128>
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	a0 e0       	ldi	r26, 0x00	; 0
     a4a:	b0 e0       	ldi	r27, 0x00	; 0
     a4c:	0a 2c       	mov	r0, r10
     a4e:	04 c0       	rjmp	.+8      	; 0xa58 <_fpadd_parts+0x148>
     a50:	88 0f       	add	r24, r24
     a52:	99 1f       	adc	r25, r25
     a54:	aa 1f       	adc	r26, r26
     a56:	bb 1f       	adc	r27, r27
     a58:	0a 94       	dec	r0
     a5a:	d2 f7       	brpl	.-12     	; 0xa50 <_fpadd_parts+0x140>
     a5c:	01 97       	sbiw	r24, 0x01	; 1
     a5e:	a1 09       	sbc	r26, r1
     a60:	b1 09       	sbc	r27, r1
     a62:	82 23       	and	r24, r18
     a64:	93 23       	and	r25, r19
     a66:	a4 23       	and	r26, r20
     a68:	b5 23       	and	r27, r21
     a6a:	21 e0       	ldi	r18, 0x01	; 1
     a6c:	30 e0       	ldi	r19, 0x00	; 0
     a6e:	40 e0       	ldi	r20, 0x00	; 0
     a70:	50 e0       	ldi	r21, 0x00	; 0
     a72:	00 97       	sbiw	r24, 0x00	; 0
     a74:	a1 05       	cpc	r26, r1
     a76:	b1 05       	cpc	r27, r1
     a78:	19 f4       	brne	.+6      	; 0xa80 <_fpadd_parts+0x170>
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	a9 01       	movw	r20, r18
     a80:	26 29       	or	r18, r6
     a82:	37 29       	or	r19, r7
     a84:	48 29       	or	r20, r8
     a86:	59 29       	or	r21, r9
     a88:	0b c0       	rjmp	.+22     	; 0xaa0 <_fpadd_parts+0x190>
     a8a:	6c 14       	cp	r6, r12
     a8c:	7d 04       	cpc	r7, r13
     a8e:	24 f4       	brge	.+8      	; 0xa98 <_fpadd_parts+0x188>
     a90:	ee 24       	eor	r14, r14
     a92:	ff 24       	eor	r15, r15
     a94:	87 01       	movw	r16, r14
     a96:	04 c0       	rjmp	.+8      	; 0xaa0 <_fpadd_parts+0x190>
     a98:	63 01       	movw	r12, r6
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	a9 01       	movw	r20, r18
     aa0:	81 81       	ldd	r24, Z+1	; 0x01
     aa2:	fb 01       	movw	r30, r22
     aa4:	91 81       	ldd	r25, Z+1	; 0x01
     aa6:	89 17       	cp	r24, r25
     aa8:	09 f4       	brne	.+2      	; 0xaac <_fpadd_parts+0x19c>
     aaa:	45 c0       	rjmp	.+138    	; 0xb36 <_fpadd_parts+0x226>
     aac:	88 23       	and	r24, r24
     aae:	49 f0       	breq	.+18     	; 0xac2 <_fpadd_parts+0x1b2>
     ab0:	d8 01       	movw	r26, r16
     ab2:	c7 01       	movw	r24, r14
     ab4:	82 1b       	sub	r24, r18
     ab6:	93 0b       	sbc	r25, r19
     ab8:	a4 0b       	sbc	r26, r20
     aba:	b5 0b       	sbc	r27, r21
     abc:	9c 01       	movw	r18, r24
     abe:	ad 01       	movw	r20, r26
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <_fpadd_parts+0x1ba>
     ac2:	2e 19       	sub	r18, r14
     ac4:	3f 09       	sbc	r19, r15
     ac6:	40 0b       	sbc	r20, r16
     ac8:	51 0b       	sbc	r21, r17
     aca:	57 fd       	sbrc	r21, 7
     acc:	04 c0       	rjmp	.+8      	; 0xad6 <_fpadd_parts+0x1c6>
     ace:	19 82       	std	Y+1, r1	; 0x01
     ad0:	db 82       	std	Y+3, r13	; 0x03
     ad2:	ca 82       	std	Y+2, r12	; 0x02
     ad4:	0b c0       	rjmp	.+22     	; 0xaec <_fpadd_parts+0x1dc>
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	89 83       	std	Y+1, r24	; 0x01
     ada:	db 82       	std	Y+3, r13	; 0x03
     adc:	ca 82       	std	Y+2, r12	; 0x02
     ade:	50 95       	com	r21
     ae0:	40 95       	com	r20
     ae2:	30 95       	com	r19
     ae4:	21 95       	neg	r18
     ae6:	3f 4f       	sbci	r19, 0xFF	; 255
     ae8:	4f 4f       	sbci	r20, 0xFF	; 255
     aea:	5f 4f       	sbci	r21, 0xFF	; 255
     aec:	2c 83       	std	Y+4, r18	; 0x04
     aee:	3d 83       	std	Y+5, r19	; 0x05
     af0:	4e 83       	std	Y+6, r20	; 0x06
     af2:	5f 83       	std	Y+7, r21	; 0x07
     af4:	0d c0       	rjmp	.+26     	; 0xb10 <_fpadd_parts+0x200>
     af6:	88 0f       	add	r24, r24
     af8:	99 1f       	adc	r25, r25
     afa:	aa 1f       	adc	r26, r26
     afc:	bb 1f       	adc	r27, r27
     afe:	8c 83       	std	Y+4, r24	; 0x04
     b00:	9d 83       	std	Y+5, r25	; 0x05
     b02:	ae 83       	std	Y+6, r26	; 0x06
     b04:	bf 83       	std	Y+7, r27	; 0x07
     b06:	8a 81       	ldd	r24, Y+2	; 0x02
     b08:	9b 81       	ldd	r25, Y+3	; 0x03
     b0a:	01 97       	sbiw	r24, 0x01	; 1
     b0c:	9b 83       	std	Y+3, r25	; 0x03
     b0e:	8a 83       	std	Y+2, r24	; 0x02
     b10:	8c 81       	ldd	r24, Y+4	; 0x04
     b12:	9d 81       	ldd	r25, Y+5	; 0x05
     b14:	ae 81       	ldd	r26, Y+6	; 0x06
     b16:	bf 81       	ldd	r27, Y+7	; 0x07
     b18:	9c 01       	movw	r18, r24
     b1a:	ad 01       	movw	r20, r26
     b1c:	21 50       	subi	r18, 0x01	; 1
     b1e:	30 40       	sbci	r19, 0x00	; 0
     b20:	40 40       	sbci	r20, 0x00	; 0
     b22:	50 40       	sbci	r21, 0x00	; 0
     b24:	2f 3f       	cpi	r18, 0xFF	; 255
     b26:	ef ef       	ldi	r30, 0xFF	; 255
     b28:	3e 07       	cpc	r19, r30
     b2a:	ef ef       	ldi	r30, 0xFF	; 255
     b2c:	4e 07       	cpc	r20, r30
     b2e:	ef e3       	ldi	r30, 0x3F	; 63
     b30:	5e 07       	cpc	r21, r30
     b32:	08 f3       	brcs	.-62     	; 0xaf6 <_fpadd_parts+0x1e6>
     b34:	0b c0       	rjmp	.+22     	; 0xb4c <_fpadd_parts+0x23c>
     b36:	89 83       	std	Y+1, r24	; 0x01
     b38:	db 82       	std	Y+3, r13	; 0x03
     b3a:	ca 82       	std	Y+2, r12	; 0x02
     b3c:	2e 0d       	add	r18, r14
     b3e:	3f 1d       	adc	r19, r15
     b40:	40 1f       	adc	r20, r16
     b42:	51 1f       	adc	r21, r17
     b44:	2c 83       	std	Y+4, r18	; 0x04
     b46:	3d 83       	std	Y+5, r19	; 0x05
     b48:	4e 83       	std	Y+6, r20	; 0x06
     b4a:	5f 83       	std	Y+7, r21	; 0x07
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	88 83       	st	Y, r24
     b50:	2c 81       	ldd	r18, Y+4	; 0x04
     b52:	3d 81       	ldd	r19, Y+5	; 0x05
     b54:	4e 81       	ldd	r20, Y+6	; 0x06
     b56:	5f 81       	ldd	r21, Y+7	; 0x07
     b58:	57 ff       	sbrs	r21, 7
     b5a:	1d c0       	rjmp	.+58     	; 0xb96 <_fpadd_parts+0x286>
     b5c:	da 01       	movw	r26, r20
     b5e:	c9 01       	movw	r24, r18
     b60:	81 70       	andi	r24, 0x01	; 1
     b62:	90 70       	andi	r25, 0x00	; 0
     b64:	a0 70       	andi	r26, 0x00	; 0
     b66:	b0 70       	andi	r27, 0x00	; 0
     b68:	56 95       	lsr	r21
     b6a:	47 95       	ror	r20
     b6c:	37 95       	ror	r19
     b6e:	27 95       	ror	r18
     b70:	82 2b       	or	r24, r18
     b72:	93 2b       	or	r25, r19
     b74:	a4 2b       	or	r26, r20
     b76:	b5 2b       	or	r27, r21
     b78:	8c 83       	std	Y+4, r24	; 0x04
     b7a:	9d 83       	std	Y+5, r25	; 0x05
     b7c:	ae 83       	std	Y+6, r26	; 0x06
     b7e:	bf 83       	std	Y+7, r27	; 0x07
     b80:	8a 81       	ldd	r24, Y+2	; 0x02
     b82:	9b 81       	ldd	r25, Y+3	; 0x03
     b84:	01 96       	adiw	r24, 0x01	; 1
     b86:	9b 83       	std	Y+3, r25	; 0x03
     b88:	8a 83       	std	Y+2, r24	; 0x02
     b8a:	05 c0       	rjmp	.+10     	; 0xb96 <_fpadd_parts+0x286>
     b8c:	e2 e0       	ldi	r30, 0x02	; 2
     b8e:	f1 e0       	ldi	r31, 0x01	; 1
     b90:	03 c0       	rjmp	.+6      	; 0xb98 <_fpadd_parts+0x288>
     b92:	fb 01       	movw	r30, r22
     b94:	01 c0       	rjmp	.+2      	; 0xb98 <_fpadd_parts+0x288>
     b96:	fe 01       	movw	r30, r28
     b98:	cf 01       	movw	r24, r30
     b9a:	cd b7       	in	r28, 0x3d	; 61
     b9c:	de b7       	in	r29, 0x3e	; 62
     b9e:	ee e0       	ldi	r30, 0x0E	; 14
     ba0:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__epilogue_restores__+0x8>

00000ba4 <__addsf3>:
     ba4:	a0 e2       	ldi	r26, 0x20	; 32
     ba6:	b0 e0       	ldi	r27, 0x00	; 0
     ba8:	e8 ed       	ldi	r30, 0xD8	; 216
     baa:	f5 e0       	ldi	r31, 0x05	; 5
     bac:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__prologue_saves__+0x18>
     bb0:	69 83       	std	Y+1, r22	; 0x01
     bb2:	7a 83       	std	Y+2, r23	; 0x02
     bb4:	8b 83       	std	Y+3, r24	; 0x03
     bb6:	9c 83       	std	Y+4, r25	; 0x04
     bb8:	2d 83       	std	Y+5, r18	; 0x05
     bba:	3e 83       	std	Y+6, r19	; 0x06
     bbc:	4f 83       	std	Y+7, r20	; 0x07
     bbe:	58 87       	std	Y+8, r21	; 0x08
     bc0:	89 e0       	ldi	r24, 0x09	; 9
     bc2:	e8 2e       	mov	r14, r24
     bc4:	f1 2c       	mov	r15, r1
     bc6:	ec 0e       	add	r14, r28
     bc8:	fd 1e       	adc	r15, r29
     bca:	ce 01       	movw	r24, r28
     bcc:	01 96       	adiw	r24, 0x01	; 1
     bce:	b7 01       	movw	r22, r14
     bd0:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     bd4:	8e 01       	movw	r16, r28
     bd6:	0f 5e       	subi	r16, 0xEF	; 239
     bd8:	1f 4f       	sbci	r17, 0xFF	; 255
     bda:	ce 01       	movw	r24, r28
     bdc:	05 96       	adiw	r24, 0x05	; 5
     bde:	b8 01       	movw	r22, r16
     be0:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     be4:	c7 01       	movw	r24, r14
     be6:	b8 01       	movw	r22, r16
     be8:	ae 01       	movw	r20, r28
     bea:	47 5e       	subi	r20, 0xE7	; 231
     bec:	5f 4f       	sbci	r21, 0xFF	; 255
     bee:	0e 94 88 04 	call	0x910	; 0x910 <_fpadd_parts>
     bf2:	0e 94 ba 08 	call	0x1174	; 0x1174 <__pack_f>
     bf6:	a0 96       	adiw	r28, 0x20	; 32
     bf8:	e6 e0       	ldi	r30, 0x06	; 6
     bfa:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x18>

00000bfe <__subsf3>:
     bfe:	a0 e2       	ldi	r26, 0x20	; 32
     c00:	b0 e0       	ldi	r27, 0x00	; 0
     c02:	e5 e0       	ldi	r30, 0x05	; 5
     c04:	f6 e0       	ldi	r31, 0x06	; 6
     c06:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__prologue_saves__+0x18>
     c0a:	69 83       	std	Y+1, r22	; 0x01
     c0c:	7a 83       	std	Y+2, r23	; 0x02
     c0e:	8b 83       	std	Y+3, r24	; 0x03
     c10:	9c 83       	std	Y+4, r25	; 0x04
     c12:	2d 83       	std	Y+5, r18	; 0x05
     c14:	3e 83       	std	Y+6, r19	; 0x06
     c16:	4f 83       	std	Y+7, r20	; 0x07
     c18:	58 87       	std	Y+8, r21	; 0x08
     c1a:	8e 01       	movw	r16, r28
     c1c:	07 5f       	subi	r16, 0xF7	; 247
     c1e:	1f 4f       	sbci	r17, 0xFF	; 255
     c20:	ce 01       	movw	r24, r28
     c22:	01 96       	adiw	r24, 0x01	; 1
     c24:	b8 01       	movw	r22, r16
     c26:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     c2a:	91 e1       	ldi	r25, 0x11	; 17
     c2c:	e9 2e       	mov	r14, r25
     c2e:	f1 2c       	mov	r15, r1
     c30:	ec 0e       	add	r14, r28
     c32:	fd 1e       	adc	r15, r29
     c34:	ce 01       	movw	r24, r28
     c36:	05 96       	adiw	r24, 0x05	; 5
     c38:	b7 01       	movw	r22, r14
     c3a:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     c3e:	8a 89       	ldd	r24, Y+18	; 0x12
     c40:	91 e0       	ldi	r25, 0x01	; 1
     c42:	89 27       	eor	r24, r25
     c44:	8a 8b       	std	Y+18, r24	; 0x12
     c46:	c8 01       	movw	r24, r16
     c48:	b7 01       	movw	r22, r14
     c4a:	ae 01       	movw	r20, r28
     c4c:	47 5e       	subi	r20, 0xE7	; 231
     c4e:	5f 4f       	sbci	r21, 0xFF	; 255
     c50:	0e 94 88 04 	call	0x910	; 0x910 <_fpadd_parts>
     c54:	0e 94 ba 08 	call	0x1174	; 0x1174 <__pack_f>
     c58:	a0 96       	adiw	r28, 0x20	; 32
     c5a:	e6 e0       	ldi	r30, 0x06	; 6
     c5c:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x18>

00000c60 <__mulsf3>:
     c60:	a0 e2       	ldi	r26, 0x20	; 32
     c62:	b0 e0       	ldi	r27, 0x00	; 0
     c64:	e6 e3       	ldi	r30, 0x36	; 54
     c66:	f6 e0       	ldi	r31, 0x06	; 6
     c68:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__prologue_saves__>
     c6c:	69 83       	std	Y+1, r22	; 0x01
     c6e:	7a 83       	std	Y+2, r23	; 0x02
     c70:	8b 83       	std	Y+3, r24	; 0x03
     c72:	9c 83       	std	Y+4, r25	; 0x04
     c74:	2d 83       	std	Y+5, r18	; 0x05
     c76:	3e 83       	std	Y+6, r19	; 0x06
     c78:	4f 83       	std	Y+7, r20	; 0x07
     c7a:	58 87       	std	Y+8, r21	; 0x08
     c7c:	ce 01       	movw	r24, r28
     c7e:	01 96       	adiw	r24, 0x01	; 1
     c80:	be 01       	movw	r22, r28
     c82:	67 5f       	subi	r22, 0xF7	; 247
     c84:	7f 4f       	sbci	r23, 0xFF	; 255
     c86:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     c8a:	ce 01       	movw	r24, r28
     c8c:	05 96       	adiw	r24, 0x05	; 5
     c8e:	be 01       	movw	r22, r28
     c90:	6f 5e       	subi	r22, 0xEF	; 239
     c92:	7f 4f       	sbci	r23, 0xFF	; 255
     c94:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     c98:	99 85       	ldd	r25, Y+9	; 0x09
     c9a:	92 30       	cpi	r25, 0x02	; 2
     c9c:	78 f0       	brcs	.+30     	; 0xcbc <__mulsf3+0x5c>
     c9e:	89 89       	ldd	r24, Y+17	; 0x11
     ca0:	82 30       	cpi	r24, 0x02	; 2
     ca2:	c0 f0       	brcs	.+48     	; 0xcd4 <__mulsf3+0x74>
     ca4:	94 30       	cpi	r25, 0x04	; 4
     ca6:	19 f4       	brne	.+6      	; 0xcae <__mulsf3+0x4e>
     ca8:	82 30       	cpi	r24, 0x02	; 2
     caa:	41 f4       	brne	.+16     	; 0xcbc <__mulsf3+0x5c>
     cac:	cb c0       	rjmp	.+406    	; 0xe44 <__mulsf3+0x1e4>
     cae:	84 30       	cpi	r24, 0x04	; 4
     cb0:	19 f4       	brne	.+6      	; 0xcb8 <__mulsf3+0x58>
     cb2:	92 30       	cpi	r25, 0x02	; 2
     cb4:	79 f4       	brne	.+30     	; 0xcd4 <__mulsf3+0x74>
     cb6:	c6 c0       	rjmp	.+396    	; 0xe44 <__mulsf3+0x1e4>
     cb8:	92 30       	cpi	r25, 0x02	; 2
     cba:	51 f4       	brne	.+20     	; 0xcd0 <__mulsf3+0x70>
     cbc:	81 e0       	ldi	r24, 0x01	; 1
     cbe:	2a 85       	ldd	r18, Y+10	; 0x0a
     cc0:	9a 89       	ldd	r25, Y+18	; 0x12
     cc2:	29 17       	cp	r18, r25
     cc4:	09 f4       	brne	.+2      	; 0xcc8 <__mulsf3+0x68>
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	8a 87       	std	Y+10, r24	; 0x0a
     cca:	ce 01       	movw	r24, r28
     ccc:	09 96       	adiw	r24, 0x09	; 9
     cce:	bc c0       	rjmp	.+376    	; 0xe48 <__mulsf3+0x1e8>
     cd0:	82 30       	cpi	r24, 0x02	; 2
     cd2:	51 f4       	brne	.+20     	; 0xce8 <__mulsf3+0x88>
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	2a 85       	ldd	r18, Y+10	; 0x0a
     cd8:	9a 89       	ldd	r25, Y+18	; 0x12
     cda:	29 17       	cp	r18, r25
     cdc:	09 f4       	brne	.+2      	; 0xce0 <__mulsf3+0x80>
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	8a 8b       	std	Y+18, r24	; 0x12
     ce2:	ce 01       	movw	r24, r28
     ce4:	41 96       	adiw	r24, 0x11	; 17
     ce6:	b0 c0       	rjmp	.+352    	; 0xe48 <__mulsf3+0x1e8>
     ce8:	6d 84       	ldd	r6, Y+13	; 0x0d
     cea:	7e 84       	ldd	r7, Y+14	; 0x0e
     cec:	8f 84       	ldd	r8, Y+15	; 0x0f
     cee:	98 88       	ldd	r9, Y+16	; 0x10
     cf0:	ed 88       	ldd	r14, Y+21	; 0x15
     cf2:	fe 88       	ldd	r15, Y+22	; 0x16
     cf4:	0f 89       	ldd	r16, Y+23	; 0x17
     cf6:	18 8d       	ldd	r17, Y+24	; 0x18
     cf8:	e0 e2       	ldi	r30, 0x20	; 32
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	dc 01       	movw	r26, r24
     d02:	aa 24       	eor	r10, r10
     d04:	bb 24       	eor	r11, r11
     d06:	65 01       	movw	r12, r10
     d08:	20 e0       	ldi	r18, 0x00	; 0
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	a9 01       	movw	r20, r18
     d0e:	b3 01       	movw	r22, r6
     d10:	61 70       	andi	r22, 0x01	; 1
     d12:	70 70       	andi	r23, 0x00	; 0
     d14:	61 15       	cp	r22, r1
     d16:	71 05       	cpc	r23, r1
     d18:	d1 f0       	breq	.+52     	; 0xd4e <__mulsf3+0xee>
     d1a:	2e 0d       	add	r18, r14
     d1c:	3f 1d       	adc	r19, r15
     d1e:	40 1f       	adc	r20, r16
     d20:	51 1f       	adc	r21, r17
     d22:	15 01       	movw	r2, r10
     d24:	26 01       	movw	r4, r12
     d26:	28 0e       	add	r2, r24
     d28:	39 1e       	adc	r3, r25
     d2a:	4a 1e       	adc	r4, r26
     d2c:	5b 1e       	adc	r5, r27
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	a0 e0       	ldi	r26, 0x00	; 0
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	2e 15       	cp	r18, r14
     d38:	3f 05       	cpc	r19, r15
     d3a:	40 07       	cpc	r20, r16
     d3c:	51 07       	cpc	r21, r17
     d3e:	18 f0       	brcs	.+6      	; 0xd46 <__mulsf3+0xe6>
     d40:	80 e0       	ldi	r24, 0x00	; 0
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	dc 01       	movw	r26, r24
     d46:	82 0d       	add	r24, r2
     d48:	93 1d       	adc	r25, r3
     d4a:	a4 1d       	adc	r26, r4
     d4c:	b5 1d       	adc	r27, r5
     d4e:	aa 0c       	add	r10, r10
     d50:	bb 1c       	adc	r11, r11
     d52:	cc 1c       	adc	r12, r12
     d54:	dd 1c       	adc	r13, r13
     d56:	17 ff       	sbrs	r17, 7
     d58:	09 c0       	rjmp	.+18     	; 0xd6c <__mulsf3+0x10c>
     d5a:	61 e0       	ldi	r22, 0x01	; 1
     d5c:	26 2e       	mov	r2, r22
     d5e:	31 2c       	mov	r3, r1
     d60:	41 2c       	mov	r4, r1
     d62:	51 2c       	mov	r5, r1
     d64:	a2 28       	or	r10, r2
     d66:	b3 28       	or	r11, r3
     d68:	c4 28       	or	r12, r4
     d6a:	d5 28       	or	r13, r5
     d6c:	31 97       	sbiw	r30, 0x01	; 1
     d6e:	49 f0       	breq	.+18     	; 0xd82 <__mulsf3+0x122>
     d70:	ee 0c       	add	r14, r14
     d72:	ff 1c       	adc	r15, r15
     d74:	00 1f       	adc	r16, r16
     d76:	11 1f       	adc	r17, r17
     d78:	96 94       	lsr	r9
     d7a:	87 94       	ror	r8
     d7c:	77 94       	ror	r7
     d7e:	67 94       	ror	r6
     d80:	c6 cf       	rjmp	.-116    	; 0xd0e <__mulsf3+0xae>
     d82:	6b 89       	ldd	r22, Y+19	; 0x13
     d84:	7c 89       	ldd	r23, Y+20	; 0x14
     d86:	eb 85       	ldd	r30, Y+11	; 0x0b
     d88:	fc 85       	ldd	r31, Y+12	; 0x0c
     d8a:	6e 0f       	add	r22, r30
     d8c:	7f 1f       	adc	r23, r31
     d8e:	6e 5f       	subi	r22, 0xFE	; 254
     d90:	7f 4f       	sbci	r23, 0xFF	; 255
     d92:	7c 8f       	std	Y+28, r23	; 0x1c
     d94:	6b 8f       	std	Y+27, r22	; 0x1b
     d96:	61 e0       	ldi	r22, 0x01	; 1
     d98:	ea 85       	ldd	r30, Y+10	; 0x0a
     d9a:	7a 89       	ldd	r23, Y+18	; 0x12
     d9c:	e7 17       	cp	r30, r23
     d9e:	09 f4       	brne	.+2      	; 0xda2 <__mulsf3+0x142>
     da0:	60 e0       	ldi	r22, 0x00	; 0
     da2:	6a 8f       	std	Y+26, r22	; 0x1a
     da4:	6b 8d       	ldd	r22, Y+27	; 0x1b
     da6:	7c 8d       	ldd	r23, Y+28	; 0x1c
     da8:	10 c0       	rjmp	.+32     	; 0xdca <__mulsf3+0x16a>
     daa:	fc 01       	movw	r30, r24
     dac:	e1 70       	andi	r30, 0x01	; 1
     dae:	f0 70       	andi	r31, 0x00	; 0
     db0:	30 97       	sbiw	r30, 0x00	; 0
     db2:	29 f0       	breq	.+10     	; 0xdbe <__mulsf3+0x15e>
     db4:	56 95       	lsr	r21
     db6:	47 95       	ror	r20
     db8:	37 95       	ror	r19
     dba:	27 95       	ror	r18
     dbc:	50 68       	ori	r21, 0x80	; 128
     dbe:	b6 95       	lsr	r27
     dc0:	a7 95       	ror	r26
     dc2:	97 95       	ror	r25
     dc4:	87 95       	ror	r24
     dc6:	6f 5f       	subi	r22, 0xFF	; 255
     dc8:	7f 4f       	sbci	r23, 0xFF	; 255
     dca:	b7 fd       	sbrc	r27, 7
     dcc:	ee cf       	rjmp	.-36     	; 0xdaa <__mulsf3+0x14a>
     dce:	0c c0       	rjmp	.+24     	; 0xde8 <__mulsf3+0x188>
     dd0:	88 0f       	add	r24, r24
     dd2:	99 1f       	adc	r25, r25
     dd4:	aa 1f       	adc	r26, r26
     dd6:	bb 1f       	adc	r27, r27
     dd8:	57 fd       	sbrc	r21, 7
     dda:	81 60       	ori	r24, 0x01	; 1
     ddc:	22 0f       	add	r18, r18
     dde:	33 1f       	adc	r19, r19
     de0:	44 1f       	adc	r20, r20
     de2:	55 1f       	adc	r21, r21
     de4:	61 50       	subi	r22, 0x01	; 1
     de6:	70 40       	sbci	r23, 0x00	; 0
     de8:	80 30       	cpi	r24, 0x00	; 0
     dea:	e0 e0       	ldi	r30, 0x00	; 0
     dec:	9e 07       	cpc	r25, r30
     dee:	e0 e0       	ldi	r30, 0x00	; 0
     df0:	ae 07       	cpc	r26, r30
     df2:	e0 e4       	ldi	r30, 0x40	; 64
     df4:	be 07       	cpc	r27, r30
     df6:	60 f3       	brcs	.-40     	; 0xdd0 <__mulsf3+0x170>
     df8:	6b 8f       	std	Y+27, r22	; 0x1b
     dfa:	7c 8f       	std	Y+28, r23	; 0x1c
     dfc:	6f e7       	ldi	r22, 0x7F	; 127
     dfe:	e6 2e       	mov	r14, r22
     e00:	f1 2c       	mov	r15, r1
     e02:	01 2d       	mov	r16, r1
     e04:	11 2d       	mov	r17, r1
     e06:	e8 22       	and	r14, r24
     e08:	f9 22       	and	r15, r25
     e0a:	0a 23       	and	r16, r26
     e0c:	1b 23       	and	r17, r27
     e0e:	60 e4       	ldi	r22, 0x40	; 64
     e10:	e6 16       	cp	r14, r22
     e12:	f1 04       	cpc	r15, r1
     e14:	01 05       	cpc	r16, r1
     e16:	11 05       	cpc	r17, r1
     e18:	61 f4       	brne	.+24     	; 0xe32 <__mulsf3+0x1d2>
     e1a:	87 fd       	sbrc	r24, 7
     e1c:	0a c0       	rjmp	.+20     	; 0xe32 <__mulsf3+0x1d2>
     e1e:	21 15       	cp	r18, r1
     e20:	31 05       	cpc	r19, r1
     e22:	41 05       	cpc	r20, r1
     e24:	51 05       	cpc	r21, r1
     e26:	29 f0       	breq	.+10     	; 0xe32 <__mulsf3+0x1d2>
     e28:	80 5c       	subi	r24, 0xC0	; 192
     e2a:	9f 4f       	sbci	r25, 0xFF	; 255
     e2c:	af 4f       	sbci	r26, 0xFF	; 255
     e2e:	bf 4f       	sbci	r27, 0xFF	; 255
     e30:	80 78       	andi	r24, 0x80	; 128
     e32:	8d 8f       	std	Y+29, r24	; 0x1d
     e34:	9e 8f       	std	Y+30, r25	; 0x1e
     e36:	af 8f       	std	Y+31, r26	; 0x1f
     e38:	b8 a3       	std	Y+32, r27	; 0x20
     e3a:	83 e0       	ldi	r24, 0x03	; 3
     e3c:	89 8f       	std	Y+25, r24	; 0x19
     e3e:	ce 01       	movw	r24, r28
     e40:	49 96       	adiw	r24, 0x19	; 25
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <__mulsf3+0x1e8>
     e44:	82 e0       	ldi	r24, 0x02	; 2
     e46:	91 e0       	ldi	r25, 0x01	; 1
     e48:	0e 94 ba 08 	call	0x1174	; 0x1174 <__pack_f>
     e4c:	a0 96       	adiw	r28, 0x20	; 32
     e4e:	e2 e1       	ldi	r30, 0x12	; 18
     e50:	0c 94 66 0a 	jmp	0x14cc	; 0x14cc <__epilogue_restores__>

00000e54 <__divsf3>:
     e54:	a8 e1       	ldi	r26, 0x18	; 24
     e56:	b0 e0       	ldi	r27, 0x00	; 0
     e58:	e0 e3       	ldi	r30, 0x30	; 48
     e5a:	f7 e0       	ldi	r31, 0x07	; 7
     e5c:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__prologue_saves__+0x10>
     e60:	69 83       	std	Y+1, r22	; 0x01
     e62:	7a 83       	std	Y+2, r23	; 0x02
     e64:	8b 83       	std	Y+3, r24	; 0x03
     e66:	9c 83       	std	Y+4, r25	; 0x04
     e68:	2d 83       	std	Y+5, r18	; 0x05
     e6a:	3e 83       	std	Y+6, r19	; 0x06
     e6c:	4f 83       	std	Y+7, r20	; 0x07
     e6e:	58 87       	std	Y+8, r21	; 0x08
     e70:	8e 01       	movw	r16, r28
     e72:	07 5f       	subi	r16, 0xF7	; 247
     e74:	1f 4f       	sbci	r17, 0xFF	; 255
     e76:	ce 01       	movw	r24, r28
     e78:	01 96       	adiw	r24, 0x01	; 1
     e7a:	b8 01       	movw	r22, r16
     e7c:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     e80:	81 e1       	ldi	r24, 0x11	; 17
     e82:	e8 2e       	mov	r14, r24
     e84:	f1 2c       	mov	r15, r1
     e86:	ec 0e       	add	r14, r28
     e88:	fd 1e       	adc	r15, r29
     e8a:	ce 01       	movw	r24, r28
     e8c:	05 96       	adiw	r24, 0x05	; 5
     e8e:	b7 01       	movw	r22, r14
     e90:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     e94:	99 85       	ldd	r25, Y+9	; 0x09
     e96:	92 30       	cpi	r25, 0x02	; 2
     e98:	08 f4       	brcc	.+2      	; 0xe9c <__divsf3+0x48>
     e9a:	83 c0       	rjmp	.+262    	; 0xfa2 <__divsf3+0x14e>
     e9c:	89 89       	ldd	r24, Y+17	; 0x11
     e9e:	82 30       	cpi	r24, 0x02	; 2
     ea0:	08 f4       	brcc	.+2      	; 0xea4 <__divsf3+0x50>
     ea2:	7b c0       	rjmp	.+246    	; 0xf9a <__divsf3+0x146>
     ea4:	2a 85       	ldd	r18, Y+10	; 0x0a
     ea6:	3a 89       	ldd	r19, Y+18	; 0x12
     ea8:	23 27       	eor	r18, r19
     eaa:	2a 87       	std	Y+10, r18	; 0x0a
     eac:	94 30       	cpi	r25, 0x04	; 4
     eae:	11 f0       	breq	.+4      	; 0xeb4 <__divsf3+0x60>
     eb0:	92 30       	cpi	r25, 0x02	; 2
     eb2:	21 f4       	brne	.+8      	; 0xebc <__divsf3+0x68>
     eb4:	98 17       	cp	r25, r24
     eb6:	09 f0       	breq	.+2      	; 0xeba <__divsf3+0x66>
     eb8:	6c c0       	rjmp	.+216    	; 0xf92 <__divsf3+0x13e>
     eba:	71 c0       	rjmp	.+226    	; 0xf9e <__divsf3+0x14a>
     ebc:	84 30       	cpi	r24, 0x04	; 4
     ebe:	39 f4       	brne	.+14     	; 0xece <__divsf3+0x7a>
     ec0:	1d 86       	std	Y+13, r1	; 0x0d
     ec2:	1e 86       	std	Y+14, r1	; 0x0e
     ec4:	1f 86       	std	Y+15, r1	; 0x0f
     ec6:	18 8a       	std	Y+16, r1	; 0x10
     ec8:	1c 86       	std	Y+12, r1	; 0x0c
     eca:	1b 86       	std	Y+11, r1	; 0x0b
     ecc:	6a c0       	rjmp	.+212    	; 0xfa2 <__divsf3+0x14e>
     ece:	82 30       	cpi	r24, 0x02	; 2
     ed0:	19 f4       	brne	.+6      	; 0xed8 <__divsf3+0x84>
     ed2:	84 e0       	ldi	r24, 0x04	; 4
     ed4:	89 87       	std	Y+9, r24	; 0x09
     ed6:	65 c0       	rjmp	.+202    	; 0xfa2 <__divsf3+0x14e>
     ed8:	8b 85       	ldd	r24, Y+11	; 0x0b
     eda:	9c 85       	ldd	r25, Y+12	; 0x0c
     edc:	2b 89       	ldd	r18, Y+19	; 0x13
     ede:	3c 89       	ldd	r19, Y+20	; 0x14
     ee0:	82 1b       	sub	r24, r18
     ee2:	93 0b       	sbc	r25, r19
     ee4:	9c 87       	std	Y+12, r25	; 0x0c
     ee6:	8b 87       	std	Y+11, r24	; 0x0b
     ee8:	2d 85       	ldd	r18, Y+13	; 0x0d
     eea:	3e 85       	ldd	r19, Y+14	; 0x0e
     eec:	4f 85       	ldd	r20, Y+15	; 0x0f
     eee:	58 89       	ldd	r21, Y+16	; 0x10
     ef0:	ed 88       	ldd	r14, Y+21	; 0x15
     ef2:	fe 88       	ldd	r15, Y+22	; 0x16
     ef4:	0f 89       	ldd	r16, Y+23	; 0x17
     ef6:	18 8d       	ldd	r17, Y+24	; 0x18
     ef8:	2e 15       	cp	r18, r14
     efa:	3f 05       	cpc	r19, r15
     efc:	40 07       	cpc	r20, r16
     efe:	51 07       	cpc	r21, r17
     f00:	38 f4       	brcc	.+14     	; 0xf10 <__divsf3+0xbc>
     f02:	22 0f       	add	r18, r18
     f04:	33 1f       	adc	r19, r19
     f06:	44 1f       	adc	r20, r20
     f08:	55 1f       	adc	r21, r21
     f0a:	01 97       	sbiw	r24, 0x01	; 1
     f0c:	9c 87       	std	Y+12, r25	; 0x0c
     f0e:	8b 87       	std	Y+11, r24	; 0x0b
     f10:	6f e1       	ldi	r22, 0x1F	; 31
     f12:	70 e0       	ldi	r23, 0x00	; 0
     f14:	a1 2c       	mov	r10, r1
     f16:	b1 2c       	mov	r11, r1
     f18:	c1 2c       	mov	r12, r1
     f1a:	a0 e4       	ldi	r26, 0x40	; 64
     f1c:	da 2e       	mov	r13, r26
     f1e:	80 e0       	ldi	r24, 0x00	; 0
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	dc 01       	movw	r26, r24
     f24:	2e 15       	cp	r18, r14
     f26:	3f 05       	cpc	r19, r15
     f28:	40 07       	cpc	r20, r16
     f2a:	51 07       	cpc	r21, r17
     f2c:	40 f0       	brcs	.+16     	; 0xf3e <__divsf3+0xea>
     f2e:	8a 29       	or	r24, r10
     f30:	9b 29       	or	r25, r11
     f32:	ac 29       	or	r26, r12
     f34:	bd 29       	or	r27, r13
     f36:	2e 19       	sub	r18, r14
     f38:	3f 09       	sbc	r19, r15
     f3a:	40 0b       	sbc	r20, r16
     f3c:	51 0b       	sbc	r21, r17
     f3e:	d6 94       	lsr	r13
     f40:	c7 94       	ror	r12
     f42:	b7 94       	ror	r11
     f44:	a7 94       	ror	r10
     f46:	22 0f       	add	r18, r18
     f48:	33 1f       	adc	r19, r19
     f4a:	44 1f       	adc	r20, r20
     f4c:	55 1f       	adc	r21, r21
     f4e:	61 50       	subi	r22, 0x01	; 1
     f50:	70 40       	sbci	r23, 0x00	; 0
     f52:	41 f7       	brne	.-48     	; 0xf24 <__divsf3+0xd0>
     f54:	6f e7       	ldi	r22, 0x7F	; 127
     f56:	e6 2e       	mov	r14, r22
     f58:	f1 2c       	mov	r15, r1
     f5a:	01 2d       	mov	r16, r1
     f5c:	11 2d       	mov	r17, r1
     f5e:	e8 22       	and	r14, r24
     f60:	f9 22       	and	r15, r25
     f62:	0a 23       	and	r16, r26
     f64:	1b 23       	and	r17, r27
     f66:	60 e4       	ldi	r22, 0x40	; 64
     f68:	e6 16       	cp	r14, r22
     f6a:	f1 04       	cpc	r15, r1
     f6c:	01 05       	cpc	r16, r1
     f6e:	11 05       	cpc	r17, r1
     f70:	61 f4       	brne	.+24     	; 0xf8a <__divsf3+0x136>
     f72:	87 fd       	sbrc	r24, 7
     f74:	0a c0       	rjmp	.+20     	; 0xf8a <__divsf3+0x136>
     f76:	21 15       	cp	r18, r1
     f78:	31 05       	cpc	r19, r1
     f7a:	41 05       	cpc	r20, r1
     f7c:	51 05       	cpc	r21, r1
     f7e:	29 f0       	breq	.+10     	; 0xf8a <__divsf3+0x136>
     f80:	80 5c       	subi	r24, 0xC0	; 192
     f82:	9f 4f       	sbci	r25, 0xFF	; 255
     f84:	af 4f       	sbci	r26, 0xFF	; 255
     f86:	bf 4f       	sbci	r27, 0xFF	; 255
     f88:	80 78       	andi	r24, 0x80	; 128
     f8a:	8d 87       	std	Y+13, r24	; 0x0d
     f8c:	9e 87       	std	Y+14, r25	; 0x0e
     f8e:	af 87       	std	Y+15, r26	; 0x0f
     f90:	b8 8b       	std	Y+16, r27	; 0x10
     f92:	8e 01       	movw	r16, r28
     f94:	07 5f       	subi	r16, 0xF7	; 247
     f96:	1f 4f       	sbci	r17, 0xFF	; 255
     f98:	04 c0       	rjmp	.+8      	; 0xfa2 <__divsf3+0x14e>
     f9a:	87 01       	movw	r16, r14
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <__divsf3+0x14e>
     f9e:	02 e0       	ldi	r16, 0x02	; 2
     fa0:	11 e0       	ldi	r17, 0x01	; 1
     fa2:	c8 01       	movw	r24, r16
     fa4:	0e 94 ba 08 	call	0x1174	; 0x1174 <__pack_f>
     fa8:	68 96       	adiw	r28, 0x18	; 24
     faa:	ea e0       	ldi	r30, 0x0A	; 10
     fac:	0c 94 6e 0a 	jmp	0x14dc	; 0x14dc <__epilogue_restores__+0x10>

00000fb0 <__gtsf2>:
     fb0:	a8 e1       	ldi	r26, 0x18	; 24
     fb2:	b0 e0       	ldi	r27, 0x00	; 0
     fb4:	ee ed       	ldi	r30, 0xDE	; 222
     fb6:	f7 e0       	ldi	r31, 0x07	; 7
     fb8:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__prologue_saves__+0x18>
     fbc:	69 83       	std	Y+1, r22	; 0x01
     fbe:	7a 83       	std	Y+2, r23	; 0x02
     fc0:	8b 83       	std	Y+3, r24	; 0x03
     fc2:	9c 83       	std	Y+4, r25	; 0x04
     fc4:	2d 83       	std	Y+5, r18	; 0x05
     fc6:	3e 83       	std	Y+6, r19	; 0x06
     fc8:	4f 83       	std	Y+7, r20	; 0x07
     fca:	58 87       	std	Y+8, r21	; 0x08
     fcc:	8e 01       	movw	r16, r28
     fce:	07 5f       	subi	r16, 0xF7	; 247
     fd0:	1f 4f       	sbci	r17, 0xFF	; 255
     fd2:	ce 01       	movw	r24, r28
     fd4:	01 96       	adiw	r24, 0x01	; 1
     fd6:	b8 01       	movw	r22, r16
     fd8:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     fdc:	81 e1       	ldi	r24, 0x11	; 17
     fde:	e8 2e       	mov	r14, r24
     fe0:	f1 2c       	mov	r15, r1
     fe2:	ec 0e       	add	r14, r28
     fe4:	fd 1e       	adc	r15, r29
     fe6:	ce 01       	movw	r24, r28
     fe8:	05 96       	adiw	r24, 0x05	; 5
     fea:	b7 01       	movw	r22, r14
     fec:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
     ff0:	89 85       	ldd	r24, Y+9	; 0x09
     ff2:	82 30       	cpi	r24, 0x02	; 2
     ff4:	40 f0       	brcs	.+16     	; 0x1006 <__gtsf2+0x56>
     ff6:	89 89       	ldd	r24, Y+17	; 0x11
     ff8:	82 30       	cpi	r24, 0x02	; 2
     ffa:	28 f0       	brcs	.+10     	; 0x1006 <__gtsf2+0x56>
     ffc:	c8 01       	movw	r24, r16
     ffe:	b7 01       	movw	r22, r14
    1000:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fpcmp_parts_f>
    1004:	01 c0       	rjmp	.+2      	; 0x1008 <__gtsf2+0x58>
    1006:	8f ef       	ldi	r24, 0xFF	; 255
    1008:	68 96       	adiw	r28, 0x18	; 24
    100a:	e6 e0       	ldi	r30, 0x06	; 6
    100c:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x18>

00001010 <__gesf2>:
    1010:	a8 e1       	ldi	r26, 0x18	; 24
    1012:	b0 e0       	ldi	r27, 0x00	; 0
    1014:	ee e0       	ldi	r30, 0x0E	; 14
    1016:	f8 e0       	ldi	r31, 0x08	; 8
    1018:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__prologue_saves__+0x18>
    101c:	69 83       	std	Y+1, r22	; 0x01
    101e:	7a 83       	std	Y+2, r23	; 0x02
    1020:	8b 83       	std	Y+3, r24	; 0x03
    1022:	9c 83       	std	Y+4, r25	; 0x04
    1024:	2d 83       	std	Y+5, r18	; 0x05
    1026:	3e 83       	std	Y+6, r19	; 0x06
    1028:	4f 83       	std	Y+7, r20	; 0x07
    102a:	58 87       	std	Y+8, r21	; 0x08
    102c:	8e 01       	movw	r16, r28
    102e:	07 5f       	subi	r16, 0xF7	; 247
    1030:	1f 4f       	sbci	r17, 0xFF	; 255
    1032:	ce 01       	movw	r24, r28
    1034:	01 96       	adiw	r24, 0x01	; 1
    1036:	b8 01       	movw	r22, r16
    1038:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
    103c:	81 e1       	ldi	r24, 0x11	; 17
    103e:	e8 2e       	mov	r14, r24
    1040:	f1 2c       	mov	r15, r1
    1042:	ec 0e       	add	r14, r28
    1044:	fd 1e       	adc	r15, r29
    1046:	ce 01       	movw	r24, r28
    1048:	05 96       	adiw	r24, 0x05	; 5
    104a:	b7 01       	movw	r22, r14
    104c:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
    1050:	89 85       	ldd	r24, Y+9	; 0x09
    1052:	82 30       	cpi	r24, 0x02	; 2
    1054:	40 f0       	brcs	.+16     	; 0x1066 <__gesf2+0x56>
    1056:	89 89       	ldd	r24, Y+17	; 0x11
    1058:	82 30       	cpi	r24, 0x02	; 2
    105a:	28 f0       	brcs	.+10     	; 0x1066 <__gesf2+0x56>
    105c:	c8 01       	movw	r24, r16
    105e:	b7 01       	movw	r22, r14
    1060:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fpcmp_parts_f>
    1064:	01 c0       	rjmp	.+2      	; 0x1068 <__gesf2+0x58>
    1066:	8f ef       	ldi	r24, 0xFF	; 255
    1068:	68 96       	adiw	r28, 0x18	; 24
    106a:	e6 e0       	ldi	r30, 0x06	; 6
    106c:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x18>

00001070 <__ltsf2>:
    1070:	a8 e1       	ldi	r26, 0x18	; 24
    1072:	b0 e0       	ldi	r27, 0x00	; 0
    1074:	ee e3       	ldi	r30, 0x3E	; 62
    1076:	f8 e0       	ldi	r31, 0x08	; 8
    1078:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__prologue_saves__+0x18>
    107c:	69 83       	std	Y+1, r22	; 0x01
    107e:	7a 83       	std	Y+2, r23	; 0x02
    1080:	8b 83       	std	Y+3, r24	; 0x03
    1082:	9c 83       	std	Y+4, r25	; 0x04
    1084:	2d 83       	std	Y+5, r18	; 0x05
    1086:	3e 83       	std	Y+6, r19	; 0x06
    1088:	4f 83       	std	Y+7, r20	; 0x07
    108a:	58 87       	std	Y+8, r21	; 0x08
    108c:	8e 01       	movw	r16, r28
    108e:	07 5f       	subi	r16, 0xF7	; 247
    1090:	1f 4f       	sbci	r17, 0xFF	; 255
    1092:	ce 01       	movw	r24, r28
    1094:	01 96       	adiw	r24, 0x01	; 1
    1096:	b8 01       	movw	r22, r16
    1098:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
    109c:	81 e1       	ldi	r24, 0x11	; 17
    109e:	e8 2e       	mov	r14, r24
    10a0:	f1 2c       	mov	r15, r1
    10a2:	ec 0e       	add	r14, r28
    10a4:	fd 1e       	adc	r15, r29
    10a6:	ce 01       	movw	r24, r28
    10a8:	05 96       	adiw	r24, 0x05	; 5
    10aa:	b7 01       	movw	r22, r14
    10ac:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
    10b0:	89 85       	ldd	r24, Y+9	; 0x09
    10b2:	82 30       	cpi	r24, 0x02	; 2
    10b4:	40 f0       	brcs	.+16     	; 0x10c6 <__ltsf2+0x56>
    10b6:	89 89       	ldd	r24, Y+17	; 0x11
    10b8:	82 30       	cpi	r24, 0x02	; 2
    10ba:	28 f0       	brcs	.+10     	; 0x10c6 <__ltsf2+0x56>
    10bc:	c8 01       	movw	r24, r16
    10be:	b7 01       	movw	r22, r14
    10c0:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fpcmp_parts_f>
    10c4:	01 c0       	rjmp	.+2      	; 0x10c8 <__ltsf2+0x58>
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	68 96       	adiw	r28, 0x18	; 24
    10ca:	e6 e0       	ldi	r30, 0x06	; 6
    10cc:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x18>

000010d0 <__fixsfsi>:
    10d0:	ac e0       	ldi	r26, 0x0C	; 12
    10d2:	b0 e0       	ldi	r27, 0x00	; 0
    10d4:	ee e6       	ldi	r30, 0x6E	; 110
    10d6:	f8 e0       	ldi	r31, 0x08	; 8
    10d8:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__prologue_saves__+0x20>
    10dc:	69 83       	std	Y+1, r22	; 0x01
    10de:	7a 83       	std	Y+2, r23	; 0x02
    10e0:	8b 83       	std	Y+3, r24	; 0x03
    10e2:	9c 83       	std	Y+4, r25	; 0x04
    10e4:	ce 01       	movw	r24, r28
    10e6:	01 96       	adiw	r24, 0x01	; 1
    10e8:	be 01       	movw	r22, r28
    10ea:	6b 5f       	subi	r22, 0xFB	; 251
    10ec:	7f 4f       	sbci	r23, 0xFF	; 255
    10ee:	0e 94 88 09 	call	0x1310	; 0x1310 <__unpack_f>
    10f2:	8d 81       	ldd	r24, Y+5	; 0x05
    10f4:	82 30       	cpi	r24, 0x02	; 2
    10f6:	81 f1       	breq	.+96     	; 0x1158 <__fixsfsi+0x88>
    10f8:	82 30       	cpi	r24, 0x02	; 2
    10fa:	70 f1       	brcs	.+92     	; 0x1158 <__fixsfsi+0x88>
    10fc:	84 30       	cpi	r24, 0x04	; 4
    10fe:	21 f4       	brne	.+8      	; 0x1108 <__fixsfsi+0x38>
    1100:	8e 81       	ldd	r24, Y+6	; 0x06
    1102:	88 23       	and	r24, r24
    1104:	69 f1       	breq	.+90     	; 0x1160 <__fixsfsi+0x90>
    1106:	0a c0       	rjmp	.+20     	; 0x111c <__fixsfsi+0x4c>
    1108:	2f 81       	ldd	r18, Y+7	; 0x07
    110a:	38 85       	ldd	r19, Y+8	; 0x08
    110c:	37 fd       	sbrc	r19, 7
    110e:	24 c0       	rjmp	.+72     	; 0x1158 <__fixsfsi+0x88>
    1110:	6e 81       	ldd	r22, Y+6	; 0x06
    1112:	2f 31       	cpi	r18, 0x1F	; 31
    1114:	31 05       	cpc	r19, r1
    1116:	3c f0       	brlt	.+14     	; 0x1126 <__fixsfsi+0x56>
    1118:	66 23       	and	r22, r22
    111a:	11 f1       	breq	.+68     	; 0x1160 <__fixsfsi+0x90>
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	40 e0       	ldi	r20, 0x00	; 0
    1122:	50 e8       	ldi	r21, 0x80	; 128
    1124:	21 c0       	rjmp	.+66     	; 0x1168 <__fixsfsi+0x98>
    1126:	8e e1       	ldi	r24, 0x1E	; 30
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	82 1b       	sub	r24, r18
    112c:	93 0b       	sbc	r25, r19
    112e:	29 85       	ldd	r18, Y+9	; 0x09
    1130:	3a 85       	ldd	r19, Y+10	; 0x0a
    1132:	4b 85       	ldd	r20, Y+11	; 0x0b
    1134:	5c 85       	ldd	r21, Y+12	; 0x0c
    1136:	04 c0       	rjmp	.+8      	; 0x1140 <__fixsfsi+0x70>
    1138:	56 95       	lsr	r21
    113a:	47 95       	ror	r20
    113c:	37 95       	ror	r19
    113e:	27 95       	ror	r18
    1140:	8a 95       	dec	r24
    1142:	d2 f7       	brpl	.-12     	; 0x1138 <__fixsfsi+0x68>
    1144:	66 23       	and	r22, r22
    1146:	81 f0       	breq	.+32     	; 0x1168 <__fixsfsi+0x98>
    1148:	50 95       	com	r21
    114a:	40 95       	com	r20
    114c:	30 95       	com	r19
    114e:	21 95       	neg	r18
    1150:	3f 4f       	sbci	r19, 0xFF	; 255
    1152:	4f 4f       	sbci	r20, 0xFF	; 255
    1154:	5f 4f       	sbci	r21, 0xFF	; 255
    1156:	08 c0       	rjmp	.+16     	; 0x1168 <__fixsfsi+0x98>
    1158:	20 e0       	ldi	r18, 0x00	; 0
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	a9 01       	movw	r20, r18
    115e:	04 c0       	rjmp	.+8      	; 0x1168 <__fixsfsi+0x98>
    1160:	2f ef       	ldi	r18, 0xFF	; 255
    1162:	3f ef       	ldi	r19, 0xFF	; 255
    1164:	4f ef       	ldi	r20, 0xFF	; 255
    1166:	5f e7       	ldi	r21, 0x7F	; 127
    1168:	b9 01       	movw	r22, r18
    116a:	ca 01       	movw	r24, r20
    116c:	2c 96       	adiw	r28, 0x0c	; 12
    116e:	e2 e0       	ldi	r30, 0x02	; 2
    1170:	0c 94 76 0a 	jmp	0x14ec	; 0x14ec <__epilogue_restores__+0x20>

00001174 <__pack_f>:
    1174:	ef 92       	push	r14
    1176:	ff 92       	push	r15
    1178:	0f 93       	push	r16
    117a:	1f 93       	push	r17
    117c:	cf 93       	push	r28
    117e:	df 93       	push	r29
    1180:	fc 01       	movw	r30, r24
    1182:	24 81       	ldd	r18, Z+4	; 0x04
    1184:	35 81       	ldd	r19, Z+5	; 0x05
    1186:	46 81       	ldd	r20, Z+6	; 0x06
    1188:	57 81       	ldd	r21, Z+7	; 0x07
    118a:	61 81       	ldd	r22, Z+1	; 0x01
    118c:	80 81       	ld	r24, Z
    118e:	82 30       	cpi	r24, 0x02	; 2
    1190:	20 f4       	brcc	.+8      	; 0x119a <__pack_f+0x26>
    1192:	40 61       	ori	r20, 0x10	; 16
    1194:	ef ef       	ldi	r30, 0xFF	; 255
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	a3 c0       	rjmp	.+326    	; 0x12e0 <__pack_f+0x16c>
    119a:	84 30       	cpi	r24, 0x04	; 4
    119c:	09 f4       	brne	.+2      	; 0x11a0 <__pack_f+0x2c>
    119e:	9b c0       	rjmp	.+310    	; 0x12d6 <__pack_f+0x162>
    11a0:	82 30       	cpi	r24, 0x02	; 2
    11a2:	09 f4       	brne	.+2      	; 0x11a6 <__pack_f+0x32>
    11a4:	92 c0       	rjmp	.+292    	; 0x12ca <__pack_f+0x156>
    11a6:	21 15       	cp	r18, r1
    11a8:	31 05       	cpc	r19, r1
    11aa:	41 05       	cpc	r20, r1
    11ac:	51 05       	cpc	r21, r1
    11ae:	09 f4       	brne	.+2      	; 0x11b2 <__pack_f+0x3e>
    11b0:	8f c0       	rjmp	.+286    	; 0x12d0 <__pack_f+0x15c>
    11b2:	02 80       	ldd	r0, Z+2	; 0x02
    11b4:	f3 81       	ldd	r31, Z+3	; 0x03
    11b6:	e0 2d       	mov	r30, r0
    11b8:	8f ef       	ldi	r24, 0xFF	; 255
    11ba:	e2 38       	cpi	r30, 0x82	; 130
    11bc:	f8 07       	cpc	r31, r24
    11be:	0c f0       	brlt	.+2      	; 0x11c2 <__pack_f+0x4e>
    11c0:	5a c0       	rjmp	.+180    	; 0x1276 <__pack_f+0x102>
    11c2:	c2 e8       	ldi	r28, 0x82	; 130
    11c4:	df ef       	ldi	r29, 0xFF	; 255
    11c6:	ce 1b       	sub	r28, r30
    11c8:	df 0b       	sbc	r29, r31
    11ca:	ca 31       	cpi	r28, 0x1A	; 26
    11cc:	d1 05       	cpc	r29, r1
    11ce:	6c f5       	brge	.+90     	; 0x122a <__pack_f+0xb6>
    11d0:	79 01       	movw	r14, r18
    11d2:	8a 01       	movw	r16, r20
    11d4:	0c 2e       	mov	r0, r28
    11d6:	04 c0       	rjmp	.+8      	; 0x11e0 <__pack_f+0x6c>
    11d8:	16 95       	lsr	r17
    11da:	07 95       	ror	r16
    11dc:	f7 94       	ror	r15
    11de:	e7 94       	ror	r14
    11e0:	0a 94       	dec	r0
    11e2:	d2 f7       	brpl	.-12     	; 0x11d8 <__pack_f+0x64>
    11e4:	81 e0       	ldi	r24, 0x01	; 1
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	a0 e0       	ldi	r26, 0x00	; 0
    11ea:	b0 e0       	ldi	r27, 0x00	; 0
    11ec:	0c 2e       	mov	r0, r28
    11ee:	04 c0       	rjmp	.+8      	; 0x11f8 <__pack_f+0x84>
    11f0:	88 0f       	add	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	aa 1f       	adc	r26, r26
    11f6:	bb 1f       	adc	r27, r27
    11f8:	0a 94       	dec	r0
    11fa:	d2 f7       	brpl	.-12     	; 0x11f0 <__pack_f+0x7c>
    11fc:	01 97       	sbiw	r24, 0x01	; 1
    11fe:	a1 09       	sbc	r26, r1
    1200:	b1 09       	sbc	r27, r1
    1202:	82 23       	and	r24, r18
    1204:	93 23       	and	r25, r19
    1206:	a4 23       	and	r26, r20
    1208:	b5 23       	and	r27, r21
    120a:	21 e0       	ldi	r18, 0x01	; 1
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	40 e0       	ldi	r20, 0x00	; 0
    1210:	50 e0       	ldi	r21, 0x00	; 0
    1212:	00 97       	sbiw	r24, 0x00	; 0
    1214:	a1 05       	cpc	r26, r1
    1216:	b1 05       	cpc	r27, r1
    1218:	19 f4       	brne	.+6      	; 0x1220 <__pack_f+0xac>
    121a:	20 e0       	ldi	r18, 0x00	; 0
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	a9 01       	movw	r20, r18
    1220:	2e 29       	or	r18, r14
    1222:	3f 29       	or	r19, r15
    1224:	40 2b       	or	r20, r16
    1226:	51 2b       	or	r21, r17
    1228:	03 c0       	rjmp	.+6      	; 0x1230 <__pack_f+0xbc>
    122a:	20 e0       	ldi	r18, 0x00	; 0
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	a9 01       	movw	r20, r18
    1230:	da 01       	movw	r26, r20
    1232:	c9 01       	movw	r24, r18
    1234:	8f 77       	andi	r24, 0x7F	; 127
    1236:	90 70       	andi	r25, 0x00	; 0
    1238:	a0 70       	andi	r26, 0x00	; 0
    123a:	b0 70       	andi	r27, 0x00	; 0
    123c:	80 34       	cpi	r24, 0x40	; 64
    123e:	91 05       	cpc	r25, r1
    1240:	a1 05       	cpc	r26, r1
    1242:	b1 05       	cpc	r27, r1
    1244:	39 f4       	brne	.+14     	; 0x1254 <__pack_f+0xe0>
    1246:	27 ff       	sbrs	r18, 7
    1248:	09 c0       	rjmp	.+18     	; 0x125c <__pack_f+0xe8>
    124a:	20 5c       	subi	r18, 0xC0	; 192
    124c:	3f 4f       	sbci	r19, 0xFF	; 255
    124e:	4f 4f       	sbci	r20, 0xFF	; 255
    1250:	5f 4f       	sbci	r21, 0xFF	; 255
    1252:	04 c0       	rjmp	.+8      	; 0x125c <__pack_f+0xe8>
    1254:	21 5c       	subi	r18, 0xC1	; 193
    1256:	3f 4f       	sbci	r19, 0xFF	; 255
    1258:	4f 4f       	sbci	r20, 0xFF	; 255
    125a:	5f 4f       	sbci	r21, 0xFF	; 255
    125c:	e1 e0       	ldi	r30, 0x01	; 1
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	20 30       	cpi	r18, 0x00	; 0
    1262:	80 e0       	ldi	r24, 0x00	; 0
    1264:	38 07       	cpc	r19, r24
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	48 07       	cpc	r20, r24
    126a:	80 e4       	ldi	r24, 0x40	; 64
    126c:	58 07       	cpc	r21, r24
    126e:	28 f5       	brcc	.+74     	; 0x12ba <__pack_f+0x146>
    1270:	e0 e0       	ldi	r30, 0x00	; 0
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	22 c0       	rjmp	.+68     	; 0x12ba <__pack_f+0x146>
    1276:	e0 38       	cpi	r30, 0x80	; 128
    1278:	f1 05       	cpc	r31, r1
    127a:	6c f5       	brge	.+90     	; 0x12d6 <__pack_f+0x162>
    127c:	e1 58       	subi	r30, 0x81	; 129
    127e:	ff 4f       	sbci	r31, 0xFF	; 255
    1280:	da 01       	movw	r26, r20
    1282:	c9 01       	movw	r24, r18
    1284:	8f 77       	andi	r24, 0x7F	; 127
    1286:	90 70       	andi	r25, 0x00	; 0
    1288:	a0 70       	andi	r26, 0x00	; 0
    128a:	b0 70       	andi	r27, 0x00	; 0
    128c:	80 34       	cpi	r24, 0x40	; 64
    128e:	91 05       	cpc	r25, r1
    1290:	a1 05       	cpc	r26, r1
    1292:	b1 05       	cpc	r27, r1
    1294:	39 f4       	brne	.+14     	; 0x12a4 <__pack_f+0x130>
    1296:	27 ff       	sbrs	r18, 7
    1298:	09 c0       	rjmp	.+18     	; 0x12ac <__pack_f+0x138>
    129a:	20 5c       	subi	r18, 0xC0	; 192
    129c:	3f 4f       	sbci	r19, 0xFF	; 255
    129e:	4f 4f       	sbci	r20, 0xFF	; 255
    12a0:	5f 4f       	sbci	r21, 0xFF	; 255
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <__pack_f+0x138>
    12a4:	21 5c       	subi	r18, 0xC1	; 193
    12a6:	3f 4f       	sbci	r19, 0xFF	; 255
    12a8:	4f 4f       	sbci	r20, 0xFF	; 255
    12aa:	5f 4f       	sbci	r21, 0xFF	; 255
    12ac:	57 ff       	sbrs	r21, 7
    12ae:	05 c0       	rjmp	.+10     	; 0x12ba <__pack_f+0x146>
    12b0:	56 95       	lsr	r21
    12b2:	47 95       	ror	r20
    12b4:	37 95       	ror	r19
    12b6:	27 95       	ror	r18
    12b8:	31 96       	adiw	r30, 0x01	; 1
    12ba:	87 e0       	ldi	r24, 0x07	; 7
    12bc:	56 95       	lsr	r21
    12be:	47 95       	ror	r20
    12c0:	37 95       	ror	r19
    12c2:	27 95       	ror	r18
    12c4:	8a 95       	dec	r24
    12c6:	d1 f7       	brne	.-12     	; 0x12bc <__pack_f+0x148>
    12c8:	0b c0       	rjmp	.+22     	; 0x12e0 <__pack_f+0x16c>
    12ca:	e0 e0       	ldi	r30, 0x00	; 0
    12cc:	f0 e0       	ldi	r31, 0x00	; 0
    12ce:	05 c0       	rjmp	.+10     	; 0x12da <__pack_f+0x166>
    12d0:	e0 e0       	ldi	r30, 0x00	; 0
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	05 c0       	rjmp	.+10     	; 0x12e0 <__pack_f+0x16c>
    12d6:	ef ef       	ldi	r30, 0xFF	; 255
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	20 e0       	ldi	r18, 0x00	; 0
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	a9 01       	movw	r20, r18
    12e0:	8e 2f       	mov	r24, r30
    12e2:	87 95       	ror	r24
    12e4:	88 27       	eor	r24, r24
    12e6:	87 95       	ror	r24
    12e8:	94 2f       	mov	r25, r20
    12ea:	9f 77       	andi	r25, 0x7F	; 127
    12ec:	67 95       	ror	r22
    12ee:	66 27       	eor	r22, r22
    12f0:	67 95       	ror	r22
    12f2:	e6 95       	lsr	r30
    12f4:	e2 2e       	mov	r14, r18
    12f6:	a9 2f       	mov	r26, r25
    12f8:	a8 2b       	or	r26, r24
    12fa:	fe 2f       	mov	r31, r30
    12fc:	f6 2b       	or	r31, r22
    12fe:	62 2f       	mov	r22, r18
    1300:	73 2f       	mov	r23, r19
    1302:	8a 2f       	mov	r24, r26
    1304:	9f 2f       	mov	r25, r31
    1306:	cd b7       	in	r28, 0x3d	; 61
    1308:	de b7       	in	r29, 0x3e	; 62
    130a:	e6 e0       	ldi	r30, 0x06	; 6
    130c:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x18>

00001310 <__unpack_f>:
    1310:	dc 01       	movw	r26, r24
    1312:	fb 01       	movw	r30, r22
    1314:	2c 91       	ld	r18, X
    1316:	11 96       	adiw	r26, 0x01	; 1
    1318:	3c 91       	ld	r19, X
    131a:	11 97       	sbiw	r26, 0x01	; 1
    131c:	12 96       	adiw	r26, 0x02	; 2
    131e:	8c 91       	ld	r24, X
    1320:	12 97       	sbiw	r26, 0x02	; 2
    1322:	48 2f       	mov	r20, r24
    1324:	4f 77       	andi	r20, 0x7F	; 127
    1326:	50 e0       	ldi	r21, 0x00	; 0
    1328:	98 2f       	mov	r25, r24
    132a:	99 1f       	adc	r25, r25
    132c:	99 27       	eor	r25, r25
    132e:	99 1f       	adc	r25, r25
    1330:	13 96       	adiw	r26, 0x03	; 3
    1332:	6c 91       	ld	r22, X
    1334:	13 97       	sbiw	r26, 0x03	; 3
    1336:	86 2f       	mov	r24, r22
    1338:	88 0f       	add	r24, r24
    133a:	89 2b       	or	r24, r25
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	66 1f       	adc	r22, r22
    1340:	66 27       	eor	r22, r22
    1342:	66 1f       	adc	r22, r22
    1344:	61 83       	std	Z+1, r22	; 0x01
    1346:	00 97       	sbiw	r24, 0x00	; 0
    1348:	39 f5       	brne	.+78     	; 0x1398 <__unpack_f+0x88>
    134a:	21 15       	cp	r18, r1
    134c:	31 05       	cpc	r19, r1
    134e:	41 05       	cpc	r20, r1
    1350:	51 05       	cpc	r21, r1
    1352:	11 f4       	brne	.+4      	; 0x1358 <__unpack_f+0x48>
    1354:	82 e0       	ldi	r24, 0x02	; 2
    1356:	29 c0       	rjmp	.+82     	; 0x13aa <__unpack_f+0x9a>
    1358:	82 e8       	ldi	r24, 0x82	; 130
    135a:	9f ef       	ldi	r25, 0xFF	; 255
    135c:	93 83       	std	Z+3, r25	; 0x03
    135e:	82 83       	std	Z+2, r24	; 0x02
    1360:	67 e0       	ldi	r22, 0x07	; 7
    1362:	22 0f       	add	r18, r18
    1364:	33 1f       	adc	r19, r19
    1366:	44 1f       	adc	r20, r20
    1368:	55 1f       	adc	r21, r21
    136a:	6a 95       	dec	r22
    136c:	d1 f7       	brne	.-12     	; 0x1362 <__unpack_f+0x52>
    136e:	83 e0       	ldi	r24, 0x03	; 3
    1370:	80 83       	st	Z, r24
    1372:	09 c0       	rjmp	.+18     	; 0x1386 <__unpack_f+0x76>
    1374:	22 0f       	add	r18, r18
    1376:	33 1f       	adc	r19, r19
    1378:	44 1f       	adc	r20, r20
    137a:	55 1f       	adc	r21, r21
    137c:	82 81       	ldd	r24, Z+2	; 0x02
    137e:	93 81       	ldd	r25, Z+3	; 0x03
    1380:	01 97       	sbiw	r24, 0x01	; 1
    1382:	93 83       	std	Z+3, r25	; 0x03
    1384:	82 83       	std	Z+2, r24	; 0x02
    1386:	20 30       	cpi	r18, 0x00	; 0
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	38 07       	cpc	r19, r24
    138c:	80 e0       	ldi	r24, 0x00	; 0
    138e:	48 07       	cpc	r20, r24
    1390:	80 e4       	ldi	r24, 0x40	; 64
    1392:	58 07       	cpc	r21, r24
    1394:	78 f3       	brcs	.-34     	; 0x1374 <__unpack_f+0x64>
    1396:	20 c0       	rjmp	.+64     	; 0x13d8 <__unpack_f+0xc8>
    1398:	8f 3f       	cpi	r24, 0xFF	; 255
    139a:	91 05       	cpc	r25, r1
    139c:	79 f4       	brne	.+30     	; 0x13bc <__unpack_f+0xac>
    139e:	21 15       	cp	r18, r1
    13a0:	31 05       	cpc	r19, r1
    13a2:	41 05       	cpc	r20, r1
    13a4:	51 05       	cpc	r21, r1
    13a6:	19 f4       	brne	.+6      	; 0x13ae <__unpack_f+0x9e>
    13a8:	84 e0       	ldi	r24, 0x04	; 4
    13aa:	80 83       	st	Z, r24
    13ac:	08 95       	ret
    13ae:	44 ff       	sbrs	r20, 4
    13b0:	03 c0       	rjmp	.+6      	; 0x13b8 <__unpack_f+0xa8>
    13b2:	81 e0       	ldi	r24, 0x01	; 1
    13b4:	80 83       	st	Z, r24
    13b6:	10 c0       	rjmp	.+32     	; 0x13d8 <__unpack_f+0xc8>
    13b8:	10 82       	st	Z, r1
    13ba:	0e c0       	rjmp	.+28     	; 0x13d8 <__unpack_f+0xc8>
    13bc:	8f 57       	subi	r24, 0x7F	; 127
    13be:	90 40       	sbci	r25, 0x00	; 0
    13c0:	93 83       	std	Z+3, r25	; 0x03
    13c2:	82 83       	std	Z+2, r24	; 0x02
    13c4:	83 e0       	ldi	r24, 0x03	; 3
    13c6:	80 83       	st	Z, r24
    13c8:	87 e0       	ldi	r24, 0x07	; 7
    13ca:	22 0f       	add	r18, r18
    13cc:	33 1f       	adc	r19, r19
    13ce:	44 1f       	adc	r20, r20
    13d0:	55 1f       	adc	r21, r21
    13d2:	8a 95       	dec	r24
    13d4:	d1 f7       	brne	.-12     	; 0x13ca <__unpack_f+0xba>
    13d6:	50 64       	ori	r21, 0x40	; 64
    13d8:	24 83       	std	Z+4, r18	; 0x04
    13da:	35 83       	std	Z+5, r19	; 0x05
    13dc:	46 83       	std	Z+6, r20	; 0x06
    13de:	57 83       	std	Z+7, r21	; 0x07
    13e0:	08 95       	ret

000013e2 <__fpcmp_parts_f>:
    13e2:	fc 01       	movw	r30, r24
    13e4:	db 01       	movw	r26, r22
    13e6:	90 81       	ld	r25, Z
    13e8:	92 30       	cpi	r25, 0x02	; 2
    13ea:	08 f4       	brcc	.+2      	; 0x13ee <__fpcmp_parts_f+0xc>
    13ec:	49 c0       	rjmp	.+146    	; 0x1480 <__fpcmp_parts_f+0x9e>
    13ee:	8c 91       	ld	r24, X
    13f0:	82 30       	cpi	r24, 0x02	; 2
    13f2:	08 f4       	brcc	.+2      	; 0x13f6 <__fpcmp_parts_f+0x14>
    13f4:	45 c0       	rjmp	.+138    	; 0x1480 <__fpcmp_parts_f+0x9e>
    13f6:	94 30       	cpi	r25, 0x04	; 4
    13f8:	51 f4       	brne	.+20     	; 0x140e <__fpcmp_parts_f+0x2c>
    13fa:	61 81       	ldd	r22, Z+1	; 0x01
    13fc:	84 30       	cpi	r24, 0x04	; 4
    13fe:	b1 f5       	brne	.+108    	; 0x146c <__fpcmp_parts_f+0x8a>
    1400:	11 96       	adiw	r26, 0x01	; 1
    1402:	2c 91       	ld	r18, X
    1404:	11 97       	sbiw	r26, 0x01	; 1
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	26 1b       	sub	r18, r22
    140a:	31 09       	sbc	r19, r1
    140c:	41 c0       	rjmp	.+130    	; 0x1490 <__fpcmp_parts_f+0xae>
    140e:	84 30       	cpi	r24, 0x04	; 4
    1410:	21 f0       	breq	.+8      	; 0x141a <__fpcmp_parts_f+0x38>
    1412:	92 30       	cpi	r25, 0x02	; 2
    1414:	41 f4       	brne	.+16     	; 0x1426 <__fpcmp_parts_f+0x44>
    1416:	82 30       	cpi	r24, 0x02	; 2
    1418:	b1 f1       	breq	.+108    	; 0x1486 <__fpcmp_parts_f+0xa4>
    141a:	11 96       	adiw	r26, 0x01	; 1
    141c:	8c 91       	ld	r24, X
    141e:	11 97       	sbiw	r26, 0x01	; 1
    1420:	88 23       	and	r24, r24
    1422:	a1 f1       	breq	.+104    	; 0x148c <__fpcmp_parts_f+0xaa>
    1424:	2d c0       	rjmp	.+90     	; 0x1480 <__fpcmp_parts_f+0x9e>
    1426:	61 81       	ldd	r22, Z+1	; 0x01
    1428:	82 30       	cpi	r24, 0x02	; 2
    142a:	01 f1       	breq	.+64     	; 0x146c <__fpcmp_parts_f+0x8a>
    142c:	11 96       	adiw	r26, 0x01	; 1
    142e:	8c 91       	ld	r24, X
    1430:	11 97       	sbiw	r26, 0x01	; 1
    1432:	68 17       	cp	r22, r24
    1434:	d9 f4       	brne	.+54     	; 0x146c <__fpcmp_parts_f+0x8a>
    1436:	22 81       	ldd	r18, Z+2	; 0x02
    1438:	33 81       	ldd	r19, Z+3	; 0x03
    143a:	12 96       	adiw	r26, 0x02	; 2
    143c:	8d 91       	ld	r24, X+
    143e:	9c 91       	ld	r25, X
    1440:	13 97       	sbiw	r26, 0x03	; 3
    1442:	82 17       	cp	r24, r18
    1444:	93 07       	cpc	r25, r19
    1446:	94 f0       	brlt	.+36     	; 0x146c <__fpcmp_parts_f+0x8a>
    1448:	28 17       	cp	r18, r24
    144a:	39 07       	cpc	r19, r25
    144c:	bc f0       	brlt	.+46     	; 0x147c <__fpcmp_parts_f+0x9a>
    144e:	24 81       	ldd	r18, Z+4	; 0x04
    1450:	35 81       	ldd	r19, Z+5	; 0x05
    1452:	46 81       	ldd	r20, Z+6	; 0x06
    1454:	57 81       	ldd	r21, Z+7	; 0x07
    1456:	14 96       	adiw	r26, 0x04	; 4
    1458:	8d 91       	ld	r24, X+
    145a:	9d 91       	ld	r25, X+
    145c:	0d 90       	ld	r0, X+
    145e:	bc 91       	ld	r27, X
    1460:	a0 2d       	mov	r26, r0
    1462:	82 17       	cp	r24, r18
    1464:	93 07       	cpc	r25, r19
    1466:	a4 07       	cpc	r26, r20
    1468:	b5 07       	cpc	r27, r21
    146a:	18 f4       	brcc	.+6      	; 0x1472 <__fpcmp_parts_f+0x90>
    146c:	66 23       	and	r22, r22
    146e:	41 f0       	breq	.+16     	; 0x1480 <__fpcmp_parts_f+0x9e>
    1470:	0d c0       	rjmp	.+26     	; 0x148c <__fpcmp_parts_f+0xaa>
    1472:	28 17       	cp	r18, r24
    1474:	39 07       	cpc	r19, r25
    1476:	4a 07       	cpc	r20, r26
    1478:	5b 07       	cpc	r21, r27
    147a:	28 f4       	brcc	.+10     	; 0x1486 <__fpcmp_parts_f+0xa4>
    147c:	66 23       	and	r22, r22
    147e:	31 f0       	breq	.+12     	; 0x148c <__fpcmp_parts_f+0xaa>
    1480:	21 e0       	ldi	r18, 0x01	; 1
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	05 c0       	rjmp	.+10     	; 0x1490 <__fpcmp_parts_f+0xae>
    1486:	20 e0       	ldi	r18, 0x00	; 0
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <__fpcmp_parts_f+0xae>
    148c:	2f ef       	ldi	r18, 0xFF	; 255
    148e:	3f ef       	ldi	r19, 0xFF	; 255
    1490:	c9 01       	movw	r24, r18
    1492:	08 95       	ret

00001494 <__prologue_saves__>:
    1494:	2f 92       	push	r2
    1496:	3f 92       	push	r3
    1498:	4f 92       	push	r4
    149a:	5f 92       	push	r5
    149c:	6f 92       	push	r6
    149e:	7f 92       	push	r7
    14a0:	8f 92       	push	r8
    14a2:	9f 92       	push	r9
    14a4:	af 92       	push	r10
    14a6:	bf 92       	push	r11
    14a8:	cf 92       	push	r12
    14aa:	df 92       	push	r13
    14ac:	ef 92       	push	r14
    14ae:	ff 92       	push	r15
    14b0:	0f 93       	push	r16
    14b2:	1f 93       	push	r17
    14b4:	cf 93       	push	r28
    14b6:	df 93       	push	r29
    14b8:	cd b7       	in	r28, 0x3d	; 61
    14ba:	de b7       	in	r29, 0x3e	; 62
    14bc:	ca 1b       	sub	r28, r26
    14be:	db 0b       	sbc	r29, r27
    14c0:	0f b6       	in	r0, 0x3f	; 63
    14c2:	f8 94       	cli
    14c4:	de bf       	out	0x3e, r29	; 62
    14c6:	0f be       	out	0x3f, r0	; 63
    14c8:	cd bf       	out	0x3d, r28	; 61
    14ca:	09 94       	ijmp

000014cc <__epilogue_restores__>:
    14cc:	2a 88       	ldd	r2, Y+18	; 0x12
    14ce:	39 88       	ldd	r3, Y+17	; 0x11
    14d0:	48 88       	ldd	r4, Y+16	; 0x10
    14d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    14d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    14d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    14d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    14da:	9b 84       	ldd	r9, Y+11	; 0x0b
    14dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    14de:	b9 84       	ldd	r11, Y+9	; 0x09
    14e0:	c8 84       	ldd	r12, Y+8	; 0x08
    14e2:	df 80       	ldd	r13, Y+7	; 0x07
    14e4:	ee 80       	ldd	r14, Y+6	; 0x06
    14e6:	fd 80       	ldd	r15, Y+5	; 0x05
    14e8:	0c 81       	ldd	r16, Y+4	; 0x04
    14ea:	1b 81       	ldd	r17, Y+3	; 0x03
    14ec:	aa 81       	ldd	r26, Y+2	; 0x02
    14ee:	b9 81       	ldd	r27, Y+1	; 0x01
    14f0:	ce 0f       	add	r28, r30
    14f2:	d1 1d       	adc	r29, r1
    14f4:	0f b6       	in	r0, 0x3f	; 63
    14f6:	f8 94       	cli
    14f8:	de bf       	out	0x3e, r29	; 62
    14fa:	0f be       	out	0x3f, r0	; 63
    14fc:	cd bf       	out	0x3d, r28	; 61
    14fe:	ed 01       	movw	r28, r26
    1500:	08 95       	ret

00001502 <_exit>:
    1502:	f8 94       	cli

00001504 <__stop_program>:
    1504:	ff cf       	rjmp	.-2      	; 0x1504 <__stop_program>
