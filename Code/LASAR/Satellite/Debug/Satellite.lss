
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001444  000014d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001444  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010c  0080010c  000014e4  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000014e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00001c35  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000278  00000000  00000000  00001dd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000241d  00000000  00000000  0000204d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000117f  00000000  00000000  0000446a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000186f  00000000  00000000  000055e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  00006e58  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000475  00000000  00000000  00007098  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  0000750d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000062c  00000000  00000000  00008132  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  0000875e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 a2 03 	jmp	0x744	; 0x744 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 46 02 	jmp	0x48c	; 0x48c <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 e4       	ldi	r30, 0x44	; 68
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 30       	cpi	r26, 0x0F	; 15
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile unsigned int count = 0;
volatile uint8_t rxflag = 0;
volatile uint8_t zerocross = 1;

int main(void)
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	a0 97       	sbiw	r28, 0x20	; 32
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	DDRB = (1<<PORTB0);
      be:	84 e2       	ldi	r24, 0x24	; 36
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
	DDRC = 0xFF;
      c8:	87 e2       	ldi	r24, 0x27	; 39
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	2f ef       	ldi	r18, 0xFF	; 255
      ce:	fc 01       	movw	r30, r24
      d0:	20 83       	st	Z, r18
	//DDRB = (1 << PORTD6);
	DDRD = (1 << PORTD3);
      d2:	8a e2       	ldi	r24, 0x2A	; 42
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	28 e0       	ldi	r18, 0x08	; 8
      d8:	fc 01       	movw	r30, r24
      da:	20 83       	st	Z, r18
	DDRD &= ~(1 << PORTD2);
      dc:	8a e2       	ldi	r24, 0x2A	; 42
      de:	90 e0       	ldi	r25, 0x00	; 0
      e0:	2a e2       	ldi	r18, 0x2A	; 42
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	f9 01       	movw	r30, r18
      e6:	20 81       	ld	r18, Z
      e8:	2b 7f       	andi	r18, 0xFB	; 251
      ea:	fc 01       	movw	r30, r24
      ec:	20 83       	st	Z, r18
	PORTB &= ~(1 << PORTB0);
      ee:	85 e2       	ldi	r24, 0x25	; 37
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	25 e2       	ldi	r18, 0x25	; 37
      f4:	30 e0       	ldi	r19, 0x00	; 0
      f6:	f9 01       	movw	r30, r18
      f8:	20 81       	ld	r18, Z
      fa:	2e 7f       	andi	r18, 0xFE	; 254
      fc:	fc 01       	movw	r30, r24
      fe:	20 83       	st	Z, r18
	//PORTD &= (1 << PORTD6);
	
	initTimer(65);
     100:	81 e4       	ldi	r24, 0x41	; 65
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	0e 94 d6 01 	call	0x3ac	; 0x3ac <initTimer>
	initInterrupt0();
     108:	0e 94 15 02 	call	0x42a	; 0x42a <initInterrupt0>
	dim = 10;
     10c:	8a e0       	ldi	r24, 0x0A	; 10
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	90 93 01 01 	sts	0x0101, r25
     114:	80 93 00 01 	sts	0x0100, r24
	
	// turn on interrupts
	sei();
     118:	78 94       	sei
	
	while(1)
	{
		for( int j = 1; j < 90; ++j )
     11a:	81 e0       	ldi	r24, 0x01	; 1
     11c:	90 e0       	ldi	r25, 0x00	; 0
     11e:	9a 83       	std	Y+2, r25	; 0x02
     120:	89 83       	std	Y+1, r24	; 0x01
     122:	99 c0       	rjmp	.+306    	; 0x256 <main+0x1b0>
		{
			PORTD |= (1 << PORTD3);
     124:	8b e2       	ldi	r24, 0x2B	; 43
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	2b e2       	ldi	r18, 0x2B	; 43
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	f9 01       	movw	r30, r18
     12e:	20 81       	ld	r18, Z
     130:	28 60       	ori	r18, 0x08	; 8
     132:	fc 01       	movw	r30, r24
     134:	20 83       	st	Z, r18
			dim = j;
     136:	89 81       	ldd	r24, Y+1	; 0x01
     138:	9a 81       	ldd	r25, Y+2	; 0x02
     13a:	90 93 01 01 	sts	0x0101, r25
     13e:	80 93 00 01 	sts	0x0100, r24
			PORTC = j;
     142:	88 e2       	ldi	r24, 0x28	; 40
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	29 81       	ldd	r18, Y+1	; 0x01
     148:	fc 01       	movw	r30, r24
     14a:	20 83       	st	Z, r18
     14c:	80 e0       	ldi	r24, 0x00	; 0
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	a0 e2       	ldi	r26, 0x20	; 32
     152:	b2 e4       	ldi	r27, 0x42	; 66
     154:	8d 83       	std	Y+5, r24	; 0x05
     156:	9e 83       	std	Y+6, r25	; 0x06
     158:	af 83       	std	Y+7, r26	; 0x07
     15a:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     15c:	6d 81       	ldd	r22, Y+5	; 0x05
     15e:	7e 81       	ldd	r23, Y+6	; 0x06
     160:	8f 81       	ldd	r24, Y+7	; 0x07
     162:	98 85       	ldd	r25, Y+8	; 0x08
     164:	20 e0       	ldi	r18, 0x00	; 0
     166:	30 e0       	ldi	r19, 0x00	; 0
     168:	4a e7       	ldi	r20, 0x7A	; 122
     16a:	55 e4       	ldi	r21, 0x45	; 69
     16c:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__mulsf3>
     170:	dc 01       	movw	r26, r24
     172:	cb 01       	movw	r24, r22
     174:	89 87       	std	Y+9, r24	; 0x09
     176:	9a 87       	std	Y+10, r25	; 0x0a
     178:	ab 87       	std	Y+11, r26	; 0x0b
     17a:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     17c:	11 e0       	ldi	r17, 0x01	; 1
     17e:	69 85       	ldd	r22, Y+9	; 0x09
     180:	7a 85       	ldd	r23, Y+10	; 0x0a
     182:	8b 85       	ldd	r24, Y+11	; 0x0b
     184:	9c 85       	ldd	r25, Y+12	; 0x0c
     186:	20 e0       	ldi	r18, 0x00	; 0
     188:	30 e0       	ldi	r19, 0x00	; 0
     18a:	40 e8       	ldi	r20, 0x80	; 128
     18c:	5f e3       	ldi	r21, 0x3F	; 63
     18e:	0e 94 d7 07 	call	0xfae	; 0xfae <__ltsf2>
     192:	88 23       	and	r24, r24
     194:	0c f0       	brlt	.+2      	; 0x198 <main+0xf2>
     196:	10 e0       	ldi	r17, 0x00	; 0
     198:	11 23       	and	r17, r17
     19a:	29 f0       	breq	.+10     	; 0x1a6 <main+0x100>
		__ticks = 1;
     19c:	81 e0       	ldi	r24, 0x01	; 1
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	9e 87       	std	Y+14, r25	; 0x0e
     1a2:	8d 87       	std	Y+13, r24	; 0x0d
     1a4:	46 c0       	rjmp	.+140    	; 0x232 <main+0x18c>
	else if (__tmp > 65535)
     1a6:	11 e0       	ldi	r17, 0x01	; 1
     1a8:	69 85       	ldd	r22, Y+9	; 0x09
     1aa:	7a 85       	ldd	r23, Y+10	; 0x0a
     1ac:	8b 85       	ldd	r24, Y+11	; 0x0b
     1ae:	9c 85       	ldd	r25, Y+12	; 0x0c
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	3f ef       	ldi	r19, 0xFF	; 255
     1b4:	4f e7       	ldi	r20, 0x7F	; 127
     1b6:	57 e4       	ldi	r21, 0x47	; 71
     1b8:	0e 94 77 07 	call	0xeee	; 0xeee <__gtsf2>
     1bc:	18 16       	cp	r1, r24
     1be:	0c f0       	brlt	.+2      	; 0x1c2 <main+0x11c>
     1c0:	10 e0       	ldi	r17, 0x00	; 0
     1c2:	11 23       	and	r17, r17
     1c4:	61 f1       	breq	.+88     	; 0x21e <main+0x178>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1c6:	6d 81       	ldd	r22, Y+5	; 0x05
     1c8:	7e 81       	ldd	r23, Y+6	; 0x06
     1ca:	8f 81       	ldd	r24, Y+7	; 0x07
     1cc:	98 85       	ldd	r25, Y+8	; 0x08
     1ce:	20 e0       	ldi	r18, 0x00	; 0
     1d0:	30 e0       	ldi	r19, 0x00	; 0
     1d2:	40 e2       	ldi	r20, 0x20	; 32
     1d4:	51 e4       	ldi	r21, 0x41	; 65
     1d6:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__mulsf3>
     1da:	dc 01       	movw	r26, r24
     1dc:	cb 01       	movw	r24, r22
     1de:	bc 01       	movw	r22, r24
     1e0:	cd 01       	movw	r24, r26
     1e2:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     1e6:	dc 01       	movw	r26, r24
     1e8:	cb 01       	movw	r24, r22
     1ea:	9e 87       	std	Y+14, r25	; 0x0e
     1ec:	8d 87       	std	Y+13, r24	; 0x0d
     1ee:	12 c0       	rjmp	.+36     	; 0x214 <main+0x16e>
     1f0:	80 e9       	ldi	r24, 0x90	; 144
     1f2:	91 e0       	ldi	r25, 0x01	; 1
     1f4:	98 8b       	std	Y+16, r25	; 0x10
     1f6:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1f8:	8f 85       	ldd	r24, Y+15	; 0x0f
     1fa:	98 89       	ldd	r25, Y+16	; 0x10
     1fc:	8c 01       	movw	r16, r24
     1fe:	c8 01       	movw	r24, r16
     200:	01 97       	sbiw	r24, 0x01	; 1
     202:	f1 f7       	brne	.-4      	; 0x200 <main+0x15a>
     204:	8c 01       	movw	r16, r24
     206:	18 8b       	std	Y+16, r17	; 0x10
     208:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     20a:	8d 85       	ldd	r24, Y+13	; 0x0d
     20c:	9e 85       	ldd	r25, Y+14	; 0x0e
     20e:	01 97       	sbiw	r24, 0x01	; 1
     210:	9e 87       	std	Y+14, r25	; 0x0e
     212:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     214:	8d 85       	ldd	r24, Y+13	; 0x0d
     216:	9e 85       	ldd	r25, Y+14	; 0x0e
     218:	00 97       	sbiw	r24, 0x00	; 0
     21a:	51 f7       	brne	.-44     	; 0x1f0 <main+0x14a>
     21c:	17 c0       	rjmp	.+46     	; 0x24c <main+0x1a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     21e:	69 85       	ldd	r22, Y+9	; 0x09
     220:	7a 85       	ldd	r23, Y+10	; 0x0a
     222:	8b 85       	ldd	r24, Y+11	; 0x0b
     224:	9c 85       	ldd	r25, Y+12	; 0x0c
     226:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     22a:	dc 01       	movw	r26, r24
     22c:	cb 01       	movw	r24, r22
     22e:	9e 87       	std	Y+14, r25	; 0x0e
     230:	8d 87       	std	Y+13, r24	; 0x0d
     232:	8d 85       	ldd	r24, Y+13	; 0x0d
     234:	9e 85       	ldd	r25, Y+14	; 0x0e
     236:	9a 8b       	std	Y+18, r25	; 0x12
     238:	89 8b       	std	Y+17, r24	; 0x11
     23a:	89 89       	ldd	r24, Y+17	; 0x11
     23c:	9a 89       	ldd	r25, Y+18	; 0x12
     23e:	8c 01       	movw	r16, r24
     240:	f8 01       	movw	r30, r16
     242:	31 97       	sbiw	r30, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <main+0x19c>
     246:	8f 01       	movw	r16, r30
     248:	1a 8b       	std	Y+18, r17	; 0x12
     24a:	09 8b       	std	Y+17, r16	; 0x11
	// turn on interrupts
	sei();
	
	while(1)
	{
		for( int j = 1; j < 90; ++j )
     24c:	89 81       	ldd	r24, Y+1	; 0x01
     24e:	9a 81       	ldd	r25, Y+2	; 0x02
     250:	01 96       	adiw	r24, 0x01	; 1
     252:	9a 83       	std	Y+2, r25	; 0x02
     254:	89 83       	std	Y+1, r24	; 0x01
     256:	89 81       	ldd	r24, Y+1	; 0x01
     258:	9a 81       	ldd	r25, Y+2	; 0x02
     25a:	8a 35       	cpi	r24, 0x5A	; 90
     25c:	91 05       	cpc	r25, r1
     25e:	0c f4       	brge	.+2      	; 0x262 <main+0x1bc>
     260:	61 cf       	rjmp	.-318    	; 0x124 <main+0x7e>
			PORTD |= (1 << PORTD3);
			dim = j;
			PORTC = j;
			_delay_ms(40);
		}
		for( int j = 90; j > 1; --j)
     262:	8a e5       	ldi	r24, 0x5A	; 90
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	9c 83       	std	Y+4, r25	; 0x04
     268:	8b 83       	std	Y+3, r24	; 0x03
     26a:	99 c0       	rjmp	.+306    	; 0x39e <main+0x2f8>
		{
			PORTD &= ~(1 << PORTD3);
     26c:	8b e2       	ldi	r24, 0x2B	; 43
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	2b e2       	ldi	r18, 0x2B	; 43
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	f9 01       	movw	r30, r18
     276:	20 81       	ld	r18, Z
     278:	27 7f       	andi	r18, 0xF7	; 247
     27a:	fc 01       	movw	r30, r24
     27c:	20 83       	st	Z, r18
			dim = j;
     27e:	8b 81       	ldd	r24, Y+3	; 0x03
     280:	9c 81       	ldd	r25, Y+4	; 0x04
     282:	90 93 01 01 	sts	0x0101, r25
     286:	80 93 00 01 	sts	0x0100, r24
			PORTC = j;
     28a:	88 e2       	ldi	r24, 0x28	; 40
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	2b 81       	ldd	r18, Y+3	; 0x03
     290:	fc 01       	movw	r30, r24
     292:	20 83       	st	Z, r18
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	a0 e2       	ldi	r26, 0x20	; 32
     29a:	b2 e4       	ldi	r27, 0x42	; 66
     29c:	8b 8b       	std	Y+19, r24	; 0x13
     29e:	9c 8b       	std	Y+20, r25	; 0x14
     2a0:	ad 8b       	std	Y+21, r26	; 0x15
     2a2:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     2a4:	6b 89       	ldd	r22, Y+19	; 0x13
     2a6:	7c 89       	ldd	r23, Y+20	; 0x14
     2a8:	8d 89       	ldd	r24, Y+21	; 0x15
     2aa:	9e 89       	ldd	r25, Y+22	; 0x16
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	4a e7       	ldi	r20, 0x7A	; 122
     2b2:	55 e4       	ldi	r21, 0x45	; 69
     2b4:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__mulsf3>
     2b8:	dc 01       	movw	r26, r24
     2ba:	cb 01       	movw	r24, r22
     2bc:	8f 8b       	std	Y+23, r24	; 0x17
     2be:	98 8f       	std	Y+24, r25	; 0x18
     2c0:	a9 8f       	std	Y+25, r26	; 0x19
     2c2:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     2c4:	11 e0       	ldi	r17, 0x01	; 1
     2c6:	6f 89       	ldd	r22, Y+23	; 0x17
     2c8:	78 8d       	ldd	r23, Y+24	; 0x18
     2ca:	89 8d       	ldd	r24, Y+25	; 0x19
     2cc:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	40 e8       	ldi	r20, 0x80	; 128
     2d4:	5f e3       	ldi	r21, 0x3F	; 63
     2d6:	0e 94 d7 07 	call	0xfae	; 0xfae <__ltsf2>
     2da:	88 23       	and	r24, r24
     2dc:	0c f0       	brlt	.+2      	; 0x2e0 <main+0x23a>
     2de:	10 e0       	ldi	r17, 0x00	; 0
     2e0:	11 23       	and	r17, r17
     2e2:	29 f0       	breq	.+10     	; 0x2ee <main+0x248>
		__ticks = 1;
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	9c 8f       	std	Y+28, r25	; 0x1c
     2ea:	8b 8f       	std	Y+27, r24	; 0x1b
     2ec:	46 c0       	rjmp	.+140    	; 0x37a <main+0x2d4>
	else if (__tmp > 65535)
     2ee:	11 e0       	ldi	r17, 0x01	; 1
     2f0:	6f 89       	ldd	r22, Y+23	; 0x17
     2f2:	78 8d       	ldd	r23, Y+24	; 0x18
     2f4:	89 8d       	ldd	r24, Y+25	; 0x19
     2f6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	3f ef       	ldi	r19, 0xFF	; 255
     2fc:	4f e7       	ldi	r20, 0x7F	; 127
     2fe:	57 e4       	ldi	r21, 0x47	; 71
     300:	0e 94 77 07 	call	0xeee	; 0xeee <__gtsf2>
     304:	18 16       	cp	r1, r24
     306:	0c f0       	brlt	.+2      	; 0x30a <main+0x264>
     308:	10 e0       	ldi	r17, 0x00	; 0
     30a:	11 23       	and	r17, r17
     30c:	61 f1       	breq	.+88     	; 0x366 <main+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     30e:	6b 89       	ldd	r22, Y+19	; 0x13
     310:	7c 89       	ldd	r23, Y+20	; 0x14
     312:	8d 89       	ldd	r24, Y+21	; 0x15
     314:	9e 89       	ldd	r25, Y+22	; 0x16
     316:	20 e0       	ldi	r18, 0x00	; 0
     318:	30 e0       	ldi	r19, 0x00	; 0
     31a:	40 e2       	ldi	r20, 0x20	; 32
     31c:	51 e4       	ldi	r21, 0x41	; 65
     31e:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__mulsf3>
     322:	dc 01       	movw	r26, r24
     324:	cb 01       	movw	r24, r22
     326:	bc 01       	movw	r22, r24
     328:	cd 01       	movw	r24, r26
     32a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     32e:	dc 01       	movw	r26, r24
     330:	cb 01       	movw	r24, r22
     332:	9c 8f       	std	Y+28, r25	; 0x1c
     334:	8b 8f       	std	Y+27, r24	; 0x1b
     336:	12 c0       	rjmp	.+36     	; 0x35c <main+0x2b6>
     338:	80 e9       	ldi	r24, 0x90	; 144
     33a:	91 e0       	ldi	r25, 0x01	; 1
     33c:	9e 8f       	std	Y+30, r25	; 0x1e
     33e:	8d 8f       	std	Y+29, r24	; 0x1d
     340:	8d 8d       	ldd	r24, Y+29	; 0x1d
     342:	9e 8d       	ldd	r25, Y+30	; 0x1e
     344:	8c 01       	movw	r16, r24
     346:	c8 01       	movw	r24, r16
     348:	01 97       	sbiw	r24, 0x01	; 1
     34a:	f1 f7       	brne	.-4      	; 0x348 <main+0x2a2>
     34c:	8c 01       	movw	r16, r24
     34e:	1e 8f       	std	Y+30, r17	; 0x1e
     350:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     352:	8b 8d       	ldd	r24, Y+27	; 0x1b
     354:	9c 8d       	ldd	r25, Y+28	; 0x1c
     356:	01 97       	sbiw	r24, 0x01	; 1
     358:	9c 8f       	std	Y+28, r25	; 0x1c
     35a:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     35c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     35e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     360:	00 97       	sbiw	r24, 0x00	; 0
     362:	51 f7       	brne	.-44     	; 0x338 <main+0x292>
     364:	17 c0       	rjmp	.+46     	; 0x394 <main+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     366:	6f 89       	ldd	r22, Y+23	; 0x17
     368:	78 8d       	ldd	r23, Y+24	; 0x18
     36a:	89 8d       	ldd	r24, Y+25	; 0x19
     36c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     36e:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     372:	dc 01       	movw	r26, r24
     374:	cb 01       	movw	r24, r22
     376:	9c 8f       	std	Y+28, r25	; 0x1c
     378:	8b 8f       	std	Y+27, r24	; 0x1b
     37a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     37c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     37e:	98 a3       	std	Y+32, r25	; 0x20
     380:	8f 8f       	std	Y+31, r24	; 0x1f
     382:	8f 8d       	ldd	r24, Y+31	; 0x1f
     384:	98 a1       	ldd	r25, Y+32	; 0x20
     386:	8c 01       	movw	r16, r24
     388:	f8 01       	movw	r30, r16
     38a:	31 97       	sbiw	r30, 0x01	; 1
     38c:	f1 f7       	brne	.-4      	; 0x38a <main+0x2e4>
     38e:	8f 01       	movw	r16, r30
     390:	18 a3       	std	Y+32, r17	; 0x20
     392:	0f 8f       	std	Y+31, r16	; 0x1f
			PORTD |= (1 << PORTD3);
			dim = j;
			PORTC = j;
			_delay_ms(40);
		}
		for( int j = 90; j > 1; --j)
     394:	8b 81       	ldd	r24, Y+3	; 0x03
     396:	9c 81       	ldd	r25, Y+4	; 0x04
     398:	01 97       	sbiw	r24, 0x01	; 1
     39a:	9c 83       	std	Y+4, r25	; 0x04
     39c:	8b 83       	std	Y+3, r24	; 0x03
     39e:	8b 81       	ldd	r24, Y+3	; 0x03
     3a0:	9c 81       	ldd	r25, Y+4	; 0x04
     3a2:	82 30       	cpi	r24, 0x02	; 2
     3a4:	91 05       	cpc	r25, r1
     3a6:	0c f0       	brlt	.+2      	; 0x3aa <main+0x304>
     3a8:	61 cf       	rjmp	.-318    	; 0x26c <main+0x1c6>
			PORTD &= ~(1 << PORTD3);
			dim = j;
			PORTC = j;
			_delay_ms(40);
		}
	}				
     3aa:	b7 ce       	rjmp	.-658    	; 0x11a <main+0x74>

000003ac <initTimer>:
/*
 * Function Name:
 * Author: Chris Williams
 */
void initTimer( int dutycycle )
{
     3ac:	df 93       	push	r29
     3ae:	cf 93       	push	r28
     3b0:	00 d0       	rcall	.+0      	; 0x3b2 <initTimer+0x6>
     3b2:	cd b7       	in	r28, 0x3d	; 61
     3b4:	de b7       	in	r29, 0x3e	; 62
     3b6:	9a 83       	std	Y+2, r25	; 0x02
     3b8:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = 130; //cap of Timer0
     3ba:	87 e4       	ldi	r24, 0x47	; 71
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	22 e8       	ldi	r18, 0x82	; 130
     3c0:	fc 01       	movw	r30, r24
     3c2:	20 83       	st	Z, r18
	OCR0B = dutycycle;
     3c4:	88 e4       	ldi	r24, 0x48	; 72
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	29 81       	ldd	r18, Y+1	; 0x01
     3ca:	fc 01       	movw	r30, r24
     3cc:	20 83       	st	Z, r18
	
    DDRD |= (1 << PORTD6);         
     3ce:	8a e2       	ldi	r24, 0x2A	; 42
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	2a e2       	ldi	r18, 0x2A	; 42
     3d4:	30 e0       	ldi	r19, 0x00	; 0
     3d6:	f9 01       	movw	r30, r18
     3d8:	20 81       	ld	r18, Z
     3da:	20 64       	ori	r18, 0x40	; 64
     3dc:	fc 01       	movw	r30, r24
     3de:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);
     3e0:	84 e4       	ldi	r24, 0x44	; 68
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	24 e4       	ldi	r18, 0x44	; 68
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	f9 01       	movw	r30, r18
     3ea:	20 81       	ld	r18, Z
     3ec:	20 68       	ori	r18, 0x80	; 128
     3ee:	fc 01       	movw	r30, r24
     3f0:	20 83       	st	Z, r18
    // set non-inverting mode

    TCCR0A |= (1 << WGM01);
     3f2:	84 e4       	ldi	r24, 0x44	; 68
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	24 e4       	ldi	r18, 0x44	; 68
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	f9 01       	movw	r30, r18
     3fc:	20 81       	ld	r18, Z
     3fe:	22 60       	ori	r18, 0x02	; 2
     400:	fc 01       	movw	r30, r24
     402:	20 83       	st	Z, r18
    // set CTC (Clear Timer on Compare) Mode

    TCCR0B |= (1 << CS01);
     404:	85 e4       	ldi	r24, 0x45	; 69
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	25 e4       	ldi	r18, 0x45	; 69
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	f9 01       	movw	r30, r18
     40e:	20 81       	ld	r18, Z
     410:	22 60       	ori	r18, 0x02	; 2
     412:	fc 01       	movw	r30, r24
     414:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0A) | (1 << TOIE0);
     416:	8e e6       	ldi	r24, 0x6E	; 110
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	23 e0       	ldi	r18, 0x03	; 3
     41c:	fc 01       	movw	r30, r24
     41e:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0B);
	//Enable COMPA
	*/
}
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	cf 91       	pop	r28
     426:	df 91       	pop	r29
     428:	08 95       	ret

0000042a <initInterrupt0>:


void initInterrupt0()
{
     42a:	df 93       	push	r29
     42c:	cf 93       	push	r28
     42e:	cd b7       	in	r28, 0x3d	; 61
     430:	de b7       	in	r29, 0x3e	; 62
	PORTD |= (1 << PORTD2);
     432:	8b e2       	ldi	r24, 0x2B	; 43
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	2b e2       	ldi	r18, 0x2B	; 43
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	f9 01       	movw	r30, r18
     43c:	20 81       	ld	r18, Z
     43e:	24 60       	ori	r18, 0x04	; 4
     440:	fc 01       	movw	r30, r24
     442:	20 83       	st	Z, r18
	EICRA = 0b00000010;
     444:	89 e6       	ldi	r24, 0x69	; 105
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	22 e0       	ldi	r18, 0x02	; 2
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
	EIMSK |= (1 << INT0);
     44e:	8d e3       	ldi	r24, 0x3D	; 61
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	2d e3       	ldi	r18, 0x3D	; 61
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	f9 01       	movw	r30, r18
     458:	20 81       	ld	r18, Z
     45a:	21 60       	ori	r18, 0x01	; 1
     45c:	fc 01       	movw	r30, r24
     45e:	20 83       	st	Z, r18
}	
     460:	cf 91       	pop	r28
     462:	df 91       	pop	r29
     464:	08 95       	ret

00000466 <setCycle>:


void setCycle(int dutycycle)
{
     466:	df 93       	push	r29
     468:	cf 93       	push	r28
     46a:	00 d0       	rcall	.+0      	; 0x46c <setCycle+0x6>
     46c:	cd b7       	in	r28, 0x3d	; 61
     46e:	de b7       	in	r29, 0x3e	; 62
     470:	9a 83       	std	Y+2, r25	; 0x02
     472:	89 83       	std	Y+1, r24	; 0x01
	cli();
     474:	f8 94       	cli
	OCR0A = dutycycle;
     476:	87 e4       	ldi	r24, 0x47	; 71
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	29 81       	ldd	r18, Y+1	; 0x01
     47c:	fc 01       	movw	r30, r24
     47e:	20 83       	st	Z, r18
	sei();
     480:	78 94       	sei
	return;
}
     482:	0f 90       	pop	r0
     484:	0f 90       	pop	r0
     486:	cf 91       	pop	r28
     488:	df 91       	pop	r29
     48a:	08 95       	ret

0000048c <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     48c:	1f 92       	push	r1
     48e:	0f 92       	push	r0
     490:	0f b6       	in	r0, 0x3f	; 63
     492:	0f 92       	push	r0
     494:	11 24       	eor	r1, r1
     496:	8f 93       	push	r24
     498:	9f 93       	push	r25
     49a:	ef 93       	push	r30
     49c:	ff 93       	push	r31
     49e:	df 93       	push	r29
     4a0:	cf 93       	push	r28
     4a2:	cd b7       	in	r28, 0x3d	; 61
     4a4:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1 << RXC0)) )
     4a6:	00 00       	nop
     4a8:	80 ec       	ldi	r24, 0xC0	; 192
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	fc 01       	movw	r30, r24
     4ae:	80 81       	ld	r24, Z
     4b0:	88 23       	and	r24, r24
     4b2:	d4 f7       	brge	.-12     	; 0x4a8 <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	//dim = UDR0;
	rxflag = 1;
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	80 93 0e 01 	sts	0x010E, r24
}
     4ba:	cf 91       	pop	r28
     4bc:	df 91       	pop	r29
     4be:	ff 91       	pop	r31
     4c0:	ef 91       	pop	r30
     4c2:	9f 91       	pop	r25
     4c4:	8f 91       	pop	r24
     4c6:	0f 90       	pop	r0
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	0f 90       	pop	r0
     4cc:	1f 90       	pop	r1
     4ce:	18 95       	reti

000004d0 <__vector_14>:
 
 
//OLD: 2/15/2012
//ISR(TIMER0_OVF_vect)
ISR(TIMER0_COMPA_vect)
{
     4d0:	1f 92       	push	r1
     4d2:	0f 92       	push	r0
     4d4:	0f b6       	in	r0, 0x3f	; 63
     4d6:	0f 92       	push	r0
     4d8:	11 24       	eor	r1, r1
     4da:	0f 93       	push	r16
     4dc:	1f 93       	push	r17
     4de:	2f 93       	push	r18
     4e0:	3f 93       	push	r19
     4e2:	4f 93       	push	r20
     4e4:	5f 93       	push	r21
     4e6:	6f 93       	push	r22
     4e8:	7f 93       	push	r23
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	af 93       	push	r26
     4f0:	bf 93       	push	r27
     4f2:	ef 93       	push	r30
     4f4:	ff 93       	push	r31
     4f6:	df 93       	push	r29
     4f8:	cf 93       	push	r28
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
     4fe:	68 97       	sbiw	r28, 0x18	; 24
     500:	de bf       	out	0x3e, r29	; 62
     502:	cd bf       	out	0x3d, r28	; 61
	if( zerocross == 1) 
     504:	80 91 02 01 	lds	r24, 0x0102
     508:	81 30       	cpi	r24, 0x01	; 1
     50a:	09 f0       	breq	.+2      	; 0x50e <__vector_14+0x3e>
     50c:	03 c1       	rjmp	.+518    	; 0x714 <__vector_14+0x244>
	{
		if( count >= dim )
     50e:	20 91 0c 01 	lds	r18, 0x010C
     512:	30 91 0d 01 	lds	r19, 0x010D
     516:	80 91 00 01 	lds	r24, 0x0100
     51a:	90 91 01 01 	lds	r25, 0x0101
     51e:	28 17       	cp	r18, r24
     520:	39 07       	cpc	r19, r25
     522:	08 f4       	brcc	.+2      	; 0x526 <__vector_14+0x56>
     524:	ee c0       	rjmp	.+476    	; 0x702 <__vector_14+0x232>
		{
			//PORTD |= (1 << PORTD6);
			PORTB |= (1 << PORTB0);
     526:	85 e2       	ldi	r24, 0x25	; 37
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	25 e2       	ldi	r18, 0x25	; 37
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	f9 01       	movw	r30, r18
     530:	20 81       	ld	r18, Z
     532:	21 60       	ori	r18, 0x01	; 1
     534:	fc 01       	movw	r30, r24
     536:	20 83       	st	Z, r18
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	a0 ea       	ldi	r26, 0xA0	; 160
     53e:	b0 e4       	ldi	r27, 0x40	; 64
     540:	89 83       	std	Y+1, r24	; 0x01
     542:	9a 83       	std	Y+2, r25	; 0x02
     544:	ab 83       	std	Y+3, r26	; 0x03
     546:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     548:	69 81       	ldd	r22, Y+1	; 0x01
     54a:	7a 81       	ldd	r23, Y+2	; 0x02
     54c:	8b 81       	ldd	r24, Y+3	; 0x03
     54e:	9c 81       	ldd	r25, Y+4	; 0x04
     550:	2b ea       	ldi	r18, 0xAB	; 171
     552:	3a ea       	ldi	r19, 0xAA	; 170
     554:	4a ea       	ldi	r20, 0xAA	; 170
     556:	50 e4       	ldi	r21, 0x40	; 64
     558:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__mulsf3>
     55c:	dc 01       	movw	r26, r24
     55e:	cb 01       	movw	r24, r22
     560:	8d 83       	std	Y+5, r24	; 0x05
     562:	9e 83       	std	Y+6, r25	; 0x06
     564:	af 83       	std	Y+7, r26	; 0x07
     566:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     568:	11 e0       	ldi	r17, 0x01	; 1
     56a:	6d 81       	ldd	r22, Y+5	; 0x05
     56c:	7e 81       	ldd	r23, Y+6	; 0x06
     56e:	8f 81       	ldd	r24, Y+7	; 0x07
     570:	98 85       	ldd	r25, Y+8	; 0x08
     572:	20 e0       	ldi	r18, 0x00	; 0
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	40 e8       	ldi	r20, 0x80	; 128
     578:	5f e3       	ldi	r21, 0x3F	; 63
     57a:	0e 94 d7 07 	call	0xfae	; 0xfae <__ltsf2>
     57e:	88 23       	and	r24, r24
     580:	0c f0       	brlt	.+2      	; 0x584 <__vector_14+0xb4>
     582:	10 e0       	ldi	r17, 0x00	; 0
     584:	11 23       	and	r17, r17
     586:	19 f0       	breq	.+6      	; 0x58e <__vector_14+0xbe>
		__ticks = 1;
     588:	81 e0       	ldi	r24, 0x01	; 1
     58a:	89 87       	std	Y+9, r24	; 0x09
     58c:	a3 c0       	rjmp	.+326    	; 0x6d4 <__vector_14+0x204>
	else if (__tmp > 255)
     58e:	11 e0       	ldi	r17, 0x01	; 1
     590:	6d 81       	ldd	r22, Y+5	; 0x05
     592:	7e 81       	ldd	r23, Y+6	; 0x06
     594:	8f 81       	ldd	r24, Y+7	; 0x07
     596:	98 85       	ldd	r25, Y+8	; 0x08
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	4f e7       	ldi	r20, 0x7F	; 127
     59e:	53 e4       	ldi	r21, 0x43	; 67
     5a0:	0e 94 77 07 	call	0xeee	; 0xeee <__gtsf2>
     5a4:	18 16       	cp	r1, r24
     5a6:	0c f0       	brlt	.+2      	; 0x5aa <__vector_14+0xda>
     5a8:	10 e0       	ldi	r17, 0x00	; 0
     5aa:	11 23       	and	r17, r17
     5ac:	09 f4       	brne	.+2      	; 0x5b0 <__vector_14+0xe0>
     5ae:	89 c0       	rjmp	.+274    	; 0x6c2 <__vector_14+0x1f2>
	{
		_delay_ms(__us / 1000.0);
     5b0:	69 81       	ldd	r22, Y+1	; 0x01
     5b2:	7a 81       	ldd	r23, Y+2	; 0x02
     5b4:	8b 81       	ldd	r24, Y+3	; 0x03
     5b6:	9c 81       	ldd	r25, Y+4	; 0x04
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	4a e7       	ldi	r20, 0x7A	; 122
     5be:	54 e4       	ldi	r21, 0x44	; 68
     5c0:	0e 94 c9 06 	call	0xd92	; 0xd92 <__divsf3>
     5c4:	dc 01       	movw	r26, r24
     5c6:	cb 01       	movw	r24, r22
     5c8:	8a 87       	std	Y+10, r24	; 0x0a
     5ca:	9b 87       	std	Y+11, r25	; 0x0b
     5cc:	ac 87       	std	Y+12, r26	; 0x0c
     5ce:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5d0:	6a 85       	ldd	r22, Y+10	; 0x0a
     5d2:	7b 85       	ldd	r23, Y+11	; 0x0b
     5d4:	8c 85       	ldd	r24, Y+12	; 0x0c
     5d6:	9d 85       	ldd	r25, Y+13	; 0x0d
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	4a e7       	ldi	r20, 0x7A	; 122
     5de:	55 e4       	ldi	r21, 0x45	; 69
     5e0:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__mulsf3>
     5e4:	dc 01       	movw	r26, r24
     5e6:	cb 01       	movw	r24, r22
     5e8:	8e 87       	std	Y+14, r24	; 0x0e
     5ea:	9f 87       	std	Y+15, r25	; 0x0f
     5ec:	a8 8b       	std	Y+16, r26	; 0x10
     5ee:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     5f0:	11 e0       	ldi	r17, 0x01	; 1
     5f2:	6e 85       	ldd	r22, Y+14	; 0x0e
     5f4:	7f 85       	ldd	r23, Y+15	; 0x0f
     5f6:	88 89       	ldd	r24, Y+16	; 0x10
     5f8:	99 89       	ldd	r25, Y+17	; 0x11
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	40 e8       	ldi	r20, 0x80	; 128
     600:	5f e3       	ldi	r21, 0x3F	; 63
     602:	0e 94 d7 07 	call	0xfae	; 0xfae <__ltsf2>
     606:	88 23       	and	r24, r24
     608:	0c f0       	brlt	.+2      	; 0x60c <__vector_14+0x13c>
     60a:	10 e0       	ldi	r17, 0x00	; 0
     60c:	11 23       	and	r17, r17
     60e:	29 f0       	breq	.+10     	; 0x61a <__vector_14+0x14a>
		__ticks = 1;
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	9b 8b       	std	Y+19, r25	; 0x13
     616:	8a 8b       	std	Y+18, r24	; 0x12
     618:	46 c0       	rjmp	.+140    	; 0x6a6 <__vector_14+0x1d6>
	else if (__tmp > 65535)
     61a:	11 e0       	ldi	r17, 0x01	; 1
     61c:	6e 85       	ldd	r22, Y+14	; 0x0e
     61e:	7f 85       	ldd	r23, Y+15	; 0x0f
     620:	88 89       	ldd	r24, Y+16	; 0x10
     622:	99 89       	ldd	r25, Y+17	; 0x11
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	3f ef       	ldi	r19, 0xFF	; 255
     628:	4f e7       	ldi	r20, 0x7F	; 127
     62a:	57 e4       	ldi	r21, 0x47	; 71
     62c:	0e 94 77 07 	call	0xeee	; 0xeee <__gtsf2>
     630:	18 16       	cp	r1, r24
     632:	0c f0       	brlt	.+2      	; 0x636 <__vector_14+0x166>
     634:	10 e0       	ldi	r17, 0x00	; 0
     636:	11 23       	and	r17, r17
     638:	61 f1       	breq	.+88     	; 0x692 <__vector_14+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     63a:	6a 85       	ldd	r22, Y+10	; 0x0a
     63c:	7b 85       	ldd	r23, Y+11	; 0x0b
     63e:	8c 85       	ldd	r24, Y+12	; 0x0c
     640:	9d 85       	ldd	r25, Y+13	; 0x0d
     642:	20 e0       	ldi	r18, 0x00	; 0
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	40 e2       	ldi	r20, 0x20	; 32
     648:	51 e4       	ldi	r21, 0x41	; 65
     64a:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__mulsf3>
     64e:	dc 01       	movw	r26, r24
     650:	cb 01       	movw	r24, r22
     652:	bc 01       	movw	r22, r24
     654:	cd 01       	movw	r24, r26
     656:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     65a:	dc 01       	movw	r26, r24
     65c:	cb 01       	movw	r24, r22
     65e:	9b 8b       	std	Y+19, r25	; 0x13
     660:	8a 8b       	std	Y+18, r24	; 0x12
     662:	12 c0       	rjmp	.+36     	; 0x688 <__vector_14+0x1b8>
     664:	80 e9       	ldi	r24, 0x90	; 144
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	9d 8b       	std	Y+21, r25	; 0x15
     66a:	8c 8b       	std	Y+20, r24	; 0x14
     66c:	8c 89       	ldd	r24, Y+20	; 0x14
     66e:	9d 89       	ldd	r25, Y+21	; 0x15
     670:	8c 01       	movw	r16, r24
     672:	c8 01       	movw	r24, r16
     674:	01 97       	sbiw	r24, 0x01	; 1
     676:	f1 f7       	brne	.-4      	; 0x674 <__vector_14+0x1a4>
     678:	8c 01       	movw	r16, r24
     67a:	1d 8b       	std	Y+21, r17	; 0x15
     67c:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     67e:	8a 89       	ldd	r24, Y+18	; 0x12
     680:	9b 89       	ldd	r25, Y+19	; 0x13
     682:	01 97       	sbiw	r24, 0x01	; 1
     684:	9b 8b       	std	Y+19, r25	; 0x13
     686:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     688:	8a 89       	ldd	r24, Y+18	; 0x12
     68a:	9b 89       	ldd	r25, Y+19	; 0x13
     68c:	00 97       	sbiw	r24, 0x00	; 0
     68e:	51 f7       	brne	.-44     	; 0x664 <__vector_14+0x194>
     690:	28 c0       	rjmp	.+80     	; 0x6e2 <__vector_14+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     692:	6e 85       	ldd	r22, Y+14	; 0x0e
     694:	7f 85       	ldd	r23, Y+15	; 0x0f
     696:	88 89       	ldd	r24, Y+16	; 0x10
     698:	99 89       	ldd	r25, Y+17	; 0x11
     69a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     69e:	dc 01       	movw	r26, r24
     6a0:	cb 01       	movw	r24, r22
     6a2:	9b 8b       	std	Y+19, r25	; 0x13
     6a4:	8a 8b       	std	Y+18, r24	; 0x12
     6a6:	8a 89       	ldd	r24, Y+18	; 0x12
     6a8:	9b 89       	ldd	r25, Y+19	; 0x13
     6aa:	9f 8b       	std	Y+23, r25	; 0x17
     6ac:	8e 8b       	std	Y+22, r24	; 0x16
     6ae:	8e 89       	ldd	r24, Y+22	; 0x16
     6b0:	9f 89       	ldd	r25, Y+23	; 0x17
     6b2:	8c 01       	movw	r16, r24
     6b4:	f8 01       	movw	r30, r16
     6b6:	31 97       	sbiw	r30, 0x01	; 1
     6b8:	f1 f7       	brne	.-4      	; 0x6b6 <__vector_14+0x1e6>
     6ba:	8f 01       	movw	r16, r30
     6bc:	1f 8b       	std	Y+23, r17	; 0x17
     6be:	0e 8b       	std	Y+22, r16	; 0x16
     6c0:	10 c0       	rjmp	.+32     	; 0x6e2 <__vector_14+0x212>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     6c2:	6d 81       	ldd	r22, Y+5	; 0x05
     6c4:	7e 81       	ldd	r23, Y+6	; 0x06
     6c6:	8f 81       	ldd	r24, Y+7	; 0x07
     6c8:	98 85       	ldd	r25, Y+8	; 0x08
     6ca:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     6ce:	dc 01       	movw	r26, r24
     6d0:	cb 01       	movw	r24, r22
     6d2:	89 87       	std	Y+9, r24	; 0x09
     6d4:	89 85       	ldd	r24, Y+9	; 0x09
     6d6:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     6d8:	88 8d       	ldd	r24, Y+24	; 0x18
     6da:	18 2f       	mov	r17, r24
     6dc:	1a 95       	dec	r17
     6de:	f1 f7       	brne	.-4      	; 0x6dc <__vector_14+0x20c>
     6e0:	18 8f       	std	Y+24, r17	; 0x18
			_delay_us( 5 );
			//PORTD &= ~(1 << PORTD6);
			PORTB &= ~(1 << PORTB0);
     6e2:	85 e2       	ldi	r24, 0x25	; 37
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	25 e2       	ldi	r18, 0x25	; 37
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	f9 01       	movw	r30, r18
     6ec:	20 81       	ld	r18, Z
     6ee:	2e 7f       	andi	r18, 0xFE	; 254
     6f0:	fc 01       	movw	r30, r24
     6f2:	20 83       	st	Z, r18
			count = 0;
     6f4:	10 92 0d 01 	sts	0x010D, r1
     6f8:	10 92 0c 01 	sts	0x010C, r1
			zerocross = 0;
     6fc:	10 92 02 01 	sts	0x0102, r1
     700:	09 c0       	rjmp	.+18     	; 0x714 <__vector_14+0x244>
		}
		else
		{
			
			count = count + 1;
     702:	80 91 0c 01 	lds	r24, 0x010C
     706:	90 91 0d 01 	lds	r25, 0x010D
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	90 93 0d 01 	sts	0x010D, r25
     710:	80 93 0c 01 	sts	0x010C, r24
		}
	}
}
     714:	68 96       	adiw	r28, 0x18	; 24
     716:	de bf       	out	0x3e, r29	; 62
     718:	cd bf       	out	0x3d, r28	; 61
     71a:	cf 91       	pop	r28
     71c:	df 91       	pop	r29
     71e:	ff 91       	pop	r31
     720:	ef 91       	pop	r30
     722:	bf 91       	pop	r27
     724:	af 91       	pop	r26
     726:	9f 91       	pop	r25
     728:	8f 91       	pop	r24
     72a:	7f 91       	pop	r23
     72c:	6f 91       	pop	r22
     72e:	5f 91       	pop	r21
     730:	4f 91       	pop	r20
     732:	3f 91       	pop	r19
     734:	2f 91       	pop	r18
     736:	1f 91       	pop	r17
     738:	0f 91       	pop	r16
     73a:	0f 90       	pop	r0
     73c:	0f be       	out	0x3f, r0	; 63
     73e:	0f 90       	pop	r0
     740:	1f 90       	pop	r1
     742:	18 95       	reti

00000744 <__vector_1>:

ISR(INT0_vect)
{
     744:	1f 92       	push	r1
     746:	0f 92       	push	r0
     748:	0f b6       	in	r0, 0x3f	; 63
     74a:	0f 92       	push	r0
     74c:	11 24       	eor	r1, r1
     74e:	8f 93       	push	r24
     750:	df 93       	push	r29
     752:	cf 93       	push	r28
     754:	cd b7       	in	r28, 0x3d	; 61
     756:	de b7       	in	r29, 0x3e	; 62
	zerocross = 1;
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	80 93 02 01 	sts	0x0102, r24
     75e:	cf 91       	pop	r28
     760:	df 91       	pop	r29
     762:	8f 91       	pop	r24
     764:	0f 90       	pop	r0
     766:	0f be       	out	0x3f, r0	; 63
     768:	0f 90       	pop	r0
     76a:	1f 90       	pop	r1
     76c:	18 95       	reti

0000076e <USART_Init>:
 */ 

#include <avr\io.h> 

void USART_Init( unsigned int ubrr)
{
     76e:	df 93       	push	r29
     770:	cf 93       	push	r28
     772:	00 d0       	rcall	.+0      	; 0x774 <USART_Init+0x6>
     774:	cd b7       	in	r28, 0x3d	; 61
     776:	de b7       	in	r29, 0x3e	; 62
     778:	9a 83       	std	Y+2, r25	; 0x02
     77a:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     77c:	85 ec       	ldi	r24, 0xC5	; 197
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	29 81       	ldd	r18, Y+1	; 0x01
     782:	3a 81       	ldd	r19, Y+2	; 0x02
     784:	23 2f       	mov	r18, r19
     786:	33 27       	eor	r19, r19
     788:	fc 01       	movw	r30, r24
     78a:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     78c:	84 ec       	ldi	r24, 0xC4	; 196
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	29 81       	ldd	r18, Y+1	; 0x01
     792:	fc 01       	movw	r30, r24
     794:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     796:	81 ec       	ldi	r24, 0xC1	; 193
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	28 e9       	ldi	r18, 0x98	; 152
     79c:	fc 01       	movw	r30, r24
     79e:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     7a0:	82 ec       	ldi	r24, 0xC2	; 194
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	26 e0       	ldi	r18, 0x06	; 6
     7a6:	fc 01       	movw	r30, r24
     7a8:	20 83       	st	Z, r18
}
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	cf 91       	pop	r28
     7b0:	df 91       	pop	r29
     7b2:	08 95       	ret

000007b4 <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     7b4:	df 93       	push	r29
     7b6:	cf 93       	push	r28
     7b8:	0f 92       	push	r0
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     7c0:	00 00       	nop
     7c2:	80 ec       	ldi	r24, 0xC0	; 192
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	fc 01       	movw	r30, r24
     7c8:	80 81       	ld	r24, Z
     7ca:	88 2f       	mov	r24, r24
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	80 72       	andi	r24, 0x20	; 32
     7d0:	90 70       	andi	r25, 0x00	; 0
     7d2:	00 97       	sbiw	r24, 0x00	; 0
     7d4:	b1 f3       	breq	.-20     	; 0x7c2 <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     7d6:	86 ec       	ldi	r24, 0xC6	; 198
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	29 81       	ldd	r18, Y+1	; 0x01
     7dc:	fc 01       	movw	r30, r24
     7de:	20 83       	st	Z, r18
}
     7e0:	0f 90       	pop	r0
     7e2:	cf 91       	pop	r28
     7e4:	df 91       	pop	r29
     7e6:	08 95       	ret

000007e8 <USART_Receive>:


unsigned char USART_Receive( void )
{
     7e8:	df 93       	push	r29
     7ea:	cf 93       	push	r28
     7ec:	cd b7       	in	r28, 0x3d	; 61
     7ee:	de b7       	in	r29, 0x3e	; 62
	
}
     7f0:	cf 91       	pop	r28
     7f2:	df 91       	pop	r29
     7f4:	08 95       	ret

000007f6 <__fixunssfsi>:
     7f6:	ef 92       	push	r14
     7f8:	ff 92       	push	r15
     7fa:	0f 93       	push	r16
     7fc:	1f 93       	push	r17
     7fe:	7b 01       	movw	r14, r22
     800:	8c 01       	movw	r16, r24
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	40 e0       	ldi	r20, 0x00	; 0
     808:	5f e4       	ldi	r21, 0x4F	; 79
     80a:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__gesf2>
     80e:	87 fd       	sbrc	r24, 7
     810:	11 c0       	rjmp	.+34     	; 0x834 <__fixunssfsi+0x3e>
     812:	c8 01       	movw	r24, r16
     814:	b7 01       	movw	r22, r14
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	40 e0       	ldi	r20, 0x00	; 0
     81c:	5f e4       	ldi	r21, 0x4F	; 79
     81e:	0e 94 9e 05 	call	0xb3c	; 0xb3c <__subsf3>
     822:	0e 94 07 08 	call	0x100e	; 0x100e <__fixsfsi>
     826:	9b 01       	movw	r18, r22
     828:	ac 01       	movw	r20, r24
     82a:	20 50       	subi	r18, 0x00	; 0
     82c:	30 40       	sbci	r19, 0x00	; 0
     82e:	40 40       	sbci	r20, 0x00	; 0
     830:	50 48       	sbci	r21, 0x80	; 128
     832:	06 c0       	rjmp	.+12     	; 0x840 <__fixunssfsi+0x4a>
     834:	c8 01       	movw	r24, r16
     836:	b7 01       	movw	r22, r14
     838:	0e 94 07 08 	call	0x100e	; 0x100e <__fixsfsi>
     83c:	9b 01       	movw	r18, r22
     83e:	ac 01       	movw	r20, r24
     840:	b9 01       	movw	r22, r18
     842:	ca 01       	movw	r24, r20
     844:	1f 91       	pop	r17
     846:	0f 91       	pop	r16
     848:	ff 90       	pop	r15
     84a:	ef 90       	pop	r14
     84c:	08 95       	ret

0000084e <_fpadd_parts>:
     84e:	a0 e0       	ldi	r26, 0x00	; 0
     850:	b0 e0       	ldi	r27, 0x00	; 0
     852:	ed e2       	ldi	r30, 0x2D	; 45
     854:	f4 e0       	ldi	r31, 0x04	; 4
     856:	0c 94 ed 09 	jmp	0x13da	; 0x13da <__prologue_saves__+0x8>
     85a:	fc 01       	movw	r30, r24
     85c:	ea 01       	movw	r28, r20
     85e:	80 81       	ld	r24, Z
     860:	82 30       	cpi	r24, 0x02	; 2
     862:	08 f4       	brcc	.+2      	; 0x866 <_fpadd_parts+0x18>
     864:	38 c1       	rjmp	.+624    	; 0xad6 <__stack+0x1d7>
     866:	db 01       	movw	r26, r22
     868:	9c 91       	ld	r25, X
     86a:	92 30       	cpi	r25, 0x02	; 2
     86c:	08 f4       	brcc	.+2      	; 0x870 <_fpadd_parts+0x22>
     86e:	30 c1       	rjmp	.+608    	; 0xad0 <__stack+0x1d1>
     870:	84 30       	cpi	r24, 0x04	; 4
     872:	59 f4       	brne	.+22     	; 0x88a <_fpadd_parts+0x3c>
     874:	94 30       	cpi	r25, 0x04	; 4
     876:	09 f0       	breq	.+2      	; 0x87a <_fpadd_parts+0x2c>
     878:	2e c1       	rjmp	.+604    	; 0xad6 <__stack+0x1d7>
     87a:	91 81       	ldd	r25, Z+1	; 0x01
     87c:	11 96       	adiw	r26, 0x01	; 1
     87e:	8c 91       	ld	r24, X
     880:	11 97       	sbiw	r26, 0x01	; 1
     882:	98 17       	cp	r25, r24
     884:	09 f0       	breq	.+2      	; 0x888 <_fpadd_parts+0x3a>
     886:	21 c1       	rjmp	.+578    	; 0xaca <__stack+0x1cb>
     888:	26 c1       	rjmp	.+588    	; 0xad6 <__stack+0x1d7>
     88a:	94 30       	cpi	r25, 0x04	; 4
     88c:	09 f4       	brne	.+2      	; 0x890 <_fpadd_parts+0x42>
     88e:	20 c1       	rjmp	.+576    	; 0xad0 <__stack+0x1d1>
     890:	92 30       	cpi	r25, 0x02	; 2
     892:	b1 f4       	brne	.+44     	; 0x8c0 <_fpadd_parts+0x72>
     894:	82 30       	cpi	r24, 0x02	; 2
     896:	09 f0       	breq	.+2      	; 0x89a <_fpadd_parts+0x4c>
     898:	1e c1       	rjmp	.+572    	; 0xad6 <__stack+0x1d7>
     89a:	ca 01       	movw	r24, r20
     89c:	af 01       	movw	r20, r30
     89e:	28 e0       	ldi	r18, 0x08	; 8
     8a0:	da 01       	movw	r26, r20
     8a2:	0d 90       	ld	r0, X+
     8a4:	ad 01       	movw	r20, r26
     8a6:	dc 01       	movw	r26, r24
     8a8:	0d 92       	st	X+, r0
     8aa:	cd 01       	movw	r24, r26
     8ac:	21 50       	subi	r18, 0x01	; 1
     8ae:	c1 f7       	brne	.-16     	; 0x8a0 <_fpadd_parts+0x52>
     8b0:	db 01       	movw	r26, r22
     8b2:	11 96       	adiw	r26, 0x01	; 1
     8b4:	8c 91       	ld	r24, X
     8b6:	11 97       	sbiw	r26, 0x01	; 1
     8b8:	91 81       	ldd	r25, Z+1	; 0x01
     8ba:	89 23       	and	r24, r25
     8bc:	89 83       	std	Y+1, r24	; 0x01
     8be:	0a c1       	rjmp	.+532    	; 0xad4 <__stack+0x1d5>
     8c0:	82 30       	cpi	r24, 0x02	; 2
     8c2:	09 f4       	brne	.+2      	; 0x8c6 <_fpadd_parts+0x78>
     8c4:	05 c1       	rjmp	.+522    	; 0xad0 <__stack+0x1d1>
     8c6:	c2 80       	ldd	r12, Z+2	; 0x02
     8c8:	d3 80       	ldd	r13, Z+3	; 0x03
     8ca:	db 01       	movw	r26, r22
     8cc:	12 96       	adiw	r26, 0x02	; 2
     8ce:	6d 90       	ld	r6, X+
     8d0:	7c 90       	ld	r7, X
     8d2:	13 97       	sbiw	r26, 0x03	; 3
     8d4:	24 81       	ldd	r18, Z+4	; 0x04
     8d6:	35 81       	ldd	r19, Z+5	; 0x05
     8d8:	46 81       	ldd	r20, Z+6	; 0x06
     8da:	57 81       	ldd	r21, Z+7	; 0x07
     8dc:	14 96       	adiw	r26, 0x04	; 4
     8de:	ed 90       	ld	r14, X+
     8e0:	fd 90       	ld	r15, X+
     8e2:	0d 91       	ld	r16, X+
     8e4:	1c 91       	ld	r17, X
     8e6:	17 97       	sbiw	r26, 0x07	; 7
     8e8:	c6 01       	movw	r24, r12
     8ea:	86 19       	sub	r24, r6
     8ec:	97 09       	sbc	r25, r7
     8ee:	5c 01       	movw	r10, r24
     8f0:	97 ff       	sbrs	r25, 7
     8f2:	04 c0       	rjmp	.+8      	; 0x8fc <_fpadd_parts+0xae>
     8f4:	aa 24       	eor	r10, r10
     8f6:	bb 24       	eor	r11, r11
     8f8:	a8 1a       	sub	r10, r24
     8fa:	b9 0a       	sbc	r11, r25
     8fc:	b0 e2       	ldi	r27, 0x20	; 32
     8fe:	ab 16       	cp	r10, r27
     900:	b1 04       	cpc	r11, r1
     902:	0c f0       	brlt	.+2      	; 0x906 <__stack+0x7>
     904:	61 c0       	rjmp	.+194    	; 0x9c8 <__stack+0xc9>
     906:	18 16       	cp	r1, r24
     908:	19 06       	cpc	r1, r25
     90a:	6c f5       	brge	.+90     	; 0x966 <__stack+0x67>
     90c:	37 01       	movw	r6, r14
     90e:	48 01       	movw	r8, r16
     910:	0a 2c       	mov	r0, r10
     912:	04 c0       	rjmp	.+8      	; 0x91c <__stack+0x1d>
     914:	96 94       	lsr	r9
     916:	87 94       	ror	r8
     918:	77 94       	ror	r7
     91a:	67 94       	ror	r6
     91c:	0a 94       	dec	r0
     91e:	d2 f7       	brpl	.-12     	; 0x914 <__stack+0x15>
     920:	81 e0       	ldi	r24, 0x01	; 1
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	a0 e0       	ldi	r26, 0x00	; 0
     926:	b0 e0       	ldi	r27, 0x00	; 0
     928:	0a 2c       	mov	r0, r10
     92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0x35>
     92c:	88 0f       	add	r24, r24
     92e:	99 1f       	adc	r25, r25
     930:	aa 1f       	adc	r26, r26
     932:	bb 1f       	adc	r27, r27
     934:	0a 94       	dec	r0
     936:	d2 f7       	brpl	.-12     	; 0x92c <__stack+0x2d>
     938:	01 97       	sbiw	r24, 0x01	; 1
     93a:	a1 09       	sbc	r26, r1
     93c:	b1 09       	sbc	r27, r1
     93e:	8e 21       	and	r24, r14
     940:	9f 21       	and	r25, r15
     942:	a0 23       	and	r26, r16
     944:	b1 23       	and	r27, r17
     946:	ee 24       	eor	r14, r14
     948:	ff 24       	eor	r15, r15
     94a:	87 01       	movw	r16, r14
     94c:	e3 94       	inc	r14
     94e:	00 97       	sbiw	r24, 0x00	; 0
     950:	a1 05       	cpc	r26, r1
     952:	b1 05       	cpc	r27, r1
     954:	19 f4       	brne	.+6      	; 0x95c <__stack+0x5d>
     956:	ee 24       	eor	r14, r14
     958:	ff 24       	eor	r15, r15
     95a:	87 01       	movw	r16, r14
     95c:	e6 28       	or	r14, r6
     95e:	f7 28       	or	r15, r7
     960:	08 29       	or	r16, r8
     962:	19 29       	or	r17, r9
     964:	3c c0       	rjmp	.+120    	; 0x9de <__stack+0xdf>
     966:	00 97       	sbiw	r24, 0x00	; 0
     968:	d1 f1       	breq	.+116    	; 0x9de <__stack+0xdf>
     96a:	ca 0c       	add	r12, r10
     96c:	db 1c       	adc	r13, r11
     96e:	39 01       	movw	r6, r18
     970:	4a 01       	movw	r8, r20
     972:	0a 2c       	mov	r0, r10
     974:	04 c0       	rjmp	.+8      	; 0x97e <__stack+0x7f>
     976:	96 94       	lsr	r9
     978:	87 94       	ror	r8
     97a:	77 94       	ror	r7
     97c:	67 94       	ror	r6
     97e:	0a 94       	dec	r0
     980:	d2 f7       	brpl	.-12     	; 0x976 <__stack+0x77>
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	a0 e0       	ldi	r26, 0x00	; 0
     988:	b0 e0       	ldi	r27, 0x00	; 0
     98a:	0a 2c       	mov	r0, r10
     98c:	04 c0       	rjmp	.+8      	; 0x996 <__stack+0x97>
     98e:	88 0f       	add	r24, r24
     990:	99 1f       	adc	r25, r25
     992:	aa 1f       	adc	r26, r26
     994:	bb 1f       	adc	r27, r27
     996:	0a 94       	dec	r0
     998:	d2 f7       	brpl	.-12     	; 0x98e <__stack+0x8f>
     99a:	01 97       	sbiw	r24, 0x01	; 1
     99c:	a1 09       	sbc	r26, r1
     99e:	b1 09       	sbc	r27, r1
     9a0:	82 23       	and	r24, r18
     9a2:	93 23       	and	r25, r19
     9a4:	a4 23       	and	r26, r20
     9a6:	b5 23       	and	r27, r21
     9a8:	21 e0       	ldi	r18, 0x01	; 1
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 e0       	ldi	r20, 0x00	; 0
     9ae:	50 e0       	ldi	r21, 0x00	; 0
     9b0:	00 97       	sbiw	r24, 0x00	; 0
     9b2:	a1 05       	cpc	r26, r1
     9b4:	b1 05       	cpc	r27, r1
     9b6:	19 f4       	brne	.+6      	; 0x9be <__stack+0xbf>
     9b8:	20 e0       	ldi	r18, 0x00	; 0
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	a9 01       	movw	r20, r18
     9be:	26 29       	or	r18, r6
     9c0:	37 29       	or	r19, r7
     9c2:	48 29       	or	r20, r8
     9c4:	59 29       	or	r21, r9
     9c6:	0b c0       	rjmp	.+22     	; 0x9de <__stack+0xdf>
     9c8:	6c 14       	cp	r6, r12
     9ca:	7d 04       	cpc	r7, r13
     9cc:	24 f4       	brge	.+8      	; 0x9d6 <__stack+0xd7>
     9ce:	ee 24       	eor	r14, r14
     9d0:	ff 24       	eor	r15, r15
     9d2:	87 01       	movw	r16, r14
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__stack+0xdf>
     9d6:	63 01       	movw	r12, r6
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	a9 01       	movw	r20, r18
     9de:	81 81       	ldd	r24, Z+1	; 0x01
     9e0:	fb 01       	movw	r30, r22
     9e2:	91 81       	ldd	r25, Z+1	; 0x01
     9e4:	89 17       	cp	r24, r25
     9e6:	09 f4       	brne	.+2      	; 0x9ea <__stack+0xeb>
     9e8:	45 c0       	rjmp	.+138    	; 0xa74 <__stack+0x175>
     9ea:	88 23       	and	r24, r24
     9ec:	49 f0       	breq	.+18     	; 0xa00 <__stack+0x101>
     9ee:	d8 01       	movw	r26, r16
     9f0:	c7 01       	movw	r24, r14
     9f2:	82 1b       	sub	r24, r18
     9f4:	93 0b       	sbc	r25, r19
     9f6:	a4 0b       	sbc	r26, r20
     9f8:	b5 0b       	sbc	r27, r21
     9fa:	9c 01       	movw	r18, r24
     9fc:	ad 01       	movw	r20, r26
     9fe:	04 c0       	rjmp	.+8      	; 0xa08 <__stack+0x109>
     a00:	2e 19       	sub	r18, r14
     a02:	3f 09       	sbc	r19, r15
     a04:	40 0b       	sbc	r20, r16
     a06:	51 0b       	sbc	r21, r17
     a08:	57 fd       	sbrc	r21, 7
     a0a:	04 c0       	rjmp	.+8      	; 0xa14 <__stack+0x115>
     a0c:	19 82       	std	Y+1, r1	; 0x01
     a0e:	db 82       	std	Y+3, r13	; 0x03
     a10:	ca 82       	std	Y+2, r12	; 0x02
     a12:	0b c0       	rjmp	.+22     	; 0xa2a <__stack+0x12b>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	89 83       	std	Y+1, r24	; 0x01
     a18:	db 82       	std	Y+3, r13	; 0x03
     a1a:	ca 82       	std	Y+2, r12	; 0x02
     a1c:	50 95       	com	r21
     a1e:	40 95       	com	r20
     a20:	30 95       	com	r19
     a22:	21 95       	neg	r18
     a24:	3f 4f       	sbci	r19, 0xFF	; 255
     a26:	4f 4f       	sbci	r20, 0xFF	; 255
     a28:	5f 4f       	sbci	r21, 0xFF	; 255
     a2a:	2c 83       	std	Y+4, r18	; 0x04
     a2c:	3d 83       	std	Y+5, r19	; 0x05
     a2e:	4e 83       	std	Y+6, r20	; 0x06
     a30:	5f 83       	std	Y+7, r21	; 0x07
     a32:	0d c0       	rjmp	.+26     	; 0xa4e <__stack+0x14f>
     a34:	88 0f       	add	r24, r24
     a36:	99 1f       	adc	r25, r25
     a38:	aa 1f       	adc	r26, r26
     a3a:	bb 1f       	adc	r27, r27
     a3c:	8c 83       	std	Y+4, r24	; 0x04
     a3e:	9d 83       	std	Y+5, r25	; 0x05
     a40:	ae 83       	std	Y+6, r26	; 0x06
     a42:	bf 83       	std	Y+7, r27	; 0x07
     a44:	8a 81       	ldd	r24, Y+2	; 0x02
     a46:	9b 81       	ldd	r25, Y+3	; 0x03
     a48:	01 97       	sbiw	r24, 0x01	; 1
     a4a:	9b 83       	std	Y+3, r25	; 0x03
     a4c:	8a 83       	std	Y+2, r24	; 0x02
     a4e:	8c 81       	ldd	r24, Y+4	; 0x04
     a50:	9d 81       	ldd	r25, Y+5	; 0x05
     a52:	ae 81       	ldd	r26, Y+6	; 0x06
     a54:	bf 81       	ldd	r27, Y+7	; 0x07
     a56:	9c 01       	movw	r18, r24
     a58:	ad 01       	movw	r20, r26
     a5a:	21 50       	subi	r18, 0x01	; 1
     a5c:	30 40       	sbci	r19, 0x00	; 0
     a5e:	40 40       	sbci	r20, 0x00	; 0
     a60:	50 40       	sbci	r21, 0x00	; 0
     a62:	2f 3f       	cpi	r18, 0xFF	; 255
     a64:	ef ef       	ldi	r30, 0xFF	; 255
     a66:	3e 07       	cpc	r19, r30
     a68:	ef ef       	ldi	r30, 0xFF	; 255
     a6a:	4e 07       	cpc	r20, r30
     a6c:	ef e3       	ldi	r30, 0x3F	; 63
     a6e:	5e 07       	cpc	r21, r30
     a70:	08 f3       	brcs	.-62     	; 0xa34 <__stack+0x135>
     a72:	0b c0       	rjmp	.+22     	; 0xa8a <__stack+0x18b>
     a74:	89 83       	std	Y+1, r24	; 0x01
     a76:	db 82       	std	Y+3, r13	; 0x03
     a78:	ca 82       	std	Y+2, r12	; 0x02
     a7a:	2e 0d       	add	r18, r14
     a7c:	3f 1d       	adc	r19, r15
     a7e:	40 1f       	adc	r20, r16
     a80:	51 1f       	adc	r21, r17
     a82:	2c 83       	std	Y+4, r18	; 0x04
     a84:	3d 83       	std	Y+5, r19	; 0x05
     a86:	4e 83       	std	Y+6, r20	; 0x06
     a88:	5f 83       	std	Y+7, r21	; 0x07
     a8a:	83 e0       	ldi	r24, 0x03	; 3
     a8c:	88 83       	st	Y, r24
     a8e:	2c 81       	ldd	r18, Y+4	; 0x04
     a90:	3d 81       	ldd	r19, Y+5	; 0x05
     a92:	4e 81       	ldd	r20, Y+6	; 0x06
     a94:	5f 81       	ldd	r21, Y+7	; 0x07
     a96:	57 ff       	sbrs	r21, 7
     a98:	1d c0       	rjmp	.+58     	; 0xad4 <__stack+0x1d5>
     a9a:	da 01       	movw	r26, r20
     a9c:	c9 01       	movw	r24, r18
     a9e:	81 70       	andi	r24, 0x01	; 1
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	56 95       	lsr	r21
     aa8:	47 95       	ror	r20
     aaa:	37 95       	ror	r19
     aac:	27 95       	ror	r18
     aae:	82 2b       	or	r24, r18
     ab0:	93 2b       	or	r25, r19
     ab2:	a4 2b       	or	r26, r20
     ab4:	b5 2b       	or	r27, r21
     ab6:	8c 83       	std	Y+4, r24	; 0x04
     ab8:	9d 83       	std	Y+5, r25	; 0x05
     aba:	ae 83       	std	Y+6, r26	; 0x06
     abc:	bf 83       	std	Y+7, r27	; 0x07
     abe:	8a 81       	ldd	r24, Y+2	; 0x02
     ac0:	9b 81       	ldd	r25, Y+3	; 0x03
     ac2:	01 96       	adiw	r24, 0x01	; 1
     ac4:	9b 83       	std	Y+3, r25	; 0x03
     ac6:	8a 83       	std	Y+2, r24	; 0x02
     ac8:	05 c0       	rjmp	.+10     	; 0xad4 <__stack+0x1d5>
     aca:	e3 e0       	ldi	r30, 0x03	; 3
     acc:	f1 e0       	ldi	r31, 0x01	; 1
     ace:	03 c0       	rjmp	.+6      	; 0xad6 <__stack+0x1d7>
     ad0:	fb 01       	movw	r30, r22
     ad2:	01 c0       	rjmp	.+2      	; 0xad6 <__stack+0x1d7>
     ad4:	fe 01       	movw	r30, r28
     ad6:	cf 01       	movw	r24, r30
     ad8:	cd b7       	in	r28, 0x3d	; 61
     ada:	de b7       	in	r29, 0x3e	; 62
     adc:	ee e0       	ldi	r30, 0x0E	; 14
     ade:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <__epilogue_restores__+0x8>

00000ae2 <__addsf3>:
     ae2:	a0 e2       	ldi	r26, 0x20	; 32
     ae4:	b0 e0       	ldi	r27, 0x00	; 0
     ae6:	e7 e7       	ldi	r30, 0x77	; 119
     ae8:	f5 e0       	ldi	r31, 0x05	; 5
     aea:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__prologue_saves__+0x18>
     aee:	69 83       	std	Y+1, r22	; 0x01
     af0:	7a 83       	std	Y+2, r23	; 0x02
     af2:	8b 83       	std	Y+3, r24	; 0x03
     af4:	9c 83       	std	Y+4, r25	; 0x04
     af6:	2d 83       	std	Y+5, r18	; 0x05
     af8:	3e 83       	std	Y+6, r19	; 0x06
     afa:	4f 83       	std	Y+7, r20	; 0x07
     afc:	58 87       	std	Y+8, r21	; 0x08
     afe:	89 e0       	ldi	r24, 0x09	; 9
     b00:	e8 2e       	mov	r14, r24
     b02:	f1 2c       	mov	r15, r1
     b04:	ec 0e       	add	r14, r28
     b06:	fd 1e       	adc	r15, r29
     b08:	ce 01       	movw	r24, r28
     b0a:	01 96       	adiw	r24, 0x01	; 1
     b0c:	b7 01       	movw	r22, r14
     b0e:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     b12:	8e 01       	movw	r16, r28
     b14:	0f 5e       	subi	r16, 0xEF	; 239
     b16:	1f 4f       	sbci	r17, 0xFF	; 255
     b18:	ce 01       	movw	r24, r28
     b1a:	05 96       	adiw	r24, 0x05	; 5
     b1c:	b8 01       	movw	r22, r16
     b1e:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     b22:	c7 01       	movw	r24, r14
     b24:	b8 01       	movw	r22, r16
     b26:	ae 01       	movw	r20, r28
     b28:	47 5e       	subi	r20, 0xE7	; 231
     b2a:	5f 4f       	sbci	r21, 0xFF	; 255
     b2c:	0e 94 27 04 	call	0x84e	; 0x84e <_fpadd_parts>
     b30:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__pack_f>
     b34:	a0 96       	adiw	r28, 0x20	; 32
     b36:	e6 e0       	ldi	r30, 0x06	; 6
     b38:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__epilogue_restores__+0x18>

00000b3c <__subsf3>:
     b3c:	a0 e2       	ldi	r26, 0x20	; 32
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	e4 ea       	ldi	r30, 0xA4	; 164
     b42:	f5 e0       	ldi	r31, 0x05	; 5
     b44:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__prologue_saves__+0x18>
     b48:	69 83       	std	Y+1, r22	; 0x01
     b4a:	7a 83       	std	Y+2, r23	; 0x02
     b4c:	8b 83       	std	Y+3, r24	; 0x03
     b4e:	9c 83       	std	Y+4, r25	; 0x04
     b50:	2d 83       	std	Y+5, r18	; 0x05
     b52:	3e 83       	std	Y+6, r19	; 0x06
     b54:	4f 83       	std	Y+7, r20	; 0x07
     b56:	58 87       	std	Y+8, r21	; 0x08
     b58:	8e 01       	movw	r16, r28
     b5a:	07 5f       	subi	r16, 0xF7	; 247
     b5c:	1f 4f       	sbci	r17, 0xFF	; 255
     b5e:	ce 01       	movw	r24, r28
     b60:	01 96       	adiw	r24, 0x01	; 1
     b62:	b8 01       	movw	r22, r16
     b64:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     b68:	91 e1       	ldi	r25, 0x11	; 17
     b6a:	e9 2e       	mov	r14, r25
     b6c:	f1 2c       	mov	r15, r1
     b6e:	ec 0e       	add	r14, r28
     b70:	fd 1e       	adc	r15, r29
     b72:	ce 01       	movw	r24, r28
     b74:	05 96       	adiw	r24, 0x05	; 5
     b76:	b7 01       	movw	r22, r14
     b78:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     b7c:	8a 89       	ldd	r24, Y+18	; 0x12
     b7e:	91 e0       	ldi	r25, 0x01	; 1
     b80:	89 27       	eor	r24, r25
     b82:	8a 8b       	std	Y+18, r24	; 0x12
     b84:	c8 01       	movw	r24, r16
     b86:	b7 01       	movw	r22, r14
     b88:	ae 01       	movw	r20, r28
     b8a:	47 5e       	subi	r20, 0xE7	; 231
     b8c:	5f 4f       	sbci	r21, 0xFF	; 255
     b8e:	0e 94 27 04 	call	0x84e	; 0x84e <_fpadd_parts>
     b92:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__pack_f>
     b96:	a0 96       	adiw	r28, 0x20	; 32
     b98:	e6 e0       	ldi	r30, 0x06	; 6
     b9a:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__epilogue_restores__+0x18>

00000b9e <__mulsf3>:
     b9e:	a0 e2       	ldi	r26, 0x20	; 32
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	e5 ed       	ldi	r30, 0xD5	; 213
     ba4:	f5 e0       	ldi	r31, 0x05	; 5
     ba6:	0c 94 e9 09 	jmp	0x13d2	; 0x13d2 <__prologue_saves__>
     baa:	69 83       	std	Y+1, r22	; 0x01
     bac:	7a 83       	std	Y+2, r23	; 0x02
     bae:	8b 83       	std	Y+3, r24	; 0x03
     bb0:	9c 83       	std	Y+4, r25	; 0x04
     bb2:	2d 83       	std	Y+5, r18	; 0x05
     bb4:	3e 83       	std	Y+6, r19	; 0x06
     bb6:	4f 83       	std	Y+7, r20	; 0x07
     bb8:	58 87       	std	Y+8, r21	; 0x08
     bba:	ce 01       	movw	r24, r28
     bbc:	01 96       	adiw	r24, 0x01	; 1
     bbe:	be 01       	movw	r22, r28
     bc0:	67 5f       	subi	r22, 0xF7	; 247
     bc2:	7f 4f       	sbci	r23, 0xFF	; 255
     bc4:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     bc8:	ce 01       	movw	r24, r28
     bca:	05 96       	adiw	r24, 0x05	; 5
     bcc:	be 01       	movw	r22, r28
     bce:	6f 5e       	subi	r22, 0xEF	; 239
     bd0:	7f 4f       	sbci	r23, 0xFF	; 255
     bd2:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     bd6:	99 85       	ldd	r25, Y+9	; 0x09
     bd8:	92 30       	cpi	r25, 0x02	; 2
     bda:	78 f0       	brcs	.+30     	; 0xbfa <__mulsf3+0x5c>
     bdc:	89 89       	ldd	r24, Y+17	; 0x11
     bde:	82 30       	cpi	r24, 0x02	; 2
     be0:	c0 f0       	brcs	.+48     	; 0xc12 <__mulsf3+0x74>
     be2:	94 30       	cpi	r25, 0x04	; 4
     be4:	19 f4       	brne	.+6      	; 0xbec <__mulsf3+0x4e>
     be6:	82 30       	cpi	r24, 0x02	; 2
     be8:	41 f4       	brne	.+16     	; 0xbfa <__mulsf3+0x5c>
     bea:	cb c0       	rjmp	.+406    	; 0xd82 <__mulsf3+0x1e4>
     bec:	84 30       	cpi	r24, 0x04	; 4
     bee:	19 f4       	brne	.+6      	; 0xbf6 <__mulsf3+0x58>
     bf0:	92 30       	cpi	r25, 0x02	; 2
     bf2:	79 f4       	brne	.+30     	; 0xc12 <__mulsf3+0x74>
     bf4:	c6 c0       	rjmp	.+396    	; 0xd82 <__mulsf3+0x1e4>
     bf6:	92 30       	cpi	r25, 0x02	; 2
     bf8:	51 f4       	brne	.+20     	; 0xc0e <__mulsf3+0x70>
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	2a 85       	ldd	r18, Y+10	; 0x0a
     bfe:	9a 89       	ldd	r25, Y+18	; 0x12
     c00:	29 17       	cp	r18, r25
     c02:	09 f4       	brne	.+2      	; 0xc06 <__mulsf3+0x68>
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	8a 87       	std	Y+10, r24	; 0x0a
     c08:	ce 01       	movw	r24, r28
     c0a:	09 96       	adiw	r24, 0x09	; 9
     c0c:	bc c0       	rjmp	.+376    	; 0xd86 <__mulsf3+0x1e8>
     c0e:	82 30       	cpi	r24, 0x02	; 2
     c10:	51 f4       	brne	.+20     	; 0xc26 <__mulsf3+0x88>
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	2a 85       	ldd	r18, Y+10	; 0x0a
     c16:	9a 89       	ldd	r25, Y+18	; 0x12
     c18:	29 17       	cp	r18, r25
     c1a:	09 f4       	brne	.+2      	; 0xc1e <__mulsf3+0x80>
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	8a 8b       	std	Y+18, r24	; 0x12
     c20:	ce 01       	movw	r24, r28
     c22:	41 96       	adiw	r24, 0x11	; 17
     c24:	b0 c0       	rjmp	.+352    	; 0xd86 <__mulsf3+0x1e8>
     c26:	6d 84       	ldd	r6, Y+13	; 0x0d
     c28:	7e 84       	ldd	r7, Y+14	; 0x0e
     c2a:	8f 84       	ldd	r8, Y+15	; 0x0f
     c2c:	98 88       	ldd	r9, Y+16	; 0x10
     c2e:	ed 88       	ldd	r14, Y+21	; 0x15
     c30:	fe 88       	ldd	r15, Y+22	; 0x16
     c32:	0f 89       	ldd	r16, Y+23	; 0x17
     c34:	18 8d       	ldd	r17, Y+24	; 0x18
     c36:	e0 e2       	ldi	r30, 0x20	; 32
     c38:	f0 e0       	ldi	r31, 0x00	; 0
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	dc 01       	movw	r26, r24
     c40:	aa 24       	eor	r10, r10
     c42:	bb 24       	eor	r11, r11
     c44:	65 01       	movw	r12, r10
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	a9 01       	movw	r20, r18
     c4c:	b3 01       	movw	r22, r6
     c4e:	61 70       	andi	r22, 0x01	; 1
     c50:	70 70       	andi	r23, 0x00	; 0
     c52:	61 15       	cp	r22, r1
     c54:	71 05       	cpc	r23, r1
     c56:	d1 f0       	breq	.+52     	; 0xc8c <__mulsf3+0xee>
     c58:	2e 0d       	add	r18, r14
     c5a:	3f 1d       	adc	r19, r15
     c5c:	40 1f       	adc	r20, r16
     c5e:	51 1f       	adc	r21, r17
     c60:	15 01       	movw	r2, r10
     c62:	26 01       	movw	r4, r12
     c64:	28 0e       	add	r2, r24
     c66:	39 1e       	adc	r3, r25
     c68:	4a 1e       	adc	r4, r26
     c6a:	5b 1e       	adc	r5, r27
     c6c:	81 e0       	ldi	r24, 0x01	; 1
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	a0 e0       	ldi	r26, 0x00	; 0
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	2e 15       	cp	r18, r14
     c76:	3f 05       	cpc	r19, r15
     c78:	40 07       	cpc	r20, r16
     c7a:	51 07       	cpc	r21, r17
     c7c:	18 f0       	brcs	.+6      	; 0xc84 <__mulsf3+0xe6>
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	dc 01       	movw	r26, r24
     c84:	82 0d       	add	r24, r2
     c86:	93 1d       	adc	r25, r3
     c88:	a4 1d       	adc	r26, r4
     c8a:	b5 1d       	adc	r27, r5
     c8c:	aa 0c       	add	r10, r10
     c8e:	bb 1c       	adc	r11, r11
     c90:	cc 1c       	adc	r12, r12
     c92:	dd 1c       	adc	r13, r13
     c94:	17 ff       	sbrs	r17, 7
     c96:	09 c0       	rjmp	.+18     	; 0xcaa <__mulsf3+0x10c>
     c98:	61 e0       	ldi	r22, 0x01	; 1
     c9a:	26 2e       	mov	r2, r22
     c9c:	31 2c       	mov	r3, r1
     c9e:	41 2c       	mov	r4, r1
     ca0:	51 2c       	mov	r5, r1
     ca2:	a2 28       	or	r10, r2
     ca4:	b3 28       	or	r11, r3
     ca6:	c4 28       	or	r12, r4
     ca8:	d5 28       	or	r13, r5
     caa:	31 97       	sbiw	r30, 0x01	; 1
     cac:	49 f0       	breq	.+18     	; 0xcc0 <__mulsf3+0x122>
     cae:	ee 0c       	add	r14, r14
     cb0:	ff 1c       	adc	r15, r15
     cb2:	00 1f       	adc	r16, r16
     cb4:	11 1f       	adc	r17, r17
     cb6:	96 94       	lsr	r9
     cb8:	87 94       	ror	r8
     cba:	77 94       	ror	r7
     cbc:	67 94       	ror	r6
     cbe:	c6 cf       	rjmp	.-116    	; 0xc4c <__mulsf3+0xae>
     cc0:	6b 89       	ldd	r22, Y+19	; 0x13
     cc2:	7c 89       	ldd	r23, Y+20	; 0x14
     cc4:	eb 85       	ldd	r30, Y+11	; 0x0b
     cc6:	fc 85       	ldd	r31, Y+12	; 0x0c
     cc8:	6e 0f       	add	r22, r30
     cca:	7f 1f       	adc	r23, r31
     ccc:	6e 5f       	subi	r22, 0xFE	; 254
     cce:	7f 4f       	sbci	r23, 0xFF	; 255
     cd0:	7c 8f       	std	Y+28, r23	; 0x1c
     cd2:	6b 8f       	std	Y+27, r22	; 0x1b
     cd4:	61 e0       	ldi	r22, 0x01	; 1
     cd6:	ea 85       	ldd	r30, Y+10	; 0x0a
     cd8:	7a 89       	ldd	r23, Y+18	; 0x12
     cda:	e7 17       	cp	r30, r23
     cdc:	09 f4       	brne	.+2      	; 0xce0 <__mulsf3+0x142>
     cde:	60 e0       	ldi	r22, 0x00	; 0
     ce0:	6a 8f       	std	Y+26, r22	; 0x1a
     ce2:	6b 8d       	ldd	r22, Y+27	; 0x1b
     ce4:	7c 8d       	ldd	r23, Y+28	; 0x1c
     ce6:	10 c0       	rjmp	.+32     	; 0xd08 <__mulsf3+0x16a>
     ce8:	fc 01       	movw	r30, r24
     cea:	e1 70       	andi	r30, 0x01	; 1
     cec:	f0 70       	andi	r31, 0x00	; 0
     cee:	30 97       	sbiw	r30, 0x00	; 0
     cf0:	29 f0       	breq	.+10     	; 0xcfc <__mulsf3+0x15e>
     cf2:	56 95       	lsr	r21
     cf4:	47 95       	ror	r20
     cf6:	37 95       	ror	r19
     cf8:	27 95       	ror	r18
     cfa:	50 68       	ori	r21, 0x80	; 128
     cfc:	b6 95       	lsr	r27
     cfe:	a7 95       	ror	r26
     d00:	97 95       	ror	r25
     d02:	87 95       	ror	r24
     d04:	6f 5f       	subi	r22, 0xFF	; 255
     d06:	7f 4f       	sbci	r23, 0xFF	; 255
     d08:	b7 fd       	sbrc	r27, 7
     d0a:	ee cf       	rjmp	.-36     	; 0xce8 <__mulsf3+0x14a>
     d0c:	0c c0       	rjmp	.+24     	; 0xd26 <__mulsf3+0x188>
     d0e:	88 0f       	add	r24, r24
     d10:	99 1f       	adc	r25, r25
     d12:	aa 1f       	adc	r26, r26
     d14:	bb 1f       	adc	r27, r27
     d16:	57 fd       	sbrc	r21, 7
     d18:	81 60       	ori	r24, 0x01	; 1
     d1a:	22 0f       	add	r18, r18
     d1c:	33 1f       	adc	r19, r19
     d1e:	44 1f       	adc	r20, r20
     d20:	55 1f       	adc	r21, r21
     d22:	61 50       	subi	r22, 0x01	; 1
     d24:	70 40       	sbci	r23, 0x00	; 0
     d26:	80 30       	cpi	r24, 0x00	; 0
     d28:	e0 e0       	ldi	r30, 0x00	; 0
     d2a:	9e 07       	cpc	r25, r30
     d2c:	e0 e0       	ldi	r30, 0x00	; 0
     d2e:	ae 07       	cpc	r26, r30
     d30:	e0 e4       	ldi	r30, 0x40	; 64
     d32:	be 07       	cpc	r27, r30
     d34:	60 f3       	brcs	.-40     	; 0xd0e <__mulsf3+0x170>
     d36:	6b 8f       	std	Y+27, r22	; 0x1b
     d38:	7c 8f       	std	Y+28, r23	; 0x1c
     d3a:	6f e7       	ldi	r22, 0x7F	; 127
     d3c:	e6 2e       	mov	r14, r22
     d3e:	f1 2c       	mov	r15, r1
     d40:	01 2d       	mov	r16, r1
     d42:	11 2d       	mov	r17, r1
     d44:	e8 22       	and	r14, r24
     d46:	f9 22       	and	r15, r25
     d48:	0a 23       	and	r16, r26
     d4a:	1b 23       	and	r17, r27
     d4c:	60 e4       	ldi	r22, 0x40	; 64
     d4e:	e6 16       	cp	r14, r22
     d50:	f1 04       	cpc	r15, r1
     d52:	01 05       	cpc	r16, r1
     d54:	11 05       	cpc	r17, r1
     d56:	61 f4       	brne	.+24     	; 0xd70 <__mulsf3+0x1d2>
     d58:	87 fd       	sbrc	r24, 7
     d5a:	0a c0       	rjmp	.+20     	; 0xd70 <__mulsf3+0x1d2>
     d5c:	21 15       	cp	r18, r1
     d5e:	31 05       	cpc	r19, r1
     d60:	41 05       	cpc	r20, r1
     d62:	51 05       	cpc	r21, r1
     d64:	29 f0       	breq	.+10     	; 0xd70 <__mulsf3+0x1d2>
     d66:	80 5c       	subi	r24, 0xC0	; 192
     d68:	9f 4f       	sbci	r25, 0xFF	; 255
     d6a:	af 4f       	sbci	r26, 0xFF	; 255
     d6c:	bf 4f       	sbci	r27, 0xFF	; 255
     d6e:	80 78       	andi	r24, 0x80	; 128
     d70:	8d 8f       	std	Y+29, r24	; 0x1d
     d72:	9e 8f       	std	Y+30, r25	; 0x1e
     d74:	af 8f       	std	Y+31, r26	; 0x1f
     d76:	b8 a3       	std	Y+32, r27	; 0x20
     d78:	83 e0       	ldi	r24, 0x03	; 3
     d7a:	89 8f       	std	Y+25, r24	; 0x19
     d7c:	ce 01       	movw	r24, r28
     d7e:	49 96       	adiw	r24, 0x19	; 25
     d80:	02 c0       	rjmp	.+4      	; 0xd86 <__mulsf3+0x1e8>
     d82:	83 e0       	ldi	r24, 0x03	; 3
     d84:	91 e0       	ldi	r25, 0x01	; 1
     d86:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__pack_f>
     d8a:	a0 96       	adiw	r28, 0x20	; 32
     d8c:	e2 e1       	ldi	r30, 0x12	; 18
     d8e:	0c 94 05 0a 	jmp	0x140a	; 0x140a <__epilogue_restores__>

00000d92 <__divsf3>:
     d92:	a8 e1       	ldi	r26, 0x18	; 24
     d94:	b0 e0       	ldi	r27, 0x00	; 0
     d96:	ef ec       	ldi	r30, 0xCF	; 207
     d98:	f6 e0       	ldi	r31, 0x06	; 6
     d9a:	0c 94 f1 09 	jmp	0x13e2	; 0x13e2 <__prologue_saves__+0x10>
     d9e:	69 83       	std	Y+1, r22	; 0x01
     da0:	7a 83       	std	Y+2, r23	; 0x02
     da2:	8b 83       	std	Y+3, r24	; 0x03
     da4:	9c 83       	std	Y+4, r25	; 0x04
     da6:	2d 83       	std	Y+5, r18	; 0x05
     da8:	3e 83       	std	Y+6, r19	; 0x06
     daa:	4f 83       	std	Y+7, r20	; 0x07
     dac:	58 87       	std	Y+8, r21	; 0x08
     dae:	8e 01       	movw	r16, r28
     db0:	07 5f       	subi	r16, 0xF7	; 247
     db2:	1f 4f       	sbci	r17, 0xFF	; 255
     db4:	ce 01       	movw	r24, r28
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	b8 01       	movw	r22, r16
     dba:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     dbe:	81 e1       	ldi	r24, 0x11	; 17
     dc0:	e8 2e       	mov	r14, r24
     dc2:	f1 2c       	mov	r15, r1
     dc4:	ec 0e       	add	r14, r28
     dc6:	fd 1e       	adc	r15, r29
     dc8:	ce 01       	movw	r24, r28
     dca:	05 96       	adiw	r24, 0x05	; 5
     dcc:	b7 01       	movw	r22, r14
     dce:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     dd2:	99 85       	ldd	r25, Y+9	; 0x09
     dd4:	92 30       	cpi	r25, 0x02	; 2
     dd6:	08 f4       	brcc	.+2      	; 0xdda <__divsf3+0x48>
     dd8:	83 c0       	rjmp	.+262    	; 0xee0 <__divsf3+0x14e>
     dda:	89 89       	ldd	r24, Y+17	; 0x11
     ddc:	82 30       	cpi	r24, 0x02	; 2
     dde:	08 f4       	brcc	.+2      	; 0xde2 <__divsf3+0x50>
     de0:	7b c0       	rjmp	.+246    	; 0xed8 <__divsf3+0x146>
     de2:	2a 85       	ldd	r18, Y+10	; 0x0a
     de4:	3a 89       	ldd	r19, Y+18	; 0x12
     de6:	23 27       	eor	r18, r19
     de8:	2a 87       	std	Y+10, r18	; 0x0a
     dea:	94 30       	cpi	r25, 0x04	; 4
     dec:	11 f0       	breq	.+4      	; 0xdf2 <__divsf3+0x60>
     dee:	92 30       	cpi	r25, 0x02	; 2
     df0:	21 f4       	brne	.+8      	; 0xdfa <__divsf3+0x68>
     df2:	98 17       	cp	r25, r24
     df4:	09 f0       	breq	.+2      	; 0xdf8 <__divsf3+0x66>
     df6:	6c c0       	rjmp	.+216    	; 0xed0 <__divsf3+0x13e>
     df8:	71 c0       	rjmp	.+226    	; 0xedc <__divsf3+0x14a>
     dfa:	84 30       	cpi	r24, 0x04	; 4
     dfc:	39 f4       	brne	.+14     	; 0xe0c <__divsf3+0x7a>
     dfe:	1d 86       	std	Y+13, r1	; 0x0d
     e00:	1e 86       	std	Y+14, r1	; 0x0e
     e02:	1f 86       	std	Y+15, r1	; 0x0f
     e04:	18 8a       	std	Y+16, r1	; 0x10
     e06:	1c 86       	std	Y+12, r1	; 0x0c
     e08:	1b 86       	std	Y+11, r1	; 0x0b
     e0a:	6a c0       	rjmp	.+212    	; 0xee0 <__divsf3+0x14e>
     e0c:	82 30       	cpi	r24, 0x02	; 2
     e0e:	19 f4       	brne	.+6      	; 0xe16 <__divsf3+0x84>
     e10:	84 e0       	ldi	r24, 0x04	; 4
     e12:	89 87       	std	Y+9, r24	; 0x09
     e14:	65 c0       	rjmp	.+202    	; 0xee0 <__divsf3+0x14e>
     e16:	8b 85       	ldd	r24, Y+11	; 0x0b
     e18:	9c 85       	ldd	r25, Y+12	; 0x0c
     e1a:	2b 89       	ldd	r18, Y+19	; 0x13
     e1c:	3c 89       	ldd	r19, Y+20	; 0x14
     e1e:	82 1b       	sub	r24, r18
     e20:	93 0b       	sbc	r25, r19
     e22:	9c 87       	std	Y+12, r25	; 0x0c
     e24:	8b 87       	std	Y+11, r24	; 0x0b
     e26:	2d 85       	ldd	r18, Y+13	; 0x0d
     e28:	3e 85       	ldd	r19, Y+14	; 0x0e
     e2a:	4f 85       	ldd	r20, Y+15	; 0x0f
     e2c:	58 89       	ldd	r21, Y+16	; 0x10
     e2e:	ed 88       	ldd	r14, Y+21	; 0x15
     e30:	fe 88       	ldd	r15, Y+22	; 0x16
     e32:	0f 89       	ldd	r16, Y+23	; 0x17
     e34:	18 8d       	ldd	r17, Y+24	; 0x18
     e36:	2e 15       	cp	r18, r14
     e38:	3f 05       	cpc	r19, r15
     e3a:	40 07       	cpc	r20, r16
     e3c:	51 07       	cpc	r21, r17
     e3e:	38 f4       	brcc	.+14     	; 0xe4e <__divsf3+0xbc>
     e40:	22 0f       	add	r18, r18
     e42:	33 1f       	adc	r19, r19
     e44:	44 1f       	adc	r20, r20
     e46:	55 1f       	adc	r21, r21
     e48:	01 97       	sbiw	r24, 0x01	; 1
     e4a:	9c 87       	std	Y+12, r25	; 0x0c
     e4c:	8b 87       	std	Y+11, r24	; 0x0b
     e4e:	6f e1       	ldi	r22, 0x1F	; 31
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	a1 2c       	mov	r10, r1
     e54:	b1 2c       	mov	r11, r1
     e56:	c1 2c       	mov	r12, r1
     e58:	a0 e4       	ldi	r26, 0x40	; 64
     e5a:	da 2e       	mov	r13, r26
     e5c:	80 e0       	ldi	r24, 0x00	; 0
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	dc 01       	movw	r26, r24
     e62:	2e 15       	cp	r18, r14
     e64:	3f 05       	cpc	r19, r15
     e66:	40 07       	cpc	r20, r16
     e68:	51 07       	cpc	r21, r17
     e6a:	40 f0       	brcs	.+16     	; 0xe7c <__divsf3+0xea>
     e6c:	8a 29       	or	r24, r10
     e6e:	9b 29       	or	r25, r11
     e70:	ac 29       	or	r26, r12
     e72:	bd 29       	or	r27, r13
     e74:	2e 19       	sub	r18, r14
     e76:	3f 09       	sbc	r19, r15
     e78:	40 0b       	sbc	r20, r16
     e7a:	51 0b       	sbc	r21, r17
     e7c:	d6 94       	lsr	r13
     e7e:	c7 94       	ror	r12
     e80:	b7 94       	ror	r11
     e82:	a7 94       	ror	r10
     e84:	22 0f       	add	r18, r18
     e86:	33 1f       	adc	r19, r19
     e88:	44 1f       	adc	r20, r20
     e8a:	55 1f       	adc	r21, r21
     e8c:	61 50       	subi	r22, 0x01	; 1
     e8e:	70 40       	sbci	r23, 0x00	; 0
     e90:	41 f7       	brne	.-48     	; 0xe62 <__divsf3+0xd0>
     e92:	6f e7       	ldi	r22, 0x7F	; 127
     e94:	e6 2e       	mov	r14, r22
     e96:	f1 2c       	mov	r15, r1
     e98:	01 2d       	mov	r16, r1
     e9a:	11 2d       	mov	r17, r1
     e9c:	e8 22       	and	r14, r24
     e9e:	f9 22       	and	r15, r25
     ea0:	0a 23       	and	r16, r26
     ea2:	1b 23       	and	r17, r27
     ea4:	60 e4       	ldi	r22, 0x40	; 64
     ea6:	e6 16       	cp	r14, r22
     ea8:	f1 04       	cpc	r15, r1
     eaa:	01 05       	cpc	r16, r1
     eac:	11 05       	cpc	r17, r1
     eae:	61 f4       	brne	.+24     	; 0xec8 <__divsf3+0x136>
     eb0:	87 fd       	sbrc	r24, 7
     eb2:	0a c0       	rjmp	.+20     	; 0xec8 <__divsf3+0x136>
     eb4:	21 15       	cp	r18, r1
     eb6:	31 05       	cpc	r19, r1
     eb8:	41 05       	cpc	r20, r1
     eba:	51 05       	cpc	r21, r1
     ebc:	29 f0       	breq	.+10     	; 0xec8 <__divsf3+0x136>
     ebe:	80 5c       	subi	r24, 0xC0	; 192
     ec0:	9f 4f       	sbci	r25, 0xFF	; 255
     ec2:	af 4f       	sbci	r26, 0xFF	; 255
     ec4:	bf 4f       	sbci	r27, 0xFF	; 255
     ec6:	80 78       	andi	r24, 0x80	; 128
     ec8:	8d 87       	std	Y+13, r24	; 0x0d
     eca:	9e 87       	std	Y+14, r25	; 0x0e
     ecc:	af 87       	std	Y+15, r26	; 0x0f
     ece:	b8 8b       	std	Y+16, r27	; 0x10
     ed0:	8e 01       	movw	r16, r28
     ed2:	07 5f       	subi	r16, 0xF7	; 247
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	04 c0       	rjmp	.+8      	; 0xee0 <__divsf3+0x14e>
     ed8:	87 01       	movw	r16, r14
     eda:	02 c0       	rjmp	.+4      	; 0xee0 <__divsf3+0x14e>
     edc:	03 e0       	ldi	r16, 0x03	; 3
     ede:	11 e0       	ldi	r17, 0x01	; 1
     ee0:	c8 01       	movw	r24, r16
     ee2:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__pack_f>
     ee6:	68 96       	adiw	r28, 0x18	; 24
     ee8:	ea e0       	ldi	r30, 0x0A	; 10
     eea:	0c 94 0d 0a 	jmp	0x141a	; 0x141a <__epilogue_restores__+0x10>

00000eee <__gtsf2>:
     eee:	a8 e1       	ldi	r26, 0x18	; 24
     ef0:	b0 e0       	ldi	r27, 0x00	; 0
     ef2:	ed e7       	ldi	r30, 0x7D	; 125
     ef4:	f7 e0       	ldi	r31, 0x07	; 7
     ef6:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__prologue_saves__+0x18>
     efa:	69 83       	std	Y+1, r22	; 0x01
     efc:	7a 83       	std	Y+2, r23	; 0x02
     efe:	8b 83       	std	Y+3, r24	; 0x03
     f00:	9c 83       	std	Y+4, r25	; 0x04
     f02:	2d 83       	std	Y+5, r18	; 0x05
     f04:	3e 83       	std	Y+6, r19	; 0x06
     f06:	4f 83       	std	Y+7, r20	; 0x07
     f08:	58 87       	std	Y+8, r21	; 0x08
     f0a:	8e 01       	movw	r16, r28
     f0c:	07 5f       	subi	r16, 0xF7	; 247
     f0e:	1f 4f       	sbci	r17, 0xFF	; 255
     f10:	ce 01       	movw	r24, r28
     f12:	01 96       	adiw	r24, 0x01	; 1
     f14:	b8 01       	movw	r22, r16
     f16:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     f1a:	81 e1       	ldi	r24, 0x11	; 17
     f1c:	e8 2e       	mov	r14, r24
     f1e:	f1 2c       	mov	r15, r1
     f20:	ec 0e       	add	r14, r28
     f22:	fd 1e       	adc	r15, r29
     f24:	ce 01       	movw	r24, r28
     f26:	05 96       	adiw	r24, 0x05	; 5
     f28:	b7 01       	movw	r22, r14
     f2a:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     f2e:	89 85       	ldd	r24, Y+9	; 0x09
     f30:	82 30       	cpi	r24, 0x02	; 2
     f32:	40 f0       	brcs	.+16     	; 0xf44 <__gtsf2+0x56>
     f34:	89 89       	ldd	r24, Y+17	; 0x11
     f36:	82 30       	cpi	r24, 0x02	; 2
     f38:	28 f0       	brcs	.+10     	; 0xf44 <__gtsf2+0x56>
     f3a:	c8 01       	movw	r24, r16
     f3c:	b7 01       	movw	r22, r14
     f3e:	0e 94 90 09 	call	0x1320	; 0x1320 <__fpcmp_parts_f>
     f42:	01 c0       	rjmp	.+2      	; 0xf46 <__gtsf2+0x58>
     f44:	8f ef       	ldi	r24, 0xFF	; 255
     f46:	68 96       	adiw	r28, 0x18	; 24
     f48:	e6 e0       	ldi	r30, 0x06	; 6
     f4a:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__epilogue_restores__+0x18>

00000f4e <__gesf2>:
     f4e:	a8 e1       	ldi	r26, 0x18	; 24
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	ed ea       	ldi	r30, 0xAD	; 173
     f54:	f7 e0       	ldi	r31, 0x07	; 7
     f56:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__prologue_saves__+0x18>
     f5a:	69 83       	std	Y+1, r22	; 0x01
     f5c:	7a 83       	std	Y+2, r23	; 0x02
     f5e:	8b 83       	std	Y+3, r24	; 0x03
     f60:	9c 83       	std	Y+4, r25	; 0x04
     f62:	2d 83       	std	Y+5, r18	; 0x05
     f64:	3e 83       	std	Y+6, r19	; 0x06
     f66:	4f 83       	std	Y+7, r20	; 0x07
     f68:	58 87       	std	Y+8, r21	; 0x08
     f6a:	8e 01       	movw	r16, r28
     f6c:	07 5f       	subi	r16, 0xF7	; 247
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
     f70:	ce 01       	movw	r24, r28
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	b8 01       	movw	r22, r16
     f76:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     f7a:	81 e1       	ldi	r24, 0x11	; 17
     f7c:	e8 2e       	mov	r14, r24
     f7e:	f1 2c       	mov	r15, r1
     f80:	ec 0e       	add	r14, r28
     f82:	fd 1e       	adc	r15, r29
     f84:	ce 01       	movw	r24, r28
     f86:	05 96       	adiw	r24, 0x05	; 5
     f88:	b7 01       	movw	r22, r14
     f8a:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     f8e:	89 85       	ldd	r24, Y+9	; 0x09
     f90:	82 30       	cpi	r24, 0x02	; 2
     f92:	40 f0       	brcs	.+16     	; 0xfa4 <__gesf2+0x56>
     f94:	89 89       	ldd	r24, Y+17	; 0x11
     f96:	82 30       	cpi	r24, 0x02	; 2
     f98:	28 f0       	brcs	.+10     	; 0xfa4 <__gesf2+0x56>
     f9a:	c8 01       	movw	r24, r16
     f9c:	b7 01       	movw	r22, r14
     f9e:	0e 94 90 09 	call	0x1320	; 0x1320 <__fpcmp_parts_f>
     fa2:	01 c0       	rjmp	.+2      	; 0xfa6 <__gesf2+0x58>
     fa4:	8f ef       	ldi	r24, 0xFF	; 255
     fa6:	68 96       	adiw	r28, 0x18	; 24
     fa8:	e6 e0       	ldi	r30, 0x06	; 6
     faa:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__epilogue_restores__+0x18>

00000fae <__ltsf2>:
     fae:	a8 e1       	ldi	r26, 0x18	; 24
     fb0:	b0 e0       	ldi	r27, 0x00	; 0
     fb2:	ed ed       	ldi	r30, 0xDD	; 221
     fb4:	f7 e0       	ldi	r31, 0x07	; 7
     fb6:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__prologue_saves__+0x18>
     fba:	69 83       	std	Y+1, r22	; 0x01
     fbc:	7a 83       	std	Y+2, r23	; 0x02
     fbe:	8b 83       	std	Y+3, r24	; 0x03
     fc0:	9c 83       	std	Y+4, r25	; 0x04
     fc2:	2d 83       	std	Y+5, r18	; 0x05
     fc4:	3e 83       	std	Y+6, r19	; 0x06
     fc6:	4f 83       	std	Y+7, r20	; 0x07
     fc8:	58 87       	std	Y+8, r21	; 0x08
     fca:	8e 01       	movw	r16, r28
     fcc:	07 5f       	subi	r16, 0xF7	; 247
     fce:	1f 4f       	sbci	r17, 0xFF	; 255
     fd0:	ce 01       	movw	r24, r28
     fd2:	01 96       	adiw	r24, 0x01	; 1
     fd4:	b8 01       	movw	r22, r16
     fd6:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     fda:	81 e1       	ldi	r24, 0x11	; 17
     fdc:	e8 2e       	mov	r14, r24
     fde:	f1 2c       	mov	r15, r1
     fe0:	ec 0e       	add	r14, r28
     fe2:	fd 1e       	adc	r15, r29
     fe4:	ce 01       	movw	r24, r28
     fe6:	05 96       	adiw	r24, 0x05	; 5
     fe8:	b7 01       	movw	r22, r14
     fea:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
     fee:	89 85       	ldd	r24, Y+9	; 0x09
     ff0:	82 30       	cpi	r24, 0x02	; 2
     ff2:	40 f0       	brcs	.+16     	; 0x1004 <__ltsf2+0x56>
     ff4:	89 89       	ldd	r24, Y+17	; 0x11
     ff6:	82 30       	cpi	r24, 0x02	; 2
     ff8:	28 f0       	brcs	.+10     	; 0x1004 <__ltsf2+0x56>
     ffa:	c8 01       	movw	r24, r16
     ffc:	b7 01       	movw	r22, r14
     ffe:	0e 94 90 09 	call	0x1320	; 0x1320 <__fpcmp_parts_f>
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <__ltsf2+0x58>
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	68 96       	adiw	r28, 0x18	; 24
    1008:	e6 e0       	ldi	r30, 0x06	; 6
    100a:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__epilogue_restores__+0x18>

0000100e <__fixsfsi>:
    100e:	ac e0       	ldi	r26, 0x0C	; 12
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	ed e0       	ldi	r30, 0x0D	; 13
    1014:	f8 e0       	ldi	r31, 0x08	; 8
    1016:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__prologue_saves__+0x20>
    101a:	69 83       	std	Y+1, r22	; 0x01
    101c:	7a 83       	std	Y+2, r23	; 0x02
    101e:	8b 83       	std	Y+3, r24	; 0x03
    1020:	9c 83       	std	Y+4, r25	; 0x04
    1022:	ce 01       	movw	r24, r28
    1024:	01 96       	adiw	r24, 0x01	; 1
    1026:	be 01       	movw	r22, r28
    1028:	6b 5f       	subi	r22, 0xFB	; 251
    102a:	7f 4f       	sbci	r23, 0xFF	; 255
    102c:	0e 94 27 09 	call	0x124e	; 0x124e <__unpack_f>
    1030:	8d 81       	ldd	r24, Y+5	; 0x05
    1032:	82 30       	cpi	r24, 0x02	; 2
    1034:	81 f1       	breq	.+96     	; 0x1096 <__fixsfsi+0x88>
    1036:	82 30       	cpi	r24, 0x02	; 2
    1038:	70 f1       	brcs	.+92     	; 0x1096 <__fixsfsi+0x88>
    103a:	84 30       	cpi	r24, 0x04	; 4
    103c:	21 f4       	brne	.+8      	; 0x1046 <__fixsfsi+0x38>
    103e:	8e 81       	ldd	r24, Y+6	; 0x06
    1040:	88 23       	and	r24, r24
    1042:	69 f1       	breq	.+90     	; 0x109e <__fixsfsi+0x90>
    1044:	0a c0       	rjmp	.+20     	; 0x105a <__fixsfsi+0x4c>
    1046:	2f 81       	ldd	r18, Y+7	; 0x07
    1048:	38 85       	ldd	r19, Y+8	; 0x08
    104a:	37 fd       	sbrc	r19, 7
    104c:	24 c0       	rjmp	.+72     	; 0x1096 <__fixsfsi+0x88>
    104e:	6e 81       	ldd	r22, Y+6	; 0x06
    1050:	2f 31       	cpi	r18, 0x1F	; 31
    1052:	31 05       	cpc	r19, r1
    1054:	3c f0       	brlt	.+14     	; 0x1064 <__fixsfsi+0x56>
    1056:	66 23       	and	r22, r22
    1058:	11 f1       	breq	.+68     	; 0x109e <__fixsfsi+0x90>
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	40 e0       	ldi	r20, 0x00	; 0
    1060:	50 e8       	ldi	r21, 0x80	; 128
    1062:	21 c0       	rjmp	.+66     	; 0x10a6 <__fixsfsi+0x98>
    1064:	8e e1       	ldi	r24, 0x1E	; 30
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	82 1b       	sub	r24, r18
    106a:	93 0b       	sbc	r25, r19
    106c:	29 85       	ldd	r18, Y+9	; 0x09
    106e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1070:	4b 85       	ldd	r20, Y+11	; 0x0b
    1072:	5c 85       	ldd	r21, Y+12	; 0x0c
    1074:	04 c0       	rjmp	.+8      	; 0x107e <__fixsfsi+0x70>
    1076:	56 95       	lsr	r21
    1078:	47 95       	ror	r20
    107a:	37 95       	ror	r19
    107c:	27 95       	ror	r18
    107e:	8a 95       	dec	r24
    1080:	d2 f7       	brpl	.-12     	; 0x1076 <__fixsfsi+0x68>
    1082:	66 23       	and	r22, r22
    1084:	81 f0       	breq	.+32     	; 0x10a6 <__fixsfsi+0x98>
    1086:	50 95       	com	r21
    1088:	40 95       	com	r20
    108a:	30 95       	com	r19
    108c:	21 95       	neg	r18
    108e:	3f 4f       	sbci	r19, 0xFF	; 255
    1090:	4f 4f       	sbci	r20, 0xFF	; 255
    1092:	5f 4f       	sbci	r21, 0xFF	; 255
    1094:	08 c0       	rjmp	.+16     	; 0x10a6 <__fixsfsi+0x98>
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	30 e0       	ldi	r19, 0x00	; 0
    109a:	a9 01       	movw	r20, r18
    109c:	04 c0       	rjmp	.+8      	; 0x10a6 <__fixsfsi+0x98>
    109e:	2f ef       	ldi	r18, 0xFF	; 255
    10a0:	3f ef       	ldi	r19, 0xFF	; 255
    10a2:	4f ef       	ldi	r20, 0xFF	; 255
    10a4:	5f e7       	ldi	r21, 0x7F	; 127
    10a6:	b9 01       	movw	r22, r18
    10a8:	ca 01       	movw	r24, r20
    10aa:	2c 96       	adiw	r28, 0x0c	; 12
    10ac:	e2 e0       	ldi	r30, 0x02	; 2
    10ae:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__epilogue_restores__+0x20>

000010b2 <__pack_f>:
    10b2:	ef 92       	push	r14
    10b4:	ff 92       	push	r15
    10b6:	0f 93       	push	r16
    10b8:	1f 93       	push	r17
    10ba:	cf 93       	push	r28
    10bc:	df 93       	push	r29
    10be:	fc 01       	movw	r30, r24
    10c0:	24 81       	ldd	r18, Z+4	; 0x04
    10c2:	35 81       	ldd	r19, Z+5	; 0x05
    10c4:	46 81       	ldd	r20, Z+6	; 0x06
    10c6:	57 81       	ldd	r21, Z+7	; 0x07
    10c8:	61 81       	ldd	r22, Z+1	; 0x01
    10ca:	80 81       	ld	r24, Z
    10cc:	82 30       	cpi	r24, 0x02	; 2
    10ce:	20 f4       	brcc	.+8      	; 0x10d8 <__pack_f+0x26>
    10d0:	40 61       	ori	r20, 0x10	; 16
    10d2:	ef ef       	ldi	r30, 0xFF	; 255
    10d4:	f0 e0       	ldi	r31, 0x00	; 0
    10d6:	a3 c0       	rjmp	.+326    	; 0x121e <__pack_f+0x16c>
    10d8:	84 30       	cpi	r24, 0x04	; 4
    10da:	09 f4       	brne	.+2      	; 0x10de <__pack_f+0x2c>
    10dc:	9b c0       	rjmp	.+310    	; 0x1214 <__pack_f+0x162>
    10de:	82 30       	cpi	r24, 0x02	; 2
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <__pack_f+0x32>
    10e2:	92 c0       	rjmp	.+292    	; 0x1208 <__pack_f+0x156>
    10e4:	21 15       	cp	r18, r1
    10e6:	31 05       	cpc	r19, r1
    10e8:	41 05       	cpc	r20, r1
    10ea:	51 05       	cpc	r21, r1
    10ec:	09 f4       	brne	.+2      	; 0x10f0 <__pack_f+0x3e>
    10ee:	8f c0       	rjmp	.+286    	; 0x120e <__pack_f+0x15c>
    10f0:	02 80       	ldd	r0, Z+2	; 0x02
    10f2:	f3 81       	ldd	r31, Z+3	; 0x03
    10f4:	e0 2d       	mov	r30, r0
    10f6:	8f ef       	ldi	r24, 0xFF	; 255
    10f8:	e2 38       	cpi	r30, 0x82	; 130
    10fa:	f8 07       	cpc	r31, r24
    10fc:	0c f0       	brlt	.+2      	; 0x1100 <__pack_f+0x4e>
    10fe:	5a c0       	rjmp	.+180    	; 0x11b4 <__pack_f+0x102>
    1100:	c2 e8       	ldi	r28, 0x82	; 130
    1102:	df ef       	ldi	r29, 0xFF	; 255
    1104:	ce 1b       	sub	r28, r30
    1106:	df 0b       	sbc	r29, r31
    1108:	ca 31       	cpi	r28, 0x1A	; 26
    110a:	d1 05       	cpc	r29, r1
    110c:	6c f5       	brge	.+90     	; 0x1168 <__pack_f+0xb6>
    110e:	79 01       	movw	r14, r18
    1110:	8a 01       	movw	r16, r20
    1112:	0c 2e       	mov	r0, r28
    1114:	04 c0       	rjmp	.+8      	; 0x111e <__pack_f+0x6c>
    1116:	16 95       	lsr	r17
    1118:	07 95       	ror	r16
    111a:	f7 94       	ror	r15
    111c:	e7 94       	ror	r14
    111e:	0a 94       	dec	r0
    1120:	d2 f7       	brpl	.-12     	; 0x1116 <__pack_f+0x64>
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	a0 e0       	ldi	r26, 0x00	; 0
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	0c 2e       	mov	r0, r28
    112c:	04 c0       	rjmp	.+8      	; 0x1136 <__pack_f+0x84>
    112e:	88 0f       	add	r24, r24
    1130:	99 1f       	adc	r25, r25
    1132:	aa 1f       	adc	r26, r26
    1134:	bb 1f       	adc	r27, r27
    1136:	0a 94       	dec	r0
    1138:	d2 f7       	brpl	.-12     	; 0x112e <__pack_f+0x7c>
    113a:	01 97       	sbiw	r24, 0x01	; 1
    113c:	a1 09       	sbc	r26, r1
    113e:	b1 09       	sbc	r27, r1
    1140:	82 23       	and	r24, r18
    1142:	93 23       	and	r25, r19
    1144:	a4 23       	and	r26, r20
    1146:	b5 23       	and	r27, r21
    1148:	21 e0       	ldi	r18, 0x01	; 1
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	40 e0       	ldi	r20, 0x00	; 0
    114e:	50 e0       	ldi	r21, 0x00	; 0
    1150:	00 97       	sbiw	r24, 0x00	; 0
    1152:	a1 05       	cpc	r26, r1
    1154:	b1 05       	cpc	r27, r1
    1156:	19 f4       	brne	.+6      	; 0x115e <__pack_f+0xac>
    1158:	20 e0       	ldi	r18, 0x00	; 0
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	a9 01       	movw	r20, r18
    115e:	2e 29       	or	r18, r14
    1160:	3f 29       	or	r19, r15
    1162:	40 2b       	or	r20, r16
    1164:	51 2b       	or	r21, r17
    1166:	03 c0       	rjmp	.+6      	; 0x116e <__pack_f+0xbc>
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	a9 01       	movw	r20, r18
    116e:	da 01       	movw	r26, r20
    1170:	c9 01       	movw	r24, r18
    1172:	8f 77       	andi	r24, 0x7F	; 127
    1174:	90 70       	andi	r25, 0x00	; 0
    1176:	a0 70       	andi	r26, 0x00	; 0
    1178:	b0 70       	andi	r27, 0x00	; 0
    117a:	80 34       	cpi	r24, 0x40	; 64
    117c:	91 05       	cpc	r25, r1
    117e:	a1 05       	cpc	r26, r1
    1180:	b1 05       	cpc	r27, r1
    1182:	39 f4       	brne	.+14     	; 0x1192 <__pack_f+0xe0>
    1184:	27 ff       	sbrs	r18, 7
    1186:	09 c0       	rjmp	.+18     	; 0x119a <__pack_f+0xe8>
    1188:	20 5c       	subi	r18, 0xC0	; 192
    118a:	3f 4f       	sbci	r19, 0xFF	; 255
    118c:	4f 4f       	sbci	r20, 0xFF	; 255
    118e:	5f 4f       	sbci	r21, 0xFF	; 255
    1190:	04 c0       	rjmp	.+8      	; 0x119a <__pack_f+0xe8>
    1192:	21 5c       	subi	r18, 0xC1	; 193
    1194:	3f 4f       	sbci	r19, 0xFF	; 255
    1196:	4f 4f       	sbci	r20, 0xFF	; 255
    1198:	5f 4f       	sbci	r21, 0xFF	; 255
    119a:	e1 e0       	ldi	r30, 0x01	; 1
    119c:	f0 e0       	ldi	r31, 0x00	; 0
    119e:	20 30       	cpi	r18, 0x00	; 0
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	38 07       	cpc	r19, r24
    11a4:	80 e0       	ldi	r24, 0x00	; 0
    11a6:	48 07       	cpc	r20, r24
    11a8:	80 e4       	ldi	r24, 0x40	; 64
    11aa:	58 07       	cpc	r21, r24
    11ac:	28 f5       	brcc	.+74     	; 0x11f8 <__pack_f+0x146>
    11ae:	e0 e0       	ldi	r30, 0x00	; 0
    11b0:	f0 e0       	ldi	r31, 0x00	; 0
    11b2:	22 c0       	rjmp	.+68     	; 0x11f8 <__pack_f+0x146>
    11b4:	e0 38       	cpi	r30, 0x80	; 128
    11b6:	f1 05       	cpc	r31, r1
    11b8:	6c f5       	brge	.+90     	; 0x1214 <__pack_f+0x162>
    11ba:	e1 58       	subi	r30, 0x81	; 129
    11bc:	ff 4f       	sbci	r31, 0xFF	; 255
    11be:	da 01       	movw	r26, r20
    11c0:	c9 01       	movw	r24, r18
    11c2:	8f 77       	andi	r24, 0x7F	; 127
    11c4:	90 70       	andi	r25, 0x00	; 0
    11c6:	a0 70       	andi	r26, 0x00	; 0
    11c8:	b0 70       	andi	r27, 0x00	; 0
    11ca:	80 34       	cpi	r24, 0x40	; 64
    11cc:	91 05       	cpc	r25, r1
    11ce:	a1 05       	cpc	r26, r1
    11d0:	b1 05       	cpc	r27, r1
    11d2:	39 f4       	brne	.+14     	; 0x11e2 <__pack_f+0x130>
    11d4:	27 ff       	sbrs	r18, 7
    11d6:	09 c0       	rjmp	.+18     	; 0x11ea <__pack_f+0x138>
    11d8:	20 5c       	subi	r18, 0xC0	; 192
    11da:	3f 4f       	sbci	r19, 0xFF	; 255
    11dc:	4f 4f       	sbci	r20, 0xFF	; 255
    11de:	5f 4f       	sbci	r21, 0xFF	; 255
    11e0:	04 c0       	rjmp	.+8      	; 0x11ea <__pack_f+0x138>
    11e2:	21 5c       	subi	r18, 0xC1	; 193
    11e4:	3f 4f       	sbci	r19, 0xFF	; 255
    11e6:	4f 4f       	sbci	r20, 0xFF	; 255
    11e8:	5f 4f       	sbci	r21, 0xFF	; 255
    11ea:	57 ff       	sbrs	r21, 7
    11ec:	05 c0       	rjmp	.+10     	; 0x11f8 <__pack_f+0x146>
    11ee:	56 95       	lsr	r21
    11f0:	47 95       	ror	r20
    11f2:	37 95       	ror	r19
    11f4:	27 95       	ror	r18
    11f6:	31 96       	adiw	r30, 0x01	; 1
    11f8:	87 e0       	ldi	r24, 0x07	; 7
    11fa:	56 95       	lsr	r21
    11fc:	47 95       	ror	r20
    11fe:	37 95       	ror	r19
    1200:	27 95       	ror	r18
    1202:	8a 95       	dec	r24
    1204:	d1 f7       	brne	.-12     	; 0x11fa <__pack_f+0x148>
    1206:	0b c0       	rjmp	.+22     	; 0x121e <__pack_f+0x16c>
    1208:	e0 e0       	ldi	r30, 0x00	; 0
    120a:	f0 e0       	ldi	r31, 0x00	; 0
    120c:	05 c0       	rjmp	.+10     	; 0x1218 <__pack_f+0x166>
    120e:	e0 e0       	ldi	r30, 0x00	; 0
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	05 c0       	rjmp	.+10     	; 0x121e <__pack_f+0x16c>
    1214:	ef ef       	ldi	r30, 0xFF	; 255
    1216:	f0 e0       	ldi	r31, 0x00	; 0
    1218:	20 e0       	ldi	r18, 0x00	; 0
    121a:	30 e0       	ldi	r19, 0x00	; 0
    121c:	a9 01       	movw	r20, r18
    121e:	8e 2f       	mov	r24, r30
    1220:	87 95       	ror	r24
    1222:	88 27       	eor	r24, r24
    1224:	87 95       	ror	r24
    1226:	94 2f       	mov	r25, r20
    1228:	9f 77       	andi	r25, 0x7F	; 127
    122a:	67 95       	ror	r22
    122c:	66 27       	eor	r22, r22
    122e:	67 95       	ror	r22
    1230:	e6 95       	lsr	r30
    1232:	e2 2e       	mov	r14, r18
    1234:	a9 2f       	mov	r26, r25
    1236:	a8 2b       	or	r26, r24
    1238:	fe 2f       	mov	r31, r30
    123a:	f6 2b       	or	r31, r22
    123c:	62 2f       	mov	r22, r18
    123e:	73 2f       	mov	r23, r19
    1240:	8a 2f       	mov	r24, r26
    1242:	9f 2f       	mov	r25, r31
    1244:	cd b7       	in	r28, 0x3d	; 61
    1246:	de b7       	in	r29, 0x3e	; 62
    1248:	e6 e0       	ldi	r30, 0x06	; 6
    124a:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__epilogue_restores__+0x18>

0000124e <__unpack_f>:
    124e:	dc 01       	movw	r26, r24
    1250:	fb 01       	movw	r30, r22
    1252:	2c 91       	ld	r18, X
    1254:	11 96       	adiw	r26, 0x01	; 1
    1256:	3c 91       	ld	r19, X
    1258:	11 97       	sbiw	r26, 0x01	; 1
    125a:	12 96       	adiw	r26, 0x02	; 2
    125c:	8c 91       	ld	r24, X
    125e:	12 97       	sbiw	r26, 0x02	; 2
    1260:	48 2f       	mov	r20, r24
    1262:	4f 77       	andi	r20, 0x7F	; 127
    1264:	50 e0       	ldi	r21, 0x00	; 0
    1266:	98 2f       	mov	r25, r24
    1268:	99 1f       	adc	r25, r25
    126a:	99 27       	eor	r25, r25
    126c:	99 1f       	adc	r25, r25
    126e:	13 96       	adiw	r26, 0x03	; 3
    1270:	6c 91       	ld	r22, X
    1272:	13 97       	sbiw	r26, 0x03	; 3
    1274:	86 2f       	mov	r24, r22
    1276:	88 0f       	add	r24, r24
    1278:	89 2b       	or	r24, r25
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	66 1f       	adc	r22, r22
    127e:	66 27       	eor	r22, r22
    1280:	66 1f       	adc	r22, r22
    1282:	61 83       	std	Z+1, r22	; 0x01
    1284:	00 97       	sbiw	r24, 0x00	; 0
    1286:	39 f5       	brne	.+78     	; 0x12d6 <__unpack_f+0x88>
    1288:	21 15       	cp	r18, r1
    128a:	31 05       	cpc	r19, r1
    128c:	41 05       	cpc	r20, r1
    128e:	51 05       	cpc	r21, r1
    1290:	11 f4       	brne	.+4      	; 0x1296 <__unpack_f+0x48>
    1292:	82 e0       	ldi	r24, 0x02	; 2
    1294:	29 c0       	rjmp	.+82     	; 0x12e8 <__unpack_f+0x9a>
    1296:	82 e8       	ldi	r24, 0x82	; 130
    1298:	9f ef       	ldi	r25, 0xFF	; 255
    129a:	93 83       	std	Z+3, r25	; 0x03
    129c:	82 83       	std	Z+2, r24	; 0x02
    129e:	67 e0       	ldi	r22, 0x07	; 7
    12a0:	22 0f       	add	r18, r18
    12a2:	33 1f       	adc	r19, r19
    12a4:	44 1f       	adc	r20, r20
    12a6:	55 1f       	adc	r21, r21
    12a8:	6a 95       	dec	r22
    12aa:	d1 f7       	brne	.-12     	; 0x12a0 <__unpack_f+0x52>
    12ac:	83 e0       	ldi	r24, 0x03	; 3
    12ae:	80 83       	st	Z, r24
    12b0:	09 c0       	rjmp	.+18     	; 0x12c4 <__unpack_f+0x76>
    12b2:	22 0f       	add	r18, r18
    12b4:	33 1f       	adc	r19, r19
    12b6:	44 1f       	adc	r20, r20
    12b8:	55 1f       	adc	r21, r21
    12ba:	82 81       	ldd	r24, Z+2	; 0x02
    12bc:	93 81       	ldd	r25, Z+3	; 0x03
    12be:	01 97       	sbiw	r24, 0x01	; 1
    12c0:	93 83       	std	Z+3, r25	; 0x03
    12c2:	82 83       	std	Z+2, r24	; 0x02
    12c4:	20 30       	cpi	r18, 0x00	; 0
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	38 07       	cpc	r19, r24
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	48 07       	cpc	r20, r24
    12ce:	80 e4       	ldi	r24, 0x40	; 64
    12d0:	58 07       	cpc	r21, r24
    12d2:	78 f3       	brcs	.-34     	; 0x12b2 <__unpack_f+0x64>
    12d4:	20 c0       	rjmp	.+64     	; 0x1316 <__unpack_f+0xc8>
    12d6:	8f 3f       	cpi	r24, 0xFF	; 255
    12d8:	91 05       	cpc	r25, r1
    12da:	79 f4       	brne	.+30     	; 0x12fa <__unpack_f+0xac>
    12dc:	21 15       	cp	r18, r1
    12de:	31 05       	cpc	r19, r1
    12e0:	41 05       	cpc	r20, r1
    12e2:	51 05       	cpc	r21, r1
    12e4:	19 f4       	brne	.+6      	; 0x12ec <__unpack_f+0x9e>
    12e6:	84 e0       	ldi	r24, 0x04	; 4
    12e8:	80 83       	st	Z, r24
    12ea:	08 95       	ret
    12ec:	44 ff       	sbrs	r20, 4
    12ee:	03 c0       	rjmp	.+6      	; 0x12f6 <__unpack_f+0xa8>
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	80 83       	st	Z, r24
    12f4:	10 c0       	rjmp	.+32     	; 0x1316 <__unpack_f+0xc8>
    12f6:	10 82       	st	Z, r1
    12f8:	0e c0       	rjmp	.+28     	; 0x1316 <__unpack_f+0xc8>
    12fa:	8f 57       	subi	r24, 0x7F	; 127
    12fc:	90 40       	sbci	r25, 0x00	; 0
    12fe:	93 83       	std	Z+3, r25	; 0x03
    1300:	82 83       	std	Z+2, r24	; 0x02
    1302:	83 e0       	ldi	r24, 0x03	; 3
    1304:	80 83       	st	Z, r24
    1306:	87 e0       	ldi	r24, 0x07	; 7
    1308:	22 0f       	add	r18, r18
    130a:	33 1f       	adc	r19, r19
    130c:	44 1f       	adc	r20, r20
    130e:	55 1f       	adc	r21, r21
    1310:	8a 95       	dec	r24
    1312:	d1 f7       	brne	.-12     	; 0x1308 <__unpack_f+0xba>
    1314:	50 64       	ori	r21, 0x40	; 64
    1316:	24 83       	std	Z+4, r18	; 0x04
    1318:	35 83       	std	Z+5, r19	; 0x05
    131a:	46 83       	std	Z+6, r20	; 0x06
    131c:	57 83       	std	Z+7, r21	; 0x07
    131e:	08 95       	ret

00001320 <__fpcmp_parts_f>:
    1320:	fc 01       	movw	r30, r24
    1322:	db 01       	movw	r26, r22
    1324:	90 81       	ld	r25, Z
    1326:	92 30       	cpi	r25, 0x02	; 2
    1328:	08 f4       	brcc	.+2      	; 0x132c <__fpcmp_parts_f+0xc>
    132a:	49 c0       	rjmp	.+146    	; 0x13be <__fpcmp_parts_f+0x9e>
    132c:	8c 91       	ld	r24, X
    132e:	82 30       	cpi	r24, 0x02	; 2
    1330:	08 f4       	brcc	.+2      	; 0x1334 <__fpcmp_parts_f+0x14>
    1332:	45 c0       	rjmp	.+138    	; 0x13be <__fpcmp_parts_f+0x9e>
    1334:	94 30       	cpi	r25, 0x04	; 4
    1336:	51 f4       	brne	.+20     	; 0x134c <__fpcmp_parts_f+0x2c>
    1338:	61 81       	ldd	r22, Z+1	; 0x01
    133a:	84 30       	cpi	r24, 0x04	; 4
    133c:	b1 f5       	brne	.+108    	; 0x13aa <__fpcmp_parts_f+0x8a>
    133e:	11 96       	adiw	r26, 0x01	; 1
    1340:	2c 91       	ld	r18, X
    1342:	11 97       	sbiw	r26, 0x01	; 1
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	26 1b       	sub	r18, r22
    1348:	31 09       	sbc	r19, r1
    134a:	41 c0       	rjmp	.+130    	; 0x13ce <__fpcmp_parts_f+0xae>
    134c:	84 30       	cpi	r24, 0x04	; 4
    134e:	21 f0       	breq	.+8      	; 0x1358 <__fpcmp_parts_f+0x38>
    1350:	92 30       	cpi	r25, 0x02	; 2
    1352:	41 f4       	brne	.+16     	; 0x1364 <__fpcmp_parts_f+0x44>
    1354:	82 30       	cpi	r24, 0x02	; 2
    1356:	b1 f1       	breq	.+108    	; 0x13c4 <__fpcmp_parts_f+0xa4>
    1358:	11 96       	adiw	r26, 0x01	; 1
    135a:	8c 91       	ld	r24, X
    135c:	11 97       	sbiw	r26, 0x01	; 1
    135e:	88 23       	and	r24, r24
    1360:	a1 f1       	breq	.+104    	; 0x13ca <__fpcmp_parts_f+0xaa>
    1362:	2d c0       	rjmp	.+90     	; 0x13be <__fpcmp_parts_f+0x9e>
    1364:	61 81       	ldd	r22, Z+1	; 0x01
    1366:	82 30       	cpi	r24, 0x02	; 2
    1368:	01 f1       	breq	.+64     	; 0x13aa <__fpcmp_parts_f+0x8a>
    136a:	11 96       	adiw	r26, 0x01	; 1
    136c:	8c 91       	ld	r24, X
    136e:	11 97       	sbiw	r26, 0x01	; 1
    1370:	68 17       	cp	r22, r24
    1372:	d9 f4       	brne	.+54     	; 0x13aa <__fpcmp_parts_f+0x8a>
    1374:	22 81       	ldd	r18, Z+2	; 0x02
    1376:	33 81       	ldd	r19, Z+3	; 0x03
    1378:	12 96       	adiw	r26, 0x02	; 2
    137a:	8d 91       	ld	r24, X+
    137c:	9c 91       	ld	r25, X
    137e:	13 97       	sbiw	r26, 0x03	; 3
    1380:	82 17       	cp	r24, r18
    1382:	93 07       	cpc	r25, r19
    1384:	94 f0       	brlt	.+36     	; 0x13aa <__fpcmp_parts_f+0x8a>
    1386:	28 17       	cp	r18, r24
    1388:	39 07       	cpc	r19, r25
    138a:	bc f0       	brlt	.+46     	; 0x13ba <__fpcmp_parts_f+0x9a>
    138c:	24 81       	ldd	r18, Z+4	; 0x04
    138e:	35 81       	ldd	r19, Z+5	; 0x05
    1390:	46 81       	ldd	r20, Z+6	; 0x06
    1392:	57 81       	ldd	r21, Z+7	; 0x07
    1394:	14 96       	adiw	r26, 0x04	; 4
    1396:	8d 91       	ld	r24, X+
    1398:	9d 91       	ld	r25, X+
    139a:	0d 90       	ld	r0, X+
    139c:	bc 91       	ld	r27, X
    139e:	a0 2d       	mov	r26, r0
    13a0:	82 17       	cp	r24, r18
    13a2:	93 07       	cpc	r25, r19
    13a4:	a4 07       	cpc	r26, r20
    13a6:	b5 07       	cpc	r27, r21
    13a8:	18 f4       	brcc	.+6      	; 0x13b0 <__fpcmp_parts_f+0x90>
    13aa:	66 23       	and	r22, r22
    13ac:	41 f0       	breq	.+16     	; 0x13be <__fpcmp_parts_f+0x9e>
    13ae:	0d c0       	rjmp	.+26     	; 0x13ca <__fpcmp_parts_f+0xaa>
    13b0:	28 17       	cp	r18, r24
    13b2:	39 07       	cpc	r19, r25
    13b4:	4a 07       	cpc	r20, r26
    13b6:	5b 07       	cpc	r21, r27
    13b8:	28 f4       	brcc	.+10     	; 0x13c4 <__fpcmp_parts_f+0xa4>
    13ba:	66 23       	and	r22, r22
    13bc:	31 f0       	breq	.+12     	; 0x13ca <__fpcmp_parts_f+0xaa>
    13be:	21 e0       	ldi	r18, 0x01	; 1
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	05 c0       	rjmp	.+10     	; 0x13ce <__fpcmp_parts_f+0xae>
    13c4:	20 e0       	ldi	r18, 0x00	; 0
    13c6:	30 e0       	ldi	r19, 0x00	; 0
    13c8:	02 c0       	rjmp	.+4      	; 0x13ce <__fpcmp_parts_f+0xae>
    13ca:	2f ef       	ldi	r18, 0xFF	; 255
    13cc:	3f ef       	ldi	r19, 0xFF	; 255
    13ce:	c9 01       	movw	r24, r18
    13d0:	08 95       	ret

000013d2 <__prologue_saves__>:
    13d2:	2f 92       	push	r2
    13d4:	3f 92       	push	r3
    13d6:	4f 92       	push	r4
    13d8:	5f 92       	push	r5
    13da:	6f 92       	push	r6
    13dc:	7f 92       	push	r7
    13de:	8f 92       	push	r8
    13e0:	9f 92       	push	r9
    13e2:	af 92       	push	r10
    13e4:	bf 92       	push	r11
    13e6:	cf 92       	push	r12
    13e8:	df 92       	push	r13
    13ea:	ef 92       	push	r14
    13ec:	ff 92       	push	r15
    13ee:	0f 93       	push	r16
    13f0:	1f 93       	push	r17
    13f2:	cf 93       	push	r28
    13f4:	df 93       	push	r29
    13f6:	cd b7       	in	r28, 0x3d	; 61
    13f8:	de b7       	in	r29, 0x3e	; 62
    13fa:	ca 1b       	sub	r28, r26
    13fc:	db 0b       	sbc	r29, r27
    13fe:	0f b6       	in	r0, 0x3f	; 63
    1400:	f8 94       	cli
    1402:	de bf       	out	0x3e, r29	; 62
    1404:	0f be       	out	0x3f, r0	; 63
    1406:	cd bf       	out	0x3d, r28	; 61
    1408:	09 94       	ijmp

0000140a <__epilogue_restores__>:
    140a:	2a 88       	ldd	r2, Y+18	; 0x12
    140c:	39 88       	ldd	r3, Y+17	; 0x11
    140e:	48 88       	ldd	r4, Y+16	; 0x10
    1410:	5f 84       	ldd	r5, Y+15	; 0x0f
    1412:	6e 84       	ldd	r6, Y+14	; 0x0e
    1414:	7d 84       	ldd	r7, Y+13	; 0x0d
    1416:	8c 84       	ldd	r8, Y+12	; 0x0c
    1418:	9b 84       	ldd	r9, Y+11	; 0x0b
    141a:	aa 84       	ldd	r10, Y+10	; 0x0a
    141c:	b9 84       	ldd	r11, Y+9	; 0x09
    141e:	c8 84       	ldd	r12, Y+8	; 0x08
    1420:	df 80       	ldd	r13, Y+7	; 0x07
    1422:	ee 80       	ldd	r14, Y+6	; 0x06
    1424:	fd 80       	ldd	r15, Y+5	; 0x05
    1426:	0c 81       	ldd	r16, Y+4	; 0x04
    1428:	1b 81       	ldd	r17, Y+3	; 0x03
    142a:	aa 81       	ldd	r26, Y+2	; 0x02
    142c:	b9 81       	ldd	r27, Y+1	; 0x01
    142e:	ce 0f       	add	r28, r30
    1430:	d1 1d       	adc	r29, r1
    1432:	0f b6       	in	r0, 0x3f	; 63
    1434:	f8 94       	cli
    1436:	de bf       	out	0x3e, r29	; 62
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	cd bf       	out	0x3d, r28	; 61
    143c:	ed 01       	movw	r28, r26
    143e:	08 95       	ret

00001440 <_exit>:
    1440:	f8 94       	cli

00001442 <__stop_program>:
    1442:	ff cf       	rjmp	.-2      	; 0x1442 <__stop_program>
