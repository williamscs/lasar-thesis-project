
Satellite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000014be  00001552  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080010c  0080010c  0000155e  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00001560  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001c2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00001cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000293  00000000  00000000  00001e51  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002451  00000000  00000000  000020e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000117f  00000000  00000000  00004535  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000018af  00000000  00000000  000056b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000250  00000000  00000000  00006f64  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004a2  00000000  00000000  000071b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c25  00000000  00000000  00007656  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 0000062c  00000000  00000000  0000827b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  000088a7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 93 03 	jmp	0x726	; 0x726 <__vector_1>
       8:	0c 94 a8 03 	jmp	0x750	; 0x750 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 37 02 	jmp	0x46e	; 0x46e <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ee eb       	ldi	r30, 0xBE	; 190
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a0 31       	cpi	r26, 0x10	; 16
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
      9e:	0c 94 5d 0a 	jmp	0x14ba	; 0x14ba <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile uint8_t rxflag = 0;
volatile uint8_t slpflag = 0;
volatile uint8_t zerocross = 1;

int main(void)
{
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	a0 97       	sbiw	r28, 0x20	; 32
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	DDRB = (1<<PORTB0);
      be:	84 e2       	ldi	r24, 0x24	; 36
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
	DDRC = 0xFF;
      c8:	87 e2       	ldi	r24, 0x27	; 39
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	2f ef       	ldi	r18, 0xFF	; 255
      ce:	fc 01       	movw	r30, r24
      d0:	20 83       	st	Z, r18
	//DDRB = (1 << PORTD6);
	//DDRD = (1 << PORTD3);
	DDRD &= ~(1 << PORTD2);
      d2:	8a e2       	ldi	r24, 0x2A	; 42
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	2a e2       	ldi	r18, 0x2A	; 42
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	f9 01       	movw	r30, r18
      dc:	20 81       	ld	r18, Z
      de:	2b 7f       	andi	r18, 0xFB	; 251
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
	PORTB &= ~(1 << PORTB0);
      e4:	85 e2       	ldi	r24, 0x25	; 37
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	25 e2       	ldi	r18, 0x25	; 37
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	2e 7f       	andi	r18, 0xFE	; 254
      f2:	fc 01       	movw	r30, r24
      f4:	20 83       	st	Z, r18
	//PORTD &= (1 << PORTD6);
	
	initTimer(65);
      f6:	81 e4       	ldi	r24, 0x41	; 65
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	0e 94 bf 01 	call	0x37e	; 0x37e <initTimer>
	initInterrupt0();
      fe:	0e 94 fe 01 	call	0x3fc	; 0x3fc <initInterrupt0>
	dim = 10;
     102:	8a e0       	ldi	r24, 0x0A	; 10
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	90 93 01 01 	sts	0x0101, r25
     10a:	80 93 00 01 	sts	0x0100, r24
	
	// turn on interrupts
	sei();
     10e:	78 94       	sei
	
	while(1)
	{
		for( int j = 1; j < 90; ++j )
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	9a 83       	std	Y+2, r25	; 0x02
     116:	89 83       	std	Y+1, r24	; 0x01
     118:	90 c0       	rjmp	.+288    	; 0x23a <main+0x194>
		{
			//PORTD |= (1 << PORTD3);
			dim = j;
     11a:	89 81       	ldd	r24, Y+1	; 0x01
     11c:	9a 81       	ldd	r25, Y+2	; 0x02
     11e:	90 93 01 01 	sts	0x0101, r25
     122:	80 93 00 01 	sts	0x0100, r24
			PORTC = j;
     126:	88 e2       	ldi	r24, 0x28	; 40
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	29 81       	ldd	r18, Y+1	; 0x01
     12c:	fc 01       	movw	r30, r24
     12e:	20 83       	st	Z, r18
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	a0 e2       	ldi	r26, 0x20	; 32
     136:	b2 e4       	ldi	r27, 0x42	; 66
     138:	8d 83       	std	Y+5, r24	; 0x05
     13a:	9e 83       	std	Y+6, r25	; 0x06
     13c:	af 83       	std	Y+7, r26	; 0x07
     13e:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     140:	6d 81       	ldd	r22, Y+5	; 0x05
     142:	7e 81       	ldd	r23, Y+6	; 0x06
     144:	8f 81       	ldd	r24, Y+7	; 0x07
     146:	98 85       	ldd	r25, Y+8	; 0x08
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	4a e7       	ldi	r20, 0x7A	; 122
     14e:	55 e4       	ldi	r21, 0x45	; 69
     150:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3>
     154:	dc 01       	movw	r26, r24
     156:	cb 01       	movw	r24, r22
     158:	89 87       	std	Y+9, r24	; 0x09
     15a:	9a 87       	std	Y+10, r25	; 0x0a
     15c:	ab 87       	std	Y+11, r26	; 0x0b
     15e:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     160:	11 e0       	ldi	r17, 0x01	; 1
     162:	69 85       	ldd	r22, Y+9	; 0x09
     164:	7a 85       	ldd	r23, Y+10	; 0x0a
     166:	8b 85       	ldd	r24, Y+11	; 0x0b
     168:	9c 85       	ldd	r25, Y+12	; 0x0c
     16a:	20 e0       	ldi	r18, 0x00	; 0
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	40 e8       	ldi	r20, 0x80	; 128
     170:	5f e3       	ldi	r21, 0x3F	; 63
     172:	0e 94 14 08 	call	0x1028	; 0x1028 <__ltsf2>
     176:	88 23       	and	r24, r24
     178:	0c f0       	brlt	.+2      	; 0x17c <main+0xd6>
     17a:	10 e0       	ldi	r17, 0x00	; 0
     17c:	11 23       	and	r17, r17
     17e:	29 f0       	breq	.+10     	; 0x18a <main+0xe4>
		__ticks = 1;
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	9e 87       	std	Y+14, r25	; 0x0e
     186:	8d 87       	std	Y+13, r24	; 0x0d
     188:	46 c0       	rjmp	.+140    	; 0x216 <main+0x170>
	else if (__tmp > 65535)
     18a:	11 e0       	ldi	r17, 0x01	; 1
     18c:	69 85       	ldd	r22, Y+9	; 0x09
     18e:	7a 85       	ldd	r23, Y+10	; 0x0a
     190:	8b 85       	ldd	r24, Y+11	; 0x0b
     192:	9c 85       	ldd	r25, Y+12	; 0x0c
     194:	20 e0       	ldi	r18, 0x00	; 0
     196:	3f ef       	ldi	r19, 0xFF	; 255
     198:	4f e7       	ldi	r20, 0x7F	; 127
     19a:	57 e4       	ldi	r21, 0x47	; 71
     19c:	0e 94 b4 07 	call	0xf68	; 0xf68 <__gtsf2>
     1a0:	18 16       	cp	r1, r24
     1a2:	0c f0       	brlt	.+2      	; 0x1a6 <main+0x100>
     1a4:	10 e0       	ldi	r17, 0x00	; 0
     1a6:	11 23       	and	r17, r17
     1a8:	61 f1       	breq	.+88     	; 0x202 <main+0x15c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1aa:	6d 81       	ldd	r22, Y+5	; 0x05
     1ac:	7e 81       	ldd	r23, Y+6	; 0x06
     1ae:	8f 81       	ldd	r24, Y+7	; 0x07
     1b0:	98 85       	ldd	r25, Y+8	; 0x08
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	40 e2       	ldi	r20, 0x20	; 32
     1b8:	51 e4       	ldi	r21, 0x41	; 65
     1ba:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3>
     1be:	dc 01       	movw	r26, r24
     1c0:	cb 01       	movw	r24, r22
     1c2:	bc 01       	movw	r22, r24
     1c4:	cd 01       	movw	r24, r26
     1c6:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     1ca:	dc 01       	movw	r26, r24
     1cc:	cb 01       	movw	r24, r22
     1ce:	9e 87       	std	Y+14, r25	; 0x0e
     1d0:	8d 87       	std	Y+13, r24	; 0x0d
     1d2:	12 c0       	rjmp	.+36     	; 0x1f8 <main+0x152>
     1d4:	80 e9       	ldi	r24, 0x90	; 144
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	98 8b       	std	Y+16, r25	; 0x10
     1da:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1dc:	8f 85       	ldd	r24, Y+15	; 0x0f
     1de:	98 89       	ldd	r25, Y+16	; 0x10
     1e0:	8c 01       	movw	r16, r24
     1e2:	c8 01       	movw	r24, r16
     1e4:	01 97       	sbiw	r24, 0x01	; 1
     1e6:	f1 f7       	brne	.-4      	; 0x1e4 <main+0x13e>
     1e8:	8c 01       	movw	r16, r24
     1ea:	18 8b       	std	Y+16, r17	; 0x10
     1ec:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1ee:	8d 85       	ldd	r24, Y+13	; 0x0d
     1f0:	9e 85       	ldd	r25, Y+14	; 0x0e
     1f2:	01 97       	sbiw	r24, 0x01	; 1
     1f4:	9e 87       	std	Y+14, r25	; 0x0e
     1f6:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1f8:	8d 85       	ldd	r24, Y+13	; 0x0d
     1fa:	9e 85       	ldd	r25, Y+14	; 0x0e
     1fc:	00 97       	sbiw	r24, 0x00	; 0
     1fe:	51 f7       	brne	.-44     	; 0x1d4 <main+0x12e>
     200:	17 c0       	rjmp	.+46     	; 0x230 <main+0x18a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     202:	69 85       	ldd	r22, Y+9	; 0x09
     204:	7a 85       	ldd	r23, Y+10	; 0x0a
     206:	8b 85       	ldd	r24, Y+11	; 0x0b
     208:	9c 85       	ldd	r25, Y+12	; 0x0c
     20a:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     20e:	dc 01       	movw	r26, r24
     210:	cb 01       	movw	r24, r22
     212:	9e 87       	std	Y+14, r25	; 0x0e
     214:	8d 87       	std	Y+13, r24	; 0x0d
     216:	8d 85       	ldd	r24, Y+13	; 0x0d
     218:	9e 85       	ldd	r25, Y+14	; 0x0e
     21a:	9a 8b       	std	Y+18, r25	; 0x12
     21c:	89 8b       	std	Y+17, r24	; 0x11
     21e:	89 89       	ldd	r24, Y+17	; 0x11
     220:	9a 89       	ldd	r25, Y+18	; 0x12
     222:	8c 01       	movw	r16, r24
     224:	f8 01       	movw	r30, r16
     226:	31 97       	sbiw	r30, 0x01	; 1
     228:	f1 f7       	brne	.-4      	; 0x226 <main+0x180>
     22a:	8f 01       	movw	r16, r30
     22c:	1a 8b       	std	Y+18, r17	; 0x12
     22e:	09 8b       	std	Y+17, r16	; 0x11
	// turn on interrupts
	sei();
	
	while(1)
	{
		for( int j = 1; j < 90; ++j )
     230:	89 81       	ldd	r24, Y+1	; 0x01
     232:	9a 81       	ldd	r25, Y+2	; 0x02
     234:	01 96       	adiw	r24, 0x01	; 1
     236:	9a 83       	std	Y+2, r25	; 0x02
     238:	89 83       	std	Y+1, r24	; 0x01
     23a:	89 81       	ldd	r24, Y+1	; 0x01
     23c:	9a 81       	ldd	r25, Y+2	; 0x02
     23e:	8a 35       	cpi	r24, 0x5A	; 90
     240:	91 05       	cpc	r25, r1
     242:	0c f4       	brge	.+2      	; 0x246 <main+0x1a0>
     244:	6a cf       	rjmp	.-300    	; 0x11a <main+0x74>
			//PORTD |= (1 << PORTD3);
			dim = j;
			PORTC = j;
			_delay_ms(40);
		}
		for( int j = 90; j > 1; --j)
     246:	8a e5       	ldi	r24, 0x5A	; 90
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	9c 83       	std	Y+4, r25	; 0x04
     24c:	8b 83       	std	Y+3, r24	; 0x03
     24e:	90 c0       	rjmp	.+288    	; 0x370 <main+0x2ca>
		{
			//PORTD &= ~(1 << PORTD3);
			dim = j;
     250:	8b 81       	ldd	r24, Y+3	; 0x03
     252:	9c 81       	ldd	r25, Y+4	; 0x04
     254:	90 93 01 01 	sts	0x0101, r25
     258:	80 93 00 01 	sts	0x0100, r24
			PORTC = j;
     25c:	88 e2       	ldi	r24, 0x28	; 40
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	2b 81       	ldd	r18, Y+3	; 0x03
     262:	fc 01       	movw	r30, r24
     264:	20 83       	st	Z, r18
     266:	80 e0       	ldi	r24, 0x00	; 0
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	a0 e2       	ldi	r26, 0x20	; 32
     26c:	b2 e4       	ldi	r27, 0x42	; 66
     26e:	8b 8b       	std	Y+19, r24	; 0x13
     270:	9c 8b       	std	Y+20, r25	; 0x14
     272:	ad 8b       	std	Y+21, r26	; 0x15
     274:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     276:	6b 89       	ldd	r22, Y+19	; 0x13
     278:	7c 89       	ldd	r23, Y+20	; 0x14
     27a:	8d 89       	ldd	r24, Y+21	; 0x15
     27c:	9e 89       	ldd	r25, Y+22	; 0x16
     27e:	20 e0       	ldi	r18, 0x00	; 0
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	4a e7       	ldi	r20, 0x7A	; 122
     284:	55 e4       	ldi	r21, 0x45	; 69
     286:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3>
     28a:	dc 01       	movw	r26, r24
     28c:	cb 01       	movw	r24, r22
     28e:	8f 8b       	std	Y+23, r24	; 0x17
     290:	98 8f       	std	Y+24, r25	; 0x18
     292:	a9 8f       	std	Y+25, r26	; 0x19
     294:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     296:	11 e0       	ldi	r17, 0x01	; 1
     298:	6f 89       	ldd	r22, Y+23	; 0x17
     29a:	78 8d       	ldd	r23, Y+24	; 0x18
     29c:	89 8d       	ldd	r24, Y+25	; 0x19
     29e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	40 e8       	ldi	r20, 0x80	; 128
     2a6:	5f e3       	ldi	r21, 0x3F	; 63
     2a8:	0e 94 14 08 	call	0x1028	; 0x1028 <__ltsf2>
     2ac:	88 23       	and	r24, r24
     2ae:	0c f0       	brlt	.+2      	; 0x2b2 <main+0x20c>
     2b0:	10 e0       	ldi	r17, 0x00	; 0
     2b2:	11 23       	and	r17, r17
     2b4:	29 f0       	breq	.+10     	; 0x2c0 <main+0x21a>
		__ticks = 1;
     2b6:	81 e0       	ldi	r24, 0x01	; 1
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	9c 8f       	std	Y+28, r25	; 0x1c
     2bc:	8b 8f       	std	Y+27, r24	; 0x1b
     2be:	46 c0       	rjmp	.+140    	; 0x34c <main+0x2a6>
	else if (__tmp > 65535)
     2c0:	11 e0       	ldi	r17, 0x01	; 1
     2c2:	6f 89       	ldd	r22, Y+23	; 0x17
     2c4:	78 8d       	ldd	r23, Y+24	; 0x18
     2c6:	89 8d       	ldd	r24, Y+25	; 0x19
     2c8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	3f ef       	ldi	r19, 0xFF	; 255
     2ce:	4f e7       	ldi	r20, 0x7F	; 127
     2d0:	57 e4       	ldi	r21, 0x47	; 71
     2d2:	0e 94 b4 07 	call	0xf68	; 0xf68 <__gtsf2>
     2d6:	18 16       	cp	r1, r24
     2d8:	0c f0       	brlt	.+2      	; 0x2dc <main+0x236>
     2da:	10 e0       	ldi	r17, 0x00	; 0
     2dc:	11 23       	and	r17, r17
     2de:	61 f1       	breq	.+88     	; 0x338 <main+0x292>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2e0:	6b 89       	ldd	r22, Y+19	; 0x13
     2e2:	7c 89       	ldd	r23, Y+20	; 0x14
     2e4:	8d 89       	ldd	r24, Y+21	; 0x15
     2e6:	9e 89       	ldd	r25, Y+22	; 0x16
     2e8:	20 e0       	ldi	r18, 0x00	; 0
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	40 e2       	ldi	r20, 0x20	; 32
     2ee:	51 e4       	ldi	r21, 0x41	; 65
     2f0:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3>
     2f4:	dc 01       	movw	r26, r24
     2f6:	cb 01       	movw	r24, r22
     2f8:	bc 01       	movw	r22, r24
     2fa:	cd 01       	movw	r24, r26
     2fc:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     300:	dc 01       	movw	r26, r24
     302:	cb 01       	movw	r24, r22
     304:	9c 8f       	std	Y+28, r25	; 0x1c
     306:	8b 8f       	std	Y+27, r24	; 0x1b
     308:	12 c0       	rjmp	.+36     	; 0x32e <main+0x288>
     30a:	80 e9       	ldi	r24, 0x90	; 144
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	9e 8f       	std	Y+30, r25	; 0x1e
     310:	8d 8f       	std	Y+29, r24	; 0x1d
     312:	8d 8d       	ldd	r24, Y+29	; 0x1d
     314:	9e 8d       	ldd	r25, Y+30	; 0x1e
     316:	8c 01       	movw	r16, r24
     318:	c8 01       	movw	r24, r16
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <main+0x274>
     31e:	8c 01       	movw	r16, r24
     320:	1e 8f       	std	Y+30, r17	; 0x1e
     322:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     324:	8b 8d       	ldd	r24, Y+27	; 0x1b
     326:	9c 8d       	ldd	r25, Y+28	; 0x1c
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	9c 8f       	std	Y+28, r25	; 0x1c
     32c:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     32e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     330:	9c 8d       	ldd	r25, Y+28	; 0x1c
     332:	00 97       	sbiw	r24, 0x00	; 0
     334:	51 f7       	brne	.-44     	; 0x30a <main+0x264>
     336:	17 c0       	rjmp	.+46     	; 0x366 <main+0x2c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     338:	6f 89       	ldd	r22, Y+23	; 0x17
     33a:	78 8d       	ldd	r23, Y+24	; 0x18
     33c:	89 8d       	ldd	r24, Y+25	; 0x19
     33e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     340:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     344:	dc 01       	movw	r26, r24
     346:	cb 01       	movw	r24, r22
     348:	9c 8f       	std	Y+28, r25	; 0x1c
     34a:	8b 8f       	std	Y+27, r24	; 0x1b
     34c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     34e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     350:	98 a3       	std	Y+32, r25	; 0x20
     352:	8f 8f       	std	Y+31, r24	; 0x1f
     354:	8f 8d       	ldd	r24, Y+31	; 0x1f
     356:	98 a1       	ldd	r25, Y+32	; 0x20
     358:	8c 01       	movw	r16, r24
     35a:	f8 01       	movw	r30, r16
     35c:	31 97       	sbiw	r30, 0x01	; 1
     35e:	f1 f7       	brne	.-4      	; 0x35c <main+0x2b6>
     360:	8f 01       	movw	r16, r30
     362:	18 a3       	std	Y+32, r17	; 0x20
     364:	0f 8f       	std	Y+31, r16	; 0x1f
			//PORTD |= (1 << PORTD3);
			dim = j;
			PORTC = j;
			_delay_ms(40);
		}
		for( int j = 90; j > 1; --j)
     366:	8b 81       	ldd	r24, Y+3	; 0x03
     368:	9c 81       	ldd	r25, Y+4	; 0x04
     36a:	01 97       	sbiw	r24, 0x01	; 1
     36c:	9c 83       	std	Y+4, r25	; 0x04
     36e:	8b 83       	std	Y+3, r24	; 0x03
     370:	8b 81       	ldd	r24, Y+3	; 0x03
     372:	9c 81       	ldd	r25, Y+4	; 0x04
     374:	82 30       	cpi	r24, 0x02	; 2
     376:	91 05       	cpc	r25, r1
     378:	0c f0       	brlt	.+2      	; 0x37c <main+0x2d6>
     37a:	6a cf       	rjmp	.-300    	; 0x250 <main+0x1aa>
			//PORTD &= ~(1 << PORTD3);
			dim = j;
			PORTC = j;
			_delay_ms(40);
		}
	}				
     37c:	c9 ce       	rjmp	.-622    	; 0x110 <main+0x6a>

0000037e <initTimer>:
/*
 * Function Name:
 * Author: Chris Williams
 */
void initTimer( int dutycycle )
{
     37e:	df 93       	push	r29
     380:	cf 93       	push	r28
     382:	00 d0       	rcall	.+0      	; 0x384 <initTimer+0x6>
     384:	cd b7       	in	r28, 0x3d	; 61
     386:	de b7       	in	r29, 0x3e	; 62
     388:	9a 83       	std	Y+2, r25	; 0x02
     38a:	89 83       	std	Y+1, r24	; 0x01
	OCR0A = 130; //cap of Timer0
     38c:	87 e4       	ldi	r24, 0x47	; 71
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	22 e8       	ldi	r18, 0x82	; 130
     392:	fc 01       	movw	r30, r24
     394:	20 83       	st	Z, r18
	OCR0B = dutycycle;
     396:	88 e4       	ldi	r24, 0x48	; 72
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	29 81       	ldd	r18, Y+1	; 0x01
     39c:	fc 01       	movw	r30, r24
     39e:	20 83       	st	Z, r18
	
    DDRD |= (1 << PORTD6);         
     3a0:	8a e2       	ldi	r24, 0x2A	; 42
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	2a e2       	ldi	r18, 0x2A	; 42
     3a6:	30 e0       	ldi	r19, 0x00	; 0
     3a8:	f9 01       	movw	r30, r18
     3aa:	20 81       	ld	r18, Z
     3ac:	20 64       	ori	r18, 0x40	; 64
     3ae:	fc 01       	movw	r30, r24
     3b0:	20 83       	st	Z, r18
	
	TCCR0A |= (1 << COM0A1);
     3b2:	84 e4       	ldi	r24, 0x44	; 68
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	24 e4       	ldi	r18, 0x44	; 68
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	f9 01       	movw	r30, r18
     3bc:	20 81       	ld	r18, Z
     3be:	20 68       	ori	r18, 0x80	; 128
     3c0:	fc 01       	movw	r30, r24
     3c2:	20 83       	st	Z, r18
    // set non-inverting mode

    TCCR0A |= (1 << WGM01);
     3c4:	84 e4       	ldi	r24, 0x44	; 68
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	24 e4       	ldi	r18, 0x44	; 68
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	f9 01       	movw	r30, r18
     3ce:	20 81       	ld	r18, Z
     3d0:	22 60       	ori	r18, 0x02	; 2
     3d2:	fc 01       	movw	r30, r24
     3d4:	20 83       	st	Z, r18
    // set CTC (Clear Timer on Compare) Mode

    TCCR0B |= (1 << CS01);
     3d6:	85 e4       	ldi	r24, 0x45	; 69
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	25 e4       	ldi	r18, 0x45	; 69
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	f9 01       	movw	r30, r18
     3e0:	20 81       	ld	r18, Z
     3e2:	22 60       	ori	r18, 0x02	; 2
     3e4:	fc 01       	movw	r30, r24
     3e6:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0A) | (1 << TOIE0);
     3e8:	8e e6       	ldi	r24, 0x6E	; 110
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	23 e0       	ldi	r18, 0x03	; 3
     3ee:	fc 01       	movw	r30, r24
     3f0:	20 83       	st	Z, r18
    // set prescaler to 8 and starts PWM
	
	TIMSK0 = (1 << OCIE0B);
	//Enable COMPA
	*/
}
     3f2:	0f 90       	pop	r0
     3f4:	0f 90       	pop	r0
     3f6:	cf 91       	pop	r28
     3f8:	df 91       	pop	r29
     3fa:	08 95       	ret

000003fc <initInterrupt0>:


void initInterrupt0()
{
     3fc:	df 93       	push	r29
     3fe:	cf 93       	push	r28
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
	PORTD |= (1 << PORTD2) | (1 << PORTD3);
     404:	8b e2       	ldi	r24, 0x2B	; 43
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	2b e2       	ldi	r18, 0x2B	; 43
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	f9 01       	movw	r30, r18
     40e:	20 81       	ld	r18, Z
     410:	2c 60       	ori	r18, 0x0C	; 12
     412:	fc 01       	movw	r30, r24
     414:	20 83       	st	Z, r18
	EICRA = 0;
     416:	89 e6       	ldi	r24, 0x69	; 105
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	fc 01       	movw	r30, r24
     41c:	10 82       	st	Z, r1
	EICRA |= (1 << ISC11) | (1 << ISC01);
     41e:	89 e6       	ldi	r24, 0x69	; 105
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	29 e6       	ldi	r18, 0x69	; 105
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	f9 01       	movw	r30, r18
     428:	20 81       	ld	r18, Z
     42a:	2a 60       	ori	r18, 0x0A	; 10
     42c:	fc 01       	movw	r30, r24
     42e:	20 83       	st	Z, r18
	EIMSK |= (1 << INT1) | (1 << INT0);
     430:	8d e3       	ldi	r24, 0x3D	; 61
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	2d e3       	ldi	r18, 0x3D	; 61
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	f9 01       	movw	r30, r18
     43a:	20 81       	ld	r18, Z
     43c:	23 60       	ori	r18, 0x03	; 3
     43e:	fc 01       	movw	r30, r24
     440:	20 83       	st	Z, r18
}	
     442:	cf 91       	pop	r28
     444:	df 91       	pop	r29
     446:	08 95       	ret

00000448 <setCycle>:


void setCycle(int dutycycle)
{
     448:	df 93       	push	r29
     44a:	cf 93       	push	r28
     44c:	00 d0       	rcall	.+0      	; 0x44e <setCycle+0x6>
     44e:	cd b7       	in	r28, 0x3d	; 61
     450:	de b7       	in	r29, 0x3e	; 62
     452:	9a 83       	std	Y+2, r25	; 0x02
     454:	89 83       	std	Y+1, r24	; 0x01
	cli();
     456:	f8 94       	cli
	OCR0A = dutycycle;
     458:	87 e4       	ldi	r24, 0x47	; 71
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	29 81       	ldd	r18, Y+1	; 0x01
     45e:	fc 01       	movw	r30, r24
     460:	20 83       	st	Z, r18
	sei();
     462:	78 94       	sei
	return;
}
     464:	0f 90       	pop	r0
     466:	0f 90       	pop	r0
     468:	cf 91       	pop	r28
     46a:	df 91       	pop	r29
     46c:	08 95       	ret

0000046e <__vector_18>:
/*
 * INTERRUPT SERVICE ROUTINES
 */

ISR(USART_RX_vect)
{
     46e:	1f 92       	push	r1
     470:	0f 92       	push	r0
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	0f 92       	push	r0
     476:	11 24       	eor	r1, r1
     478:	8f 93       	push	r24
     47a:	9f 93       	push	r25
     47c:	ef 93       	push	r30
     47e:	ff 93       	push	r31
     480:	df 93       	push	r29
     482:	cf 93       	push	r28
     484:	cd b7       	in	r28, 0x3d	; 61
     486:	de b7       	in	r29, 0x3e	; 62
	/* Wait for data to be received */
	while ( !(UCSR0A  & (1 << RXC0)) )
     488:	00 00       	nop
     48a:	80 ec       	ldi	r24, 0xC0	; 192
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	fc 01       	movw	r30, r24
     490:	80 81       	ld	r24, Z
     492:	88 23       	and	r24, r24
     494:	d4 f7       	brge	.-12     	; 0x48a <__vector_18+0x1c>
	;
	/* Get and return received data from buffer */
	//dim = UDR0;
	rxflag = 1;
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	80 93 0e 01 	sts	0x010E, r24
}
     49c:	cf 91       	pop	r28
     49e:	df 91       	pop	r29
     4a0:	ff 91       	pop	r31
     4a2:	ef 91       	pop	r30
     4a4:	9f 91       	pop	r25
     4a6:	8f 91       	pop	r24
     4a8:	0f 90       	pop	r0
     4aa:	0f be       	out	0x3f, r0	; 63
     4ac:	0f 90       	pop	r0
     4ae:	1f 90       	pop	r1
     4b0:	18 95       	reti

000004b2 <__vector_14>:
 
 
//OLD: 2/15/2012
//ISR(TIMER0_OVF_vect)
ISR(TIMER0_COMPA_vect)
{
     4b2:	1f 92       	push	r1
     4b4:	0f 92       	push	r0
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	0f 92       	push	r0
     4ba:	11 24       	eor	r1, r1
     4bc:	0f 93       	push	r16
     4be:	1f 93       	push	r17
     4c0:	2f 93       	push	r18
     4c2:	3f 93       	push	r19
     4c4:	4f 93       	push	r20
     4c6:	5f 93       	push	r21
     4c8:	6f 93       	push	r22
     4ca:	7f 93       	push	r23
     4cc:	8f 93       	push	r24
     4ce:	9f 93       	push	r25
     4d0:	af 93       	push	r26
     4d2:	bf 93       	push	r27
     4d4:	ef 93       	push	r30
     4d6:	ff 93       	push	r31
     4d8:	df 93       	push	r29
     4da:	cf 93       	push	r28
     4dc:	cd b7       	in	r28, 0x3d	; 61
     4de:	de b7       	in	r29, 0x3e	; 62
     4e0:	68 97       	sbiw	r28, 0x18	; 24
     4e2:	de bf       	out	0x3e, r29	; 62
     4e4:	cd bf       	out	0x3d, r28	; 61
	if( zerocross == 1) 
     4e6:	80 91 02 01 	lds	r24, 0x0102
     4ea:	81 30       	cpi	r24, 0x01	; 1
     4ec:	09 f0       	breq	.+2      	; 0x4f0 <__vector_14+0x3e>
     4ee:	03 c1       	rjmp	.+518    	; 0x6f6 <__vector_14+0x244>
	{
		if( count >= dim )
     4f0:	20 91 0c 01 	lds	r18, 0x010C
     4f4:	30 91 0d 01 	lds	r19, 0x010D
     4f8:	80 91 00 01 	lds	r24, 0x0100
     4fc:	90 91 01 01 	lds	r25, 0x0101
     500:	28 17       	cp	r18, r24
     502:	39 07       	cpc	r19, r25
     504:	08 f4       	brcc	.+2      	; 0x508 <__vector_14+0x56>
     506:	ee c0       	rjmp	.+476    	; 0x6e4 <__vector_14+0x232>
		{
			//PORTD |= (1 << PORTD6);
			PORTB |= (1 << PORTB0);
     508:	85 e2       	ldi	r24, 0x25	; 37
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	25 e2       	ldi	r18, 0x25	; 37
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	f9 01       	movw	r30, r18
     512:	20 81       	ld	r18, Z
     514:	21 60       	ori	r18, 0x01	; 1
     516:	fc 01       	movw	r30, r24
     518:	20 83       	st	Z, r18
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	a0 ea       	ldi	r26, 0xA0	; 160
     520:	b0 e4       	ldi	r27, 0x40	; 64
     522:	89 83       	std	Y+1, r24	; 0x01
     524:	9a 83       	std	Y+2, r25	; 0x02
     526:	ab 83       	std	Y+3, r26	; 0x03
     528:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     52a:	69 81       	ldd	r22, Y+1	; 0x01
     52c:	7a 81       	ldd	r23, Y+2	; 0x02
     52e:	8b 81       	ldd	r24, Y+3	; 0x03
     530:	9c 81       	ldd	r25, Y+4	; 0x04
     532:	2b ea       	ldi	r18, 0xAB	; 171
     534:	3a ea       	ldi	r19, 0xAA	; 170
     536:	4a ea       	ldi	r20, 0xAA	; 170
     538:	50 e4       	ldi	r21, 0x40	; 64
     53a:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3>
     53e:	dc 01       	movw	r26, r24
     540:	cb 01       	movw	r24, r22
     542:	8d 83       	std	Y+5, r24	; 0x05
     544:	9e 83       	std	Y+6, r25	; 0x06
     546:	af 83       	std	Y+7, r26	; 0x07
     548:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     54a:	11 e0       	ldi	r17, 0x01	; 1
     54c:	6d 81       	ldd	r22, Y+5	; 0x05
     54e:	7e 81       	ldd	r23, Y+6	; 0x06
     550:	8f 81       	ldd	r24, Y+7	; 0x07
     552:	98 85       	ldd	r25, Y+8	; 0x08
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	30 e0       	ldi	r19, 0x00	; 0
     558:	40 e8       	ldi	r20, 0x80	; 128
     55a:	5f e3       	ldi	r21, 0x3F	; 63
     55c:	0e 94 14 08 	call	0x1028	; 0x1028 <__ltsf2>
     560:	88 23       	and	r24, r24
     562:	0c f0       	brlt	.+2      	; 0x566 <__vector_14+0xb4>
     564:	10 e0       	ldi	r17, 0x00	; 0
     566:	11 23       	and	r17, r17
     568:	19 f0       	breq	.+6      	; 0x570 <__vector_14+0xbe>
		__ticks = 1;
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	89 87       	std	Y+9, r24	; 0x09
     56e:	a3 c0       	rjmp	.+326    	; 0x6b6 <__vector_14+0x204>
	else if (__tmp > 255)
     570:	11 e0       	ldi	r17, 0x01	; 1
     572:	6d 81       	ldd	r22, Y+5	; 0x05
     574:	7e 81       	ldd	r23, Y+6	; 0x06
     576:	8f 81       	ldd	r24, Y+7	; 0x07
     578:	98 85       	ldd	r25, Y+8	; 0x08
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	4f e7       	ldi	r20, 0x7F	; 127
     580:	53 e4       	ldi	r21, 0x43	; 67
     582:	0e 94 b4 07 	call	0xf68	; 0xf68 <__gtsf2>
     586:	18 16       	cp	r1, r24
     588:	0c f0       	brlt	.+2      	; 0x58c <__vector_14+0xda>
     58a:	10 e0       	ldi	r17, 0x00	; 0
     58c:	11 23       	and	r17, r17
     58e:	09 f4       	brne	.+2      	; 0x592 <__vector_14+0xe0>
     590:	89 c0       	rjmp	.+274    	; 0x6a4 <__vector_14+0x1f2>
	{
		_delay_ms(__us / 1000.0);
     592:	69 81       	ldd	r22, Y+1	; 0x01
     594:	7a 81       	ldd	r23, Y+2	; 0x02
     596:	8b 81       	ldd	r24, Y+3	; 0x03
     598:	9c 81       	ldd	r25, Y+4	; 0x04
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	4a e7       	ldi	r20, 0x7A	; 122
     5a0:	54 e4       	ldi	r21, 0x44	; 68
     5a2:	0e 94 06 07 	call	0xe0c	; 0xe0c <__divsf3>
     5a6:	dc 01       	movw	r26, r24
     5a8:	cb 01       	movw	r24, r22
     5aa:	8a 87       	std	Y+10, r24	; 0x0a
     5ac:	9b 87       	std	Y+11, r25	; 0x0b
     5ae:	ac 87       	std	Y+12, r26	; 0x0c
     5b0:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5b2:	6a 85       	ldd	r22, Y+10	; 0x0a
     5b4:	7b 85       	ldd	r23, Y+11	; 0x0b
     5b6:	8c 85       	ldd	r24, Y+12	; 0x0c
     5b8:	9d 85       	ldd	r25, Y+13	; 0x0d
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	4a e7       	ldi	r20, 0x7A	; 122
     5c0:	55 e4       	ldi	r21, 0x45	; 69
     5c2:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3>
     5c6:	dc 01       	movw	r26, r24
     5c8:	cb 01       	movw	r24, r22
     5ca:	8e 87       	std	Y+14, r24	; 0x0e
     5cc:	9f 87       	std	Y+15, r25	; 0x0f
     5ce:	a8 8b       	std	Y+16, r26	; 0x10
     5d0:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     5d2:	11 e0       	ldi	r17, 0x01	; 1
     5d4:	6e 85       	ldd	r22, Y+14	; 0x0e
     5d6:	7f 85       	ldd	r23, Y+15	; 0x0f
     5d8:	88 89       	ldd	r24, Y+16	; 0x10
     5da:	99 89       	ldd	r25, Y+17	; 0x11
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	40 e8       	ldi	r20, 0x80	; 128
     5e2:	5f e3       	ldi	r21, 0x3F	; 63
     5e4:	0e 94 14 08 	call	0x1028	; 0x1028 <__ltsf2>
     5e8:	88 23       	and	r24, r24
     5ea:	0c f0       	brlt	.+2      	; 0x5ee <__vector_14+0x13c>
     5ec:	10 e0       	ldi	r17, 0x00	; 0
     5ee:	11 23       	and	r17, r17
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__vector_14+0x14a>
		__ticks = 1;
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	9b 8b       	std	Y+19, r25	; 0x13
     5f8:	8a 8b       	std	Y+18, r24	; 0x12
     5fa:	46 c0       	rjmp	.+140    	; 0x688 <__vector_14+0x1d6>
	else if (__tmp > 65535)
     5fc:	11 e0       	ldi	r17, 0x01	; 1
     5fe:	6e 85       	ldd	r22, Y+14	; 0x0e
     600:	7f 85       	ldd	r23, Y+15	; 0x0f
     602:	88 89       	ldd	r24, Y+16	; 0x10
     604:	99 89       	ldd	r25, Y+17	; 0x11
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	3f ef       	ldi	r19, 0xFF	; 255
     60a:	4f e7       	ldi	r20, 0x7F	; 127
     60c:	57 e4       	ldi	r21, 0x47	; 71
     60e:	0e 94 b4 07 	call	0xf68	; 0xf68 <__gtsf2>
     612:	18 16       	cp	r1, r24
     614:	0c f0       	brlt	.+2      	; 0x618 <__vector_14+0x166>
     616:	10 e0       	ldi	r17, 0x00	; 0
     618:	11 23       	and	r17, r17
     61a:	61 f1       	breq	.+88     	; 0x674 <__vector_14+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     61c:	6a 85       	ldd	r22, Y+10	; 0x0a
     61e:	7b 85       	ldd	r23, Y+11	; 0x0b
     620:	8c 85       	ldd	r24, Y+12	; 0x0c
     622:	9d 85       	ldd	r25, Y+13	; 0x0d
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	40 e2       	ldi	r20, 0x20	; 32
     62a:	51 e4       	ldi	r21, 0x41	; 65
     62c:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3>
     630:	dc 01       	movw	r26, r24
     632:	cb 01       	movw	r24, r22
     634:	bc 01       	movw	r22, r24
     636:	cd 01       	movw	r24, r26
     638:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     63c:	dc 01       	movw	r26, r24
     63e:	cb 01       	movw	r24, r22
     640:	9b 8b       	std	Y+19, r25	; 0x13
     642:	8a 8b       	std	Y+18, r24	; 0x12
     644:	12 c0       	rjmp	.+36     	; 0x66a <__vector_14+0x1b8>
     646:	80 e9       	ldi	r24, 0x90	; 144
     648:	91 e0       	ldi	r25, 0x01	; 1
     64a:	9d 8b       	std	Y+21, r25	; 0x15
     64c:	8c 8b       	std	Y+20, r24	; 0x14
     64e:	8c 89       	ldd	r24, Y+20	; 0x14
     650:	9d 89       	ldd	r25, Y+21	; 0x15
     652:	8c 01       	movw	r16, r24
     654:	c8 01       	movw	r24, r16
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <__vector_14+0x1a4>
     65a:	8c 01       	movw	r16, r24
     65c:	1d 8b       	std	Y+21, r17	; 0x15
     65e:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     660:	8a 89       	ldd	r24, Y+18	; 0x12
     662:	9b 89       	ldd	r25, Y+19	; 0x13
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	9b 8b       	std	Y+19, r25	; 0x13
     668:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     66a:	8a 89       	ldd	r24, Y+18	; 0x12
     66c:	9b 89       	ldd	r25, Y+19	; 0x13
     66e:	00 97       	sbiw	r24, 0x00	; 0
     670:	51 f7       	brne	.-44     	; 0x646 <__vector_14+0x194>
     672:	28 c0       	rjmp	.+80     	; 0x6c4 <__vector_14+0x212>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     674:	6e 85       	ldd	r22, Y+14	; 0x0e
     676:	7f 85       	ldd	r23, Y+15	; 0x0f
     678:	88 89       	ldd	r24, Y+16	; 0x10
     67a:	99 89       	ldd	r25, Y+17	; 0x11
     67c:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     680:	dc 01       	movw	r26, r24
     682:	cb 01       	movw	r24, r22
     684:	9b 8b       	std	Y+19, r25	; 0x13
     686:	8a 8b       	std	Y+18, r24	; 0x12
     688:	8a 89       	ldd	r24, Y+18	; 0x12
     68a:	9b 89       	ldd	r25, Y+19	; 0x13
     68c:	9f 8b       	std	Y+23, r25	; 0x17
     68e:	8e 8b       	std	Y+22, r24	; 0x16
     690:	8e 89       	ldd	r24, Y+22	; 0x16
     692:	9f 89       	ldd	r25, Y+23	; 0x17
     694:	8c 01       	movw	r16, r24
     696:	f8 01       	movw	r30, r16
     698:	31 97       	sbiw	r30, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <__vector_14+0x1e6>
     69c:	8f 01       	movw	r16, r30
     69e:	1f 8b       	std	Y+23, r17	; 0x17
     6a0:	0e 8b       	std	Y+22, r16	; 0x16
     6a2:	10 c0       	rjmp	.+32     	; 0x6c4 <__vector_14+0x212>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     6a4:	6d 81       	ldd	r22, Y+5	; 0x05
     6a6:	7e 81       	ldd	r23, Y+6	; 0x06
     6a8:	8f 81       	ldd	r24, Y+7	; 0x07
     6aa:	98 85       	ldd	r25, Y+8	; 0x08
     6ac:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     6b0:	dc 01       	movw	r26, r24
     6b2:	cb 01       	movw	r24, r22
     6b4:	89 87       	std	Y+9, r24	; 0x09
     6b6:	89 85       	ldd	r24, Y+9	; 0x09
     6b8:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     6ba:	88 8d       	ldd	r24, Y+24	; 0x18
     6bc:	18 2f       	mov	r17, r24
     6be:	1a 95       	dec	r17
     6c0:	f1 f7       	brne	.-4      	; 0x6be <__vector_14+0x20c>
     6c2:	18 8f       	std	Y+24, r17	; 0x18
			_delay_us( 5 );
			//PORTD &= ~(1 << PORTD6);
			PORTB &= ~(1 << PORTB0);
     6c4:	85 e2       	ldi	r24, 0x25	; 37
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	25 e2       	ldi	r18, 0x25	; 37
     6ca:	30 e0       	ldi	r19, 0x00	; 0
     6cc:	f9 01       	movw	r30, r18
     6ce:	20 81       	ld	r18, Z
     6d0:	2e 7f       	andi	r18, 0xFE	; 254
     6d2:	fc 01       	movw	r30, r24
     6d4:	20 83       	st	Z, r18
			count = 0;
     6d6:	10 92 0d 01 	sts	0x010D, r1
     6da:	10 92 0c 01 	sts	0x010C, r1
			zerocross = 0;
     6de:	10 92 02 01 	sts	0x0102, r1
     6e2:	09 c0       	rjmp	.+18     	; 0x6f6 <__vector_14+0x244>
		}
		else
		{
			
			count = count + 1;
     6e4:	80 91 0c 01 	lds	r24, 0x010C
     6e8:	90 91 0d 01 	lds	r25, 0x010D
     6ec:	01 96       	adiw	r24, 0x01	; 1
     6ee:	90 93 0d 01 	sts	0x010D, r25
     6f2:	80 93 0c 01 	sts	0x010C, r24
		}
	}
}
     6f6:	68 96       	adiw	r28, 0x18	; 24
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	cd bf       	out	0x3d, r28	; 61
     6fc:	cf 91       	pop	r28
     6fe:	df 91       	pop	r29
     700:	ff 91       	pop	r31
     702:	ef 91       	pop	r30
     704:	bf 91       	pop	r27
     706:	af 91       	pop	r26
     708:	9f 91       	pop	r25
     70a:	8f 91       	pop	r24
     70c:	7f 91       	pop	r23
     70e:	6f 91       	pop	r22
     710:	5f 91       	pop	r21
     712:	4f 91       	pop	r20
     714:	3f 91       	pop	r19
     716:	2f 91       	pop	r18
     718:	1f 91       	pop	r17
     71a:	0f 91       	pop	r16
     71c:	0f 90       	pop	r0
     71e:	0f be       	out	0x3f, r0	; 63
     720:	0f 90       	pop	r0
     722:	1f 90       	pop	r1
     724:	18 95       	reti

00000726 <__vector_1>:

ISR(INT0_vect)
{
     726:	1f 92       	push	r1
     728:	0f 92       	push	r0
     72a:	0f b6       	in	r0, 0x3f	; 63
     72c:	0f 92       	push	r0
     72e:	11 24       	eor	r1, r1
     730:	8f 93       	push	r24
     732:	df 93       	push	r29
     734:	cf 93       	push	r28
     736:	cd b7       	in	r28, 0x3d	; 61
     738:	de b7       	in	r29, 0x3e	; 62
	zerocross = 1;
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	80 93 02 01 	sts	0x0102, r24
}
     740:	cf 91       	pop	r28
     742:	df 91       	pop	r29
     744:	8f 91       	pop	r24
     746:	0f 90       	pop	r0
     748:	0f be       	out	0x3f, r0	; 63
     74a:	0f 90       	pop	r0
     74c:	1f 90       	pop	r1
     74e:	18 95       	reti

00000750 <__vector_2>:

ISR(INT1_vect)
{
     750:	1f 92       	push	r1
     752:	0f 92       	push	r0
     754:	0f b6       	in	r0, 0x3f	; 63
     756:	0f 92       	push	r0
     758:	11 24       	eor	r1, r1
     75a:	2f 93       	push	r18
     75c:	3f 93       	push	r19
     75e:	8f 93       	push	r24
     760:	9f 93       	push	r25
     762:	ef 93       	push	r30
     764:	ff 93       	push	r31
     766:	df 93       	push	r29
     768:	cf 93       	push	r28
     76a:	cd b7       	in	r28, 0x3d	; 61
     76c:	de b7       	in	r29, 0x3e	; 62
	//Go to low power state
	if(slpflag == 0)
     76e:	80 91 0f 01 	lds	r24, 0x010F
     772:	88 23       	and	r24, r24
     774:	09 f5       	brne	.+66     	; 0x7b8 <__vector_2+0x68>
	{
		PORTB &= ~(1 << PORTB0);
     776:	85 e2       	ldi	r24, 0x25	; 37
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	25 e2       	ldi	r18, 0x25	; 37
     77c:	30 e0       	ldi	r19, 0x00	; 0
     77e:	f9 01       	movw	r30, r18
     780:	20 81       	ld	r18, Z
     782:	2e 7f       	andi	r18, 0xFE	; 254
     784:	fc 01       	movw	r30, r24
     786:	20 83       	st	Z, r18
		set_sleep_mode( SLEEP_MODE_PWR_SAVE );
     788:	83 e5       	ldi	r24, 0x53	; 83
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	23 e5       	ldi	r18, 0x53	; 83
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	f9 01       	movw	r30, r18
     792:	20 81       	ld	r18, Z
     794:	21 7f       	andi	r18, 0xF1	; 241
     796:	26 60       	ori	r18, 0x06	; 6
     798:	fc 01       	movw	r30, r24
     79a:	20 83       	st	Z, r18
		sleep_enable();
     79c:	83 e5       	ldi	r24, 0x53	; 83
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	23 e5       	ldi	r18, 0x53	; 83
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	f9 01       	movw	r30, r18
     7a6:	20 81       	ld	r18, Z
     7a8:	21 60       	ori	r18, 0x01	; 1
     7aa:	fc 01       	movw	r30, r24
     7ac:	20 83       	st	Z, r18
		sleep_cpu();
     7ae:	88 95       	sleep
		slpflag = 1;
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	80 93 0f 01 	sts	0x010F, r24
     7b6:	0b c0       	rjmp	.+22     	; 0x7ce <__vector_2+0x7e>
	}		
	else
	{
		sleep_disable();
     7b8:	83 e5       	ldi	r24, 0x53	; 83
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	23 e5       	ldi	r18, 0x53	; 83
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	f9 01       	movw	r30, r18
     7c2:	20 81       	ld	r18, Z
     7c4:	2e 7f       	andi	r18, 0xFE	; 254
     7c6:	fc 01       	movw	r30, r24
     7c8:	20 83       	st	Z, r18
		slpflag = 0;
     7ca:	10 92 0f 01 	sts	0x010F, r1
	}		
     7ce:	cf 91       	pop	r28
     7d0:	df 91       	pop	r29
     7d2:	ff 91       	pop	r31
     7d4:	ef 91       	pop	r30
     7d6:	9f 91       	pop	r25
     7d8:	8f 91       	pop	r24
     7da:	3f 91       	pop	r19
     7dc:	2f 91       	pop	r18
     7de:	0f 90       	pop	r0
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	0f 90       	pop	r0
     7e4:	1f 90       	pop	r1
     7e6:	18 95       	reti

000007e8 <USART_Init>:
 */ 

#include <avr\io.h> 

void USART_Init( unsigned int ubrr)
{
     7e8:	df 93       	push	r29
     7ea:	cf 93       	push	r28
     7ec:	00 d0       	rcall	.+0      	; 0x7ee <USART_Init+0x6>
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
     7f2:	9a 83       	std	Y+2, r25	; 0x02
     7f4:	89 83       	std	Y+1, r24	; 0x01
/*Set baud rate */
    UBRR0H = (ubrr >> 8);
     7f6:	85 ec       	ldi	r24, 0xC5	; 197
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	29 81       	ldd	r18, Y+1	; 0x01
     7fc:	3a 81       	ldd	r19, Y+2	; 0x02
     7fe:	23 2f       	mov	r18, r19
     800:	33 27       	eor	r19, r19
     802:	fc 01       	movw	r30, r24
     804:	20 83       	st	Z, r18
    UBRR0L = ubrr;
     806:	84 ec       	ldi	r24, 0xC4	; 196
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	29 81       	ldd	r18, Y+1	; 0x01
     80c:	fc 01       	movw	r30, r24
     80e:	20 83       	st	Z, r18
    
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);      // Enable receiver and transmitter and interrupt receive
     810:	81 ec       	ldi	r24, 0xC1	; 193
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	28 e9       	ldi	r18, 0x98	; 152
     816:	fc 01       	movw	r30, r24
     818:	20 83       	st	Z, r18
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);    // Set frame: 8data, 1 stp
     81a:	82 ec       	ldi	r24, 0xC2	; 194
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	26 e0       	ldi	r18, 0x06	; 6
     820:	fc 01       	movw	r30, r24
     822:	20 83       	st	Z, r18
}
     824:	0f 90       	pop	r0
     826:	0f 90       	pop	r0
     828:	cf 91       	pop	r28
     82a:	df 91       	pop	r29
     82c:	08 95       	ret

0000082e <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
     82e:	df 93       	push	r29
     830:	cf 93       	push	r28
     832:	0f 92       	push	r0
     834:	cd b7       	in	r28, 0x3d	; 61
     836:	de b7       	in	r29, 0x3e	; 62
     838:	89 83       	std	Y+1, r24	; 0x01
	/* Wait for empty transmit buffer */
    while ( !(UCSR0A & (1 << UDRE0)) ) // Wait until buffer is empty
     83a:	00 00       	nop
     83c:	80 ec       	ldi	r24, 0xC0	; 192
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	fc 01       	movw	r30, r24
     842:	80 81       	ld	r24, Z
     844:	88 2f       	mov	r24, r24
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	80 72       	andi	r24, 0x20	; 32
     84a:	90 70       	andi	r25, 0x00	; 0
     84c:	00 97       	sbiw	r24, 0x00	; 0
     84e:	b1 f3       	breq	.-20     	; 0x83c <USART_Transmit+0xe>

	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     850:	86 ec       	ldi	r24, 0xC6	; 198
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	29 81       	ldd	r18, Y+1	; 0x01
     856:	fc 01       	movw	r30, r24
     858:	20 83       	st	Z, r18
}
     85a:	0f 90       	pop	r0
     85c:	cf 91       	pop	r28
     85e:	df 91       	pop	r29
     860:	08 95       	ret

00000862 <USART_Receive>:


unsigned char USART_Receive( void )
{
     862:	df 93       	push	r29
     864:	cf 93       	push	r28
     866:	cd b7       	in	r28, 0x3d	; 61
     868:	de b7       	in	r29, 0x3e	; 62
	
}
     86a:	cf 91       	pop	r28
     86c:	df 91       	pop	r29
     86e:	08 95       	ret

00000870 <__fixunssfsi>:
     870:	ef 92       	push	r14
     872:	ff 92       	push	r15
     874:	0f 93       	push	r16
     876:	1f 93       	push	r17
     878:	7b 01       	movw	r14, r22
     87a:	8c 01       	movw	r16, r24
     87c:	20 e0       	ldi	r18, 0x00	; 0
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	5f e4       	ldi	r21, 0x4F	; 79
     884:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__gesf2>
     888:	87 fd       	sbrc	r24, 7
     88a:	11 c0       	rjmp	.+34     	; 0x8ae <__fixunssfsi+0x3e>
     88c:	c8 01       	movw	r24, r16
     88e:	b7 01       	movw	r22, r14
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	5f e4       	ldi	r21, 0x4F	; 79
     898:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__subsf3>
     89c:	0e 94 44 08 	call	0x1088	; 0x1088 <__fixsfsi>
     8a0:	9b 01       	movw	r18, r22
     8a2:	ac 01       	movw	r20, r24
     8a4:	20 50       	subi	r18, 0x00	; 0
     8a6:	30 40       	sbci	r19, 0x00	; 0
     8a8:	40 40       	sbci	r20, 0x00	; 0
     8aa:	50 48       	sbci	r21, 0x80	; 128
     8ac:	06 c0       	rjmp	.+12     	; 0x8ba <__fixunssfsi+0x4a>
     8ae:	c8 01       	movw	r24, r16
     8b0:	b7 01       	movw	r22, r14
     8b2:	0e 94 44 08 	call	0x1088	; 0x1088 <__fixsfsi>
     8b6:	9b 01       	movw	r18, r22
     8b8:	ac 01       	movw	r20, r24
     8ba:	b9 01       	movw	r22, r18
     8bc:	ca 01       	movw	r24, r20
     8be:	1f 91       	pop	r17
     8c0:	0f 91       	pop	r16
     8c2:	ff 90       	pop	r15
     8c4:	ef 90       	pop	r14
     8c6:	08 95       	ret

000008c8 <_fpadd_parts>:
     8c8:	a0 e0       	ldi	r26, 0x00	; 0
     8ca:	b0 e0       	ldi	r27, 0x00	; 0
     8cc:	ea e6       	ldi	r30, 0x6A	; 106
     8ce:	f4 e0       	ldi	r31, 0x04	; 4
     8d0:	0c 94 2a 0a 	jmp	0x1454	; 0x1454 <__prologue_saves__+0x8>
     8d4:	fc 01       	movw	r30, r24
     8d6:	ea 01       	movw	r28, r20
     8d8:	80 81       	ld	r24, Z
     8da:	82 30       	cpi	r24, 0x02	; 2
     8dc:	08 f4       	brcc	.+2      	; 0x8e0 <_fpadd_parts+0x18>
     8de:	38 c1       	rjmp	.+624    	; 0xb50 <__stack+0x251>
     8e0:	db 01       	movw	r26, r22
     8e2:	9c 91       	ld	r25, X
     8e4:	92 30       	cpi	r25, 0x02	; 2
     8e6:	08 f4       	brcc	.+2      	; 0x8ea <_fpadd_parts+0x22>
     8e8:	30 c1       	rjmp	.+608    	; 0xb4a <__stack+0x24b>
     8ea:	84 30       	cpi	r24, 0x04	; 4
     8ec:	59 f4       	brne	.+22     	; 0x904 <__stack+0x5>
     8ee:	94 30       	cpi	r25, 0x04	; 4
     8f0:	09 f0       	breq	.+2      	; 0x8f4 <_fpadd_parts+0x2c>
     8f2:	2e c1       	rjmp	.+604    	; 0xb50 <__stack+0x251>
     8f4:	91 81       	ldd	r25, Z+1	; 0x01
     8f6:	11 96       	adiw	r26, 0x01	; 1
     8f8:	8c 91       	ld	r24, X
     8fa:	11 97       	sbiw	r26, 0x01	; 1
     8fc:	98 17       	cp	r25, r24
     8fe:	09 f0       	breq	.+2      	; 0x902 <__stack+0x3>
     900:	21 c1       	rjmp	.+578    	; 0xb44 <__stack+0x245>
     902:	26 c1       	rjmp	.+588    	; 0xb50 <__stack+0x251>
     904:	94 30       	cpi	r25, 0x04	; 4
     906:	09 f4       	brne	.+2      	; 0x90a <__stack+0xb>
     908:	20 c1       	rjmp	.+576    	; 0xb4a <__stack+0x24b>
     90a:	92 30       	cpi	r25, 0x02	; 2
     90c:	b1 f4       	brne	.+44     	; 0x93a <__stack+0x3b>
     90e:	82 30       	cpi	r24, 0x02	; 2
     910:	09 f0       	breq	.+2      	; 0x914 <__stack+0x15>
     912:	1e c1       	rjmp	.+572    	; 0xb50 <__stack+0x251>
     914:	ca 01       	movw	r24, r20
     916:	af 01       	movw	r20, r30
     918:	28 e0       	ldi	r18, 0x08	; 8
     91a:	da 01       	movw	r26, r20
     91c:	0d 90       	ld	r0, X+
     91e:	ad 01       	movw	r20, r26
     920:	dc 01       	movw	r26, r24
     922:	0d 92       	st	X+, r0
     924:	cd 01       	movw	r24, r26
     926:	21 50       	subi	r18, 0x01	; 1
     928:	c1 f7       	brne	.-16     	; 0x91a <__stack+0x1b>
     92a:	db 01       	movw	r26, r22
     92c:	11 96       	adiw	r26, 0x01	; 1
     92e:	8c 91       	ld	r24, X
     930:	11 97       	sbiw	r26, 0x01	; 1
     932:	91 81       	ldd	r25, Z+1	; 0x01
     934:	89 23       	and	r24, r25
     936:	89 83       	std	Y+1, r24	; 0x01
     938:	0a c1       	rjmp	.+532    	; 0xb4e <__stack+0x24f>
     93a:	82 30       	cpi	r24, 0x02	; 2
     93c:	09 f4       	brne	.+2      	; 0x940 <__stack+0x41>
     93e:	05 c1       	rjmp	.+522    	; 0xb4a <__stack+0x24b>
     940:	c2 80       	ldd	r12, Z+2	; 0x02
     942:	d3 80       	ldd	r13, Z+3	; 0x03
     944:	db 01       	movw	r26, r22
     946:	12 96       	adiw	r26, 0x02	; 2
     948:	6d 90       	ld	r6, X+
     94a:	7c 90       	ld	r7, X
     94c:	13 97       	sbiw	r26, 0x03	; 3
     94e:	24 81       	ldd	r18, Z+4	; 0x04
     950:	35 81       	ldd	r19, Z+5	; 0x05
     952:	46 81       	ldd	r20, Z+6	; 0x06
     954:	57 81       	ldd	r21, Z+7	; 0x07
     956:	14 96       	adiw	r26, 0x04	; 4
     958:	ed 90       	ld	r14, X+
     95a:	fd 90       	ld	r15, X+
     95c:	0d 91       	ld	r16, X+
     95e:	1c 91       	ld	r17, X
     960:	17 97       	sbiw	r26, 0x07	; 7
     962:	c6 01       	movw	r24, r12
     964:	86 19       	sub	r24, r6
     966:	97 09       	sbc	r25, r7
     968:	5c 01       	movw	r10, r24
     96a:	97 ff       	sbrs	r25, 7
     96c:	04 c0       	rjmp	.+8      	; 0x976 <__stack+0x77>
     96e:	aa 24       	eor	r10, r10
     970:	bb 24       	eor	r11, r11
     972:	a8 1a       	sub	r10, r24
     974:	b9 0a       	sbc	r11, r25
     976:	b0 e2       	ldi	r27, 0x20	; 32
     978:	ab 16       	cp	r10, r27
     97a:	b1 04       	cpc	r11, r1
     97c:	0c f0       	brlt	.+2      	; 0x980 <__stack+0x81>
     97e:	61 c0       	rjmp	.+194    	; 0xa42 <__stack+0x143>
     980:	18 16       	cp	r1, r24
     982:	19 06       	cpc	r1, r25
     984:	6c f5       	brge	.+90     	; 0x9e0 <__stack+0xe1>
     986:	37 01       	movw	r6, r14
     988:	48 01       	movw	r8, r16
     98a:	0a 2c       	mov	r0, r10
     98c:	04 c0       	rjmp	.+8      	; 0x996 <__stack+0x97>
     98e:	96 94       	lsr	r9
     990:	87 94       	ror	r8
     992:	77 94       	ror	r7
     994:	67 94       	ror	r6
     996:	0a 94       	dec	r0
     998:	d2 f7       	brpl	.-12     	; 0x98e <__stack+0x8f>
     99a:	81 e0       	ldi	r24, 0x01	; 1
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	a0 e0       	ldi	r26, 0x00	; 0
     9a0:	b0 e0       	ldi	r27, 0x00	; 0
     9a2:	0a 2c       	mov	r0, r10
     9a4:	04 c0       	rjmp	.+8      	; 0x9ae <__stack+0xaf>
     9a6:	88 0f       	add	r24, r24
     9a8:	99 1f       	adc	r25, r25
     9aa:	aa 1f       	adc	r26, r26
     9ac:	bb 1f       	adc	r27, r27
     9ae:	0a 94       	dec	r0
     9b0:	d2 f7       	brpl	.-12     	; 0x9a6 <__stack+0xa7>
     9b2:	01 97       	sbiw	r24, 0x01	; 1
     9b4:	a1 09       	sbc	r26, r1
     9b6:	b1 09       	sbc	r27, r1
     9b8:	8e 21       	and	r24, r14
     9ba:	9f 21       	and	r25, r15
     9bc:	a0 23       	and	r26, r16
     9be:	b1 23       	and	r27, r17
     9c0:	ee 24       	eor	r14, r14
     9c2:	ff 24       	eor	r15, r15
     9c4:	87 01       	movw	r16, r14
     9c6:	e3 94       	inc	r14
     9c8:	00 97       	sbiw	r24, 0x00	; 0
     9ca:	a1 05       	cpc	r26, r1
     9cc:	b1 05       	cpc	r27, r1
     9ce:	19 f4       	brne	.+6      	; 0x9d6 <__stack+0xd7>
     9d0:	ee 24       	eor	r14, r14
     9d2:	ff 24       	eor	r15, r15
     9d4:	87 01       	movw	r16, r14
     9d6:	e6 28       	or	r14, r6
     9d8:	f7 28       	or	r15, r7
     9da:	08 29       	or	r16, r8
     9dc:	19 29       	or	r17, r9
     9de:	3c c0       	rjmp	.+120    	; 0xa58 <__stack+0x159>
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	d1 f1       	breq	.+116    	; 0xa58 <__stack+0x159>
     9e4:	ca 0c       	add	r12, r10
     9e6:	db 1c       	adc	r13, r11
     9e8:	39 01       	movw	r6, r18
     9ea:	4a 01       	movw	r8, r20
     9ec:	0a 2c       	mov	r0, r10
     9ee:	04 c0       	rjmp	.+8      	; 0x9f8 <__stack+0xf9>
     9f0:	96 94       	lsr	r9
     9f2:	87 94       	ror	r8
     9f4:	77 94       	ror	r7
     9f6:	67 94       	ror	r6
     9f8:	0a 94       	dec	r0
     9fa:	d2 f7       	brpl	.-12     	; 0x9f0 <__stack+0xf1>
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	a0 e0       	ldi	r26, 0x00	; 0
     a02:	b0 e0       	ldi	r27, 0x00	; 0
     a04:	0a 2c       	mov	r0, r10
     a06:	04 c0       	rjmp	.+8      	; 0xa10 <__stack+0x111>
     a08:	88 0f       	add	r24, r24
     a0a:	99 1f       	adc	r25, r25
     a0c:	aa 1f       	adc	r26, r26
     a0e:	bb 1f       	adc	r27, r27
     a10:	0a 94       	dec	r0
     a12:	d2 f7       	brpl	.-12     	; 0xa08 <__stack+0x109>
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	a1 09       	sbc	r26, r1
     a18:	b1 09       	sbc	r27, r1
     a1a:	82 23       	and	r24, r18
     a1c:	93 23       	and	r25, r19
     a1e:	a4 23       	and	r26, r20
     a20:	b5 23       	and	r27, r21
     a22:	21 e0       	ldi	r18, 0x01	; 1
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	40 e0       	ldi	r20, 0x00	; 0
     a28:	50 e0       	ldi	r21, 0x00	; 0
     a2a:	00 97       	sbiw	r24, 0x00	; 0
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	19 f4       	brne	.+6      	; 0xa38 <__stack+0x139>
     a32:	20 e0       	ldi	r18, 0x00	; 0
     a34:	30 e0       	ldi	r19, 0x00	; 0
     a36:	a9 01       	movw	r20, r18
     a38:	26 29       	or	r18, r6
     a3a:	37 29       	or	r19, r7
     a3c:	48 29       	or	r20, r8
     a3e:	59 29       	or	r21, r9
     a40:	0b c0       	rjmp	.+22     	; 0xa58 <__stack+0x159>
     a42:	6c 14       	cp	r6, r12
     a44:	7d 04       	cpc	r7, r13
     a46:	24 f4       	brge	.+8      	; 0xa50 <__stack+0x151>
     a48:	ee 24       	eor	r14, r14
     a4a:	ff 24       	eor	r15, r15
     a4c:	87 01       	movw	r16, r14
     a4e:	04 c0       	rjmp	.+8      	; 0xa58 <__stack+0x159>
     a50:	63 01       	movw	r12, r6
     a52:	20 e0       	ldi	r18, 0x00	; 0
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	a9 01       	movw	r20, r18
     a58:	81 81       	ldd	r24, Z+1	; 0x01
     a5a:	fb 01       	movw	r30, r22
     a5c:	91 81       	ldd	r25, Z+1	; 0x01
     a5e:	89 17       	cp	r24, r25
     a60:	09 f4       	brne	.+2      	; 0xa64 <__stack+0x165>
     a62:	45 c0       	rjmp	.+138    	; 0xaee <__stack+0x1ef>
     a64:	88 23       	and	r24, r24
     a66:	49 f0       	breq	.+18     	; 0xa7a <__stack+0x17b>
     a68:	d8 01       	movw	r26, r16
     a6a:	c7 01       	movw	r24, r14
     a6c:	82 1b       	sub	r24, r18
     a6e:	93 0b       	sbc	r25, r19
     a70:	a4 0b       	sbc	r26, r20
     a72:	b5 0b       	sbc	r27, r21
     a74:	9c 01       	movw	r18, r24
     a76:	ad 01       	movw	r20, r26
     a78:	04 c0       	rjmp	.+8      	; 0xa82 <__stack+0x183>
     a7a:	2e 19       	sub	r18, r14
     a7c:	3f 09       	sbc	r19, r15
     a7e:	40 0b       	sbc	r20, r16
     a80:	51 0b       	sbc	r21, r17
     a82:	57 fd       	sbrc	r21, 7
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__stack+0x18f>
     a86:	19 82       	std	Y+1, r1	; 0x01
     a88:	db 82       	std	Y+3, r13	; 0x03
     a8a:	ca 82       	std	Y+2, r12	; 0x02
     a8c:	0b c0       	rjmp	.+22     	; 0xaa4 <__stack+0x1a5>
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	89 83       	std	Y+1, r24	; 0x01
     a92:	db 82       	std	Y+3, r13	; 0x03
     a94:	ca 82       	std	Y+2, r12	; 0x02
     a96:	50 95       	com	r21
     a98:	40 95       	com	r20
     a9a:	30 95       	com	r19
     a9c:	21 95       	neg	r18
     a9e:	3f 4f       	sbci	r19, 0xFF	; 255
     aa0:	4f 4f       	sbci	r20, 0xFF	; 255
     aa2:	5f 4f       	sbci	r21, 0xFF	; 255
     aa4:	2c 83       	std	Y+4, r18	; 0x04
     aa6:	3d 83       	std	Y+5, r19	; 0x05
     aa8:	4e 83       	std	Y+6, r20	; 0x06
     aaa:	5f 83       	std	Y+7, r21	; 0x07
     aac:	0d c0       	rjmp	.+26     	; 0xac8 <__stack+0x1c9>
     aae:	88 0f       	add	r24, r24
     ab0:	99 1f       	adc	r25, r25
     ab2:	aa 1f       	adc	r26, r26
     ab4:	bb 1f       	adc	r27, r27
     ab6:	8c 83       	std	Y+4, r24	; 0x04
     ab8:	9d 83       	std	Y+5, r25	; 0x05
     aba:	ae 83       	std	Y+6, r26	; 0x06
     abc:	bf 83       	std	Y+7, r27	; 0x07
     abe:	8a 81       	ldd	r24, Y+2	; 0x02
     ac0:	9b 81       	ldd	r25, Y+3	; 0x03
     ac2:	01 97       	sbiw	r24, 0x01	; 1
     ac4:	9b 83       	std	Y+3, r25	; 0x03
     ac6:	8a 83       	std	Y+2, r24	; 0x02
     ac8:	8c 81       	ldd	r24, Y+4	; 0x04
     aca:	9d 81       	ldd	r25, Y+5	; 0x05
     acc:	ae 81       	ldd	r26, Y+6	; 0x06
     ace:	bf 81       	ldd	r27, Y+7	; 0x07
     ad0:	9c 01       	movw	r18, r24
     ad2:	ad 01       	movw	r20, r26
     ad4:	21 50       	subi	r18, 0x01	; 1
     ad6:	30 40       	sbci	r19, 0x00	; 0
     ad8:	40 40       	sbci	r20, 0x00	; 0
     ada:	50 40       	sbci	r21, 0x00	; 0
     adc:	2f 3f       	cpi	r18, 0xFF	; 255
     ade:	ef ef       	ldi	r30, 0xFF	; 255
     ae0:	3e 07       	cpc	r19, r30
     ae2:	ef ef       	ldi	r30, 0xFF	; 255
     ae4:	4e 07       	cpc	r20, r30
     ae6:	ef e3       	ldi	r30, 0x3F	; 63
     ae8:	5e 07       	cpc	r21, r30
     aea:	08 f3       	brcs	.-62     	; 0xaae <__stack+0x1af>
     aec:	0b c0       	rjmp	.+22     	; 0xb04 <__stack+0x205>
     aee:	89 83       	std	Y+1, r24	; 0x01
     af0:	db 82       	std	Y+3, r13	; 0x03
     af2:	ca 82       	std	Y+2, r12	; 0x02
     af4:	2e 0d       	add	r18, r14
     af6:	3f 1d       	adc	r19, r15
     af8:	40 1f       	adc	r20, r16
     afa:	51 1f       	adc	r21, r17
     afc:	2c 83       	std	Y+4, r18	; 0x04
     afe:	3d 83       	std	Y+5, r19	; 0x05
     b00:	4e 83       	std	Y+6, r20	; 0x06
     b02:	5f 83       	std	Y+7, r21	; 0x07
     b04:	83 e0       	ldi	r24, 0x03	; 3
     b06:	88 83       	st	Y, r24
     b08:	2c 81       	ldd	r18, Y+4	; 0x04
     b0a:	3d 81       	ldd	r19, Y+5	; 0x05
     b0c:	4e 81       	ldd	r20, Y+6	; 0x06
     b0e:	5f 81       	ldd	r21, Y+7	; 0x07
     b10:	57 ff       	sbrs	r21, 7
     b12:	1d c0       	rjmp	.+58     	; 0xb4e <__stack+0x24f>
     b14:	da 01       	movw	r26, r20
     b16:	c9 01       	movw	r24, r18
     b18:	81 70       	andi	r24, 0x01	; 1
     b1a:	90 70       	andi	r25, 0x00	; 0
     b1c:	a0 70       	andi	r26, 0x00	; 0
     b1e:	b0 70       	andi	r27, 0x00	; 0
     b20:	56 95       	lsr	r21
     b22:	47 95       	ror	r20
     b24:	37 95       	ror	r19
     b26:	27 95       	ror	r18
     b28:	82 2b       	or	r24, r18
     b2a:	93 2b       	or	r25, r19
     b2c:	a4 2b       	or	r26, r20
     b2e:	b5 2b       	or	r27, r21
     b30:	8c 83       	std	Y+4, r24	; 0x04
     b32:	9d 83       	std	Y+5, r25	; 0x05
     b34:	ae 83       	std	Y+6, r26	; 0x06
     b36:	bf 83       	std	Y+7, r27	; 0x07
     b38:	8a 81       	ldd	r24, Y+2	; 0x02
     b3a:	9b 81       	ldd	r25, Y+3	; 0x03
     b3c:	01 96       	adiw	r24, 0x01	; 1
     b3e:	9b 83       	std	Y+3, r25	; 0x03
     b40:	8a 83       	std	Y+2, r24	; 0x02
     b42:	05 c0       	rjmp	.+10     	; 0xb4e <__stack+0x24f>
     b44:	e3 e0       	ldi	r30, 0x03	; 3
     b46:	f1 e0       	ldi	r31, 0x01	; 1
     b48:	03 c0       	rjmp	.+6      	; 0xb50 <__stack+0x251>
     b4a:	fb 01       	movw	r30, r22
     b4c:	01 c0       	rjmp	.+2      	; 0xb50 <__stack+0x251>
     b4e:	fe 01       	movw	r30, r28
     b50:	cf 01       	movw	r24, r30
     b52:	cd b7       	in	r28, 0x3d	; 61
     b54:	de b7       	in	r29, 0x3e	; 62
     b56:	ee e0       	ldi	r30, 0x0E	; 14
     b58:	0c 94 46 0a 	jmp	0x148c	; 0x148c <__epilogue_restores__+0x8>

00000b5c <__addsf3>:
     b5c:	a0 e2       	ldi	r26, 0x20	; 32
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	e4 eb       	ldi	r30, 0xB4	; 180
     b62:	f5 e0       	ldi	r31, 0x05	; 5
     b64:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__+0x18>
     b68:	69 83       	std	Y+1, r22	; 0x01
     b6a:	7a 83       	std	Y+2, r23	; 0x02
     b6c:	8b 83       	std	Y+3, r24	; 0x03
     b6e:	9c 83       	std	Y+4, r25	; 0x04
     b70:	2d 83       	std	Y+5, r18	; 0x05
     b72:	3e 83       	std	Y+6, r19	; 0x06
     b74:	4f 83       	std	Y+7, r20	; 0x07
     b76:	58 87       	std	Y+8, r21	; 0x08
     b78:	89 e0       	ldi	r24, 0x09	; 9
     b7a:	e8 2e       	mov	r14, r24
     b7c:	f1 2c       	mov	r15, r1
     b7e:	ec 0e       	add	r14, r28
     b80:	fd 1e       	adc	r15, r29
     b82:	ce 01       	movw	r24, r28
     b84:	01 96       	adiw	r24, 0x01	; 1
     b86:	b7 01       	movw	r22, r14
     b88:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     b8c:	8e 01       	movw	r16, r28
     b8e:	0f 5e       	subi	r16, 0xEF	; 239
     b90:	1f 4f       	sbci	r17, 0xFF	; 255
     b92:	ce 01       	movw	r24, r28
     b94:	05 96       	adiw	r24, 0x05	; 5
     b96:	b8 01       	movw	r22, r16
     b98:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     b9c:	c7 01       	movw	r24, r14
     b9e:	b8 01       	movw	r22, r16
     ba0:	ae 01       	movw	r20, r28
     ba2:	47 5e       	subi	r20, 0xE7	; 231
     ba4:	5f 4f       	sbci	r21, 0xFF	; 255
     ba6:	0e 94 64 04 	call	0x8c8	; 0x8c8 <_fpadd_parts>
     baa:	0e 94 96 08 	call	0x112c	; 0x112c <__pack_f>
     bae:	a0 96       	adiw	r28, 0x20	; 32
     bb0:	e6 e0       	ldi	r30, 0x06	; 6
     bb2:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__+0x18>

00000bb6 <__subsf3>:
     bb6:	a0 e2       	ldi	r26, 0x20	; 32
     bb8:	b0 e0       	ldi	r27, 0x00	; 0
     bba:	e1 ee       	ldi	r30, 0xE1	; 225
     bbc:	f5 e0       	ldi	r31, 0x05	; 5
     bbe:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__+0x18>
     bc2:	69 83       	std	Y+1, r22	; 0x01
     bc4:	7a 83       	std	Y+2, r23	; 0x02
     bc6:	8b 83       	std	Y+3, r24	; 0x03
     bc8:	9c 83       	std	Y+4, r25	; 0x04
     bca:	2d 83       	std	Y+5, r18	; 0x05
     bcc:	3e 83       	std	Y+6, r19	; 0x06
     bce:	4f 83       	std	Y+7, r20	; 0x07
     bd0:	58 87       	std	Y+8, r21	; 0x08
     bd2:	8e 01       	movw	r16, r28
     bd4:	07 5f       	subi	r16, 0xF7	; 247
     bd6:	1f 4f       	sbci	r17, 0xFF	; 255
     bd8:	ce 01       	movw	r24, r28
     bda:	01 96       	adiw	r24, 0x01	; 1
     bdc:	b8 01       	movw	r22, r16
     bde:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     be2:	91 e1       	ldi	r25, 0x11	; 17
     be4:	e9 2e       	mov	r14, r25
     be6:	f1 2c       	mov	r15, r1
     be8:	ec 0e       	add	r14, r28
     bea:	fd 1e       	adc	r15, r29
     bec:	ce 01       	movw	r24, r28
     bee:	05 96       	adiw	r24, 0x05	; 5
     bf0:	b7 01       	movw	r22, r14
     bf2:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     bf6:	8a 89       	ldd	r24, Y+18	; 0x12
     bf8:	91 e0       	ldi	r25, 0x01	; 1
     bfa:	89 27       	eor	r24, r25
     bfc:	8a 8b       	std	Y+18, r24	; 0x12
     bfe:	c8 01       	movw	r24, r16
     c00:	b7 01       	movw	r22, r14
     c02:	ae 01       	movw	r20, r28
     c04:	47 5e       	subi	r20, 0xE7	; 231
     c06:	5f 4f       	sbci	r21, 0xFF	; 255
     c08:	0e 94 64 04 	call	0x8c8	; 0x8c8 <_fpadd_parts>
     c0c:	0e 94 96 08 	call	0x112c	; 0x112c <__pack_f>
     c10:	a0 96       	adiw	r28, 0x20	; 32
     c12:	e6 e0       	ldi	r30, 0x06	; 6
     c14:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__+0x18>

00000c18 <__mulsf3>:
     c18:	a0 e2       	ldi	r26, 0x20	; 32
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	e2 e1       	ldi	r30, 0x12	; 18
     c1e:	f6 e0       	ldi	r31, 0x06	; 6
     c20:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__prologue_saves__>
     c24:	69 83       	std	Y+1, r22	; 0x01
     c26:	7a 83       	std	Y+2, r23	; 0x02
     c28:	8b 83       	std	Y+3, r24	; 0x03
     c2a:	9c 83       	std	Y+4, r25	; 0x04
     c2c:	2d 83       	std	Y+5, r18	; 0x05
     c2e:	3e 83       	std	Y+6, r19	; 0x06
     c30:	4f 83       	std	Y+7, r20	; 0x07
     c32:	58 87       	std	Y+8, r21	; 0x08
     c34:	ce 01       	movw	r24, r28
     c36:	01 96       	adiw	r24, 0x01	; 1
     c38:	be 01       	movw	r22, r28
     c3a:	67 5f       	subi	r22, 0xF7	; 247
     c3c:	7f 4f       	sbci	r23, 0xFF	; 255
     c3e:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     c42:	ce 01       	movw	r24, r28
     c44:	05 96       	adiw	r24, 0x05	; 5
     c46:	be 01       	movw	r22, r28
     c48:	6f 5e       	subi	r22, 0xEF	; 239
     c4a:	7f 4f       	sbci	r23, 0xFF	; 255
     c4c:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     c50:	99 85       	ldd	r25, Y+9	; 0x09
     c52:	92 30       	cpi	r25, 0x02	; 2
     c54:	78 f0       	brcs	.+30     	; 0xc74 <__mulsf3+0x5c>
     c56:	89 89       	ldd	r24, Y+17	; 0x11
     c58:	82 30       	cpi	r24, 0x02	; 2
     c5a:	c0 f0       	brcs	.+48     	; 0xc8c <__mulsf3+0x74>
     c5c:	94 30       	cpi	r25, 0x04	; 4
     c5e:	19 f4       	brne	.+6      	; 0xc66 <__mulsf3+0x4e>
     c60:	82 30       	cpi	r24, 0x02	; 2
     c62:	41 f4       	brne	.+16     	; 0xc74 <__mulsf3+0x5c>
     c64:	cb c0       	rjmp	.+406    	; 0xdfc <__mulsf3+0x1e4>
     c66:	84 30       	cpi	r24, 0x04	; 4
     c68:	19 f4       	brne	.+6      	; 0xc70 <__mulsf3+0x58>
     c6a:	92 30       	cpi	r25, 0x02	; 2
     c6c:	79 f4       	brne	.+30     	; 0xc8c <__mulsf3+0x74>
     c6e:	c6 c0       	rjmp	.+396    	; 0xdfc <__mulsf3+0x1e4>
     c70:	92 30       	cpi	r25, 0x02	; 2
     c72:	51 f4       	brne	.+20     	; 0xc88 <__mulsf3+0x70>
     c74:	81 e0       	ldi	r24, 0x01	; 1
     c76:	2a 85       	ldd	r18, Y+10	; 0x0a
     c78:	9a 89       	ldd	r25, Y+18	; 0x12
     c7a:	29 17       	cp	r18, r25
     c7c:	09 f4       	brne	.+2      	; 0xc80 <__mulsf3+0x68>
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	8a 87       	std	Y+10, r24	; 0x0a
     c82:	ce 01       	movw	r24, r28
     c84:	09 96       	adiw	r24, 0x09	; 9
     c86:	bc c0       	rjmp	.+376    	; 0xe00 <__mulsf3+0x1e8>
     c88:	82 30       	cpi	r24, 0x02	; 2
     c8a:	51 f4       	brne	.+20     	; 0xca0 <__mulsf3+0x88>
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	2a 85       	ldd	r18, Y+10	; 0x0a
     c90:	9a 89       	ldd	r25, Y+18	; 0x12
     c92:	29 17       	cp	r18, r25
     c94:	09 f4       	brne	.+2      	; 0xc98 <__mulsf3+0x80>
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	8a 8b       	std	Y+18, r24	; 0x12
     c9a:	ce 01       	movw	r24, r28
     c9c:	41 96       	adiw	r24, 0x11	; 17
     c9e:	b0 c0       	rjmp	.+352    	; 0xe00 <__mulsf3+0x1e8>
     ca0:	6d 84       	ldd	r6, Y+13	; 0x0d
     ca2:	7e 84       	ldd	r7, Y+14	; 0x0e
     ca4:	8f 84       	ldd	r8, Y+15	; 0x0f
     ca6:	98 88       	ldd	r9, Y+16	; 0x10
     ca8:	ed 88       	ldd	r14, Y+21	; 0x15
     caa:	fe 88       	ldd	r15, Y+22	; 0x16
     cac:	0f 89       	ldd	r16, Y+23	; 0x17
     cae:	18 8d       	ldd	r17, Y+24	; 0x18
     cb0:	e0 e2       	ldi	r30, 0x20	; 32
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	dc 01       	movw	r26, r24
     cba:	aa 24       	eor	r10, r10
     cbc:	bb 24       	eor	r11, r11
     cbe:	65 01       	movw	r12, r10
     cc0:	20 e0       	ldi	r18, 0x00	; 0
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	a9 01       	movw	r20, r18
     cc6:	b3 01       	movw	r22, r6
     cc8:	61 70       	andi	r22, 0x01	; 1
     cca:	70 70       	andi	r23, 0x00	; 0
     ccc:	61 15       	cp	r22, r1
     cce:	71 05       	cpc	r23, r1
     cd0:	d1 f0       	breq	.+52     	; 0xd06 <__mulsf3+0xee>
     cd2:	2e 0d       	add	r18, r14
     cd4:	3f 1d       	adc	r19, r15
     cd6:	40 1f       	adc	r20, r16
     cd8:	51 1f       	adc	r21, r17
     cda:	15 01       	movw	r2, r10
     cdc:	26 01       	movw	r4, r12
     cde:	28 0e       	add	r2, r24
     ce0:	39 1e       	adc	r3, r25
     ce2:	4a 1e       	adc	r4, r26
     ce4:	5b 1e       	adc	r5, r27
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	a0 e0       	ldi	r26, 0x00	; 0
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	2e 15       	cp	r18, r14
     cf0:	3f 05       	cpc	r19, r15
     cf2:	40 07       	cpc	r20, r16
     cf4:	51 07       	cpc	r21, r17
     cf6:	18 f0       	brcs	.+6      	; 0xcfe <__mulsf3+0xe6>
     cf8:	80 e0       	ldi	r24, 0x00	; 0
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	dc 01       	movw	r26, r24
     cfe:	82 0d       	add	r24, r2
     d00:	93 1d       	adc	r25, r3
     d02:	a4 1d       	adc	r26, r4
     d04:	b5 1d       	adc	r27, r5
     d06:	aa 0c       	add	r10, r10
     d08:	bb 1c       	adc	r11, r11
     d0a:	cc 1c       	adc	r12, r12
     d0c:	dd 1c       	adc	r13, r13
     d0e:	17 ff       	sbrs	r17, 7
     d10:	09 c0       	rjmp	.+18     	; 0xd24 <__mulsf3+0x10c>
     d12:	61 e0       	ldi	r22, 0x01	; 1
     d14:	26 2e       	mov	r2, r22
     d16:	31 2c       	mov	r3, r1
     d18:	41 2c       	mov	r4, r1
     d1a:	51 2c       	mov	r5, r1
     d1c:	a2 28       	or	r10, r2
     d1e:	b3 28       	or	r11, r3
     d20:	c4 28       	or	r12, r4
     d22:	d5 28       	or	r13, r5
     d24:	31 97       	sbiw	r30, 0x01	; 1
     d26:	49 f0       	breq	.+18     	; 0xd3a <__mulsf3+0x122>
     d28:	ee 0c       	add	r14, r14
     d2a:	ff 1c       	adc	r15, r15
     d2c:	00 1f       	adc	r16, r16
     d2e:	11 1f       	adc	r17, r17
     d30:	96 94       	lsr	r9
     d32:	87 94       	ror	r8
     d34:	77 94       	ror	r7
     d36:	67 94       	ror	r6
     d38:	c6 cf       	rjmp	.-116    	; 0xcc6 <__mulsf3+0xae>
     d3a:	6b 89       	ldd	r22, Y+19	; 0x13
     d3c:	7c 89       	ldd	r23, Y+20	; 0x14
     d3e:	eb 85       	ldd	r30, Y+11	; 0x0b
     d40:	fc 85       	ldd	r31, Y+12	; 0x0c
     d42:	6e 0f       	add	r22, r30
     d44:	7f 1f       	adc	r23, r31
     d46:	6e 5f       	subi	r22, 0xFE	; 254
     d48:	7f 4f       	sbci	r23, 0xFF	; 255
     d4a:	7c 8f       	std	Y+28, r23	; 0x1c
     d4c:	6b 8f       	std	Y+27, r22	; 0x1b
     d4e:	61 e0       	ldi	r22, 0x01	; 1
     d50:	ea 85       	ldd	r30, Y+10	; 0x0a
     d52:	7a 89       	ldd	r23, Y+18	; 0x12
     d54:	e7 17       	cp	r30, r23
     d56:	09 f4       	brne	.+2      	; 0xd5a <__mulsf3+0x142>
     d58:	60 e0       	ldi	r22, 0x00	; 0
     d5a:	6a 8f       	std	Y+26, r22	; 0x1a
     d5c:	6b 8d       	ldd	r22, Y+27	; 0x1b
     d5e:	7c 8d       	ldd	r23, Y+28	; 0x1c
     d60:	10 c0       	rjmp	.+32     	; 0xd82 <__mulsf3+0x16a>
     d62:	fc 01       	movw	r30, r24
     d64:	e1 70       	andi	r30, 0x01	; 1
     d66:	f0 70       	andi	r31, 0x00	; 0
     d68:	30 97       	sbiw	r30, 0x00	; 0
     d6a:	29 f0       	breq	.+10     	; 0xd76 <__mulsf3+0x15e>
     d6c:	56 95       	lsr	r21
     d6e:	47 95       	ror	r20
     d70:	37 95       	ror	r19
     d72:	27 95       	ror	r18
     d74:	50 68       	ori	r21, 0x80	; 128
     d76:	b6 95       	lsr	r27
     d78:	a7 95       	ror	r26
     d7a:	97 95       	ror	r25
     d7c:	87 95       	ror	r24
     d7e:	6f 5f       	subi	r22, 0xFF	; 255
     d80:	7f 4f       	sbci	r23, 0xFF	; 255
     d82:	b7 fd       	sbrc	r27, 7
     d84:	ee cf       	rjmp	.-36     	; 0xd62 <__mulsf3+0x14a>
     d86:	0c c0       	rjmp	.+24     	; 0xda0 <__mulsf3+0x188>
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	aa 1f       	adc	r26, r26
     d8e:	bb 1f       	adc	r27, r27
     d90:	57 fd       	sbrc	r21, 7
     d92:	81 60       	ori	r24, 0x01	; 1
     d94:	22 0f       	add	r18, r18
     d96:	33 1f       	adc	r19, r19
     d98:	44 1f       	adc	r20, r20
     d9a:	55 1f       	adc	r21, r21
     d9c:	61 50       	subi	r22, 0x01	; 1
     d9e:	70 40       	sbci	r23, 0x00	; 0
     da0:	80 30       	cpi	r24, 0x00	; 0
     da2:	e0 e0       	ldi	r30, 0x00	; 0
     da4:	9e 07       	cpc	r25, r30
     da6:	e0 e0       	ldi	r30, 0x00	; 0
     da8:	ae 07       	cpc	r26, r30
     daa:	e0 e4       	ldi	r30, 0x40	; 64
     dac:	be 07       	cpc	r27, r30
     dae:	60 f3       	brcs	.-40     	; 0xd88 <__mulsf3+0x170>
     db0:	6b 8f       	std	Y+27, r22	; 0x1b
     db2:	7c 8f       	std	Y+28, r23	; 0x1c
     db4:	6f e7       	ldi	r22, 0x7F	; 127
     db6:	e6 2e       	mov	r14, r22
     db8:	f1 2c       	mov	r15, r1
     dba:	01 2d       	mov	r16, r1
     dbc:	11 2d       	mov	r17, r1
     dbe:	e8 22       	and	r14, r24
     dc0:	f9 22       	and	r15, r25
     dc2:	0a 23       	and	r16, r26
     dc4:	1b 23       	and	r17, r27
     dc6:	60 e4       	ldi	r22, 0x40	; 64
     dc8:	e6 16       	cp	r14, r22
     dca:	f1 04       	cpc	r15, r1
     dcc:	01 05       	cpc	r16, r1
     dce:	11 05       	cpc	r17, r1
     dd0:	61 f4       	brne	.+24     	; 0xdea <__mulsf3+0x1d2>
     dd2:	87 fd       	sbrc	r24, 7
     dd4:	0a c0       	rjmp	.+20     	; 0xdea <__mulsf3+0x1d2>
     dd6:	21 15       	cp	r18, r1
     dd8:	31 05       	cpc	r19, r1
     dda:	41 05       	cpc	r20, r1
     ddc:	51 05       	cpc	r21, r1
     dde:	29 f0       	breq	.+10     	; 0xdea <__mulsf3+0x1d2>
     de0:	80 5c       	subi	r24, 0xC0	; 192
     de2:	9f 4f       	sbci	r25, 0xFF	; 255
     de4:	af 4f       	sbci	r26, 0xFF	; 255
     de6:	bf 4f       	sbci	r27, 0xFF	; 255
     de8:	80 78       	andi	r24, 0x80	; 128
     dea:	8d 8f       	std	Y+29, r24	; 0x1d
     dec:	9e 8f       	std	Y+30, r25	; 0x1e
     dee:	af 8f       	std	Y+31, r26	; 0x1f
     df0:	b8 a3       	std	Y+32, r27	; 0x20
     df2:	83 e0       	ldi	r24, 0x03	; 3
     df4:	89 8f       	std	Y+25, r24	; 0x19
     df6:	ce 01       	movw	r24, r28
     df8:	49 96       	adiw	r24, 0x19	; 25
     dfa:	02 c0       	rjmp	.+4      	; 0xe00 <__mulsf3+0x1e8>
     dfc:	83 e0       	ldi	r24, 0x03	; 3
     dfe:	91 e0       	ldi	r25, 0x01	; 1
     e00:	0e 94 96 08 	call	0x112c	; 0x112c <__pack_f>
     e04:	a0 96       	adiw	r28, 0x20	; 32
     e06:	e2 e1       	ldi	r30, 0x12	; 18
     e08:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__epilogue_restores__>

00000e0c <__divsf3>:
     e0c:	a8 e1       	ldi	r26, 0x18	; 24
     e0e:	b0 e0       	ldi	r27, 0x00	; 0
     e10:	ec e0       	ldi	r30, 0x0C	; 12
     e12:	f7 e0       	ldi	r31, 0x07	; 7
     e14:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <__prologue_saves__+0x10>
     e18:	69 83       	std	Y+1, r22	; 0x01
     e1a:	7a 83       	std	Y+2, r23	; 0x02
     e1c:	8b 83       	std	Y+3, r24	; 0x03
     e1e:	9c 83       	std	Y+4, r25	; 0x04
     e20:	2d 83       	std	Y+5, r18	; 0x05
     e22:	3e 83       	std	Y+6, r19	; 0x06
     e24:	4f 83       	std	Y+7, r20	; 0x07
     e26:	58 87       	std	Y+8, r21	; 0x08
     e28:	8e 01       	movw	r16, r28
     e2a:	07 5f       	subi	r16, 0xF7	; 247
     e2c:	1f 4f       	sbci	r17, 0xFF	; 255
     e2e:	ce 01       	movw	r24, r28
     e30:	01 96       	adiw	r24, 0x01	; 1
     e32:	b8 01       	movw	r22, r16
     e34:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     e38:	81 e1       	ldi	r24, 0x11	; 17
     e3a:	e8 2e       	mov	r14, r24
     e3c:	f1 2c       	mov	r15, r1
     e3e:	ec 0e       	add	r14, r28
     e40:	fd 1e       	adc	r15, r29
     e42:	ce 01       	movw	r24, r28
     e44:	05 96       	adiw	r24, 0x05	; 5
     e46:	b7 01       	movw	r22, r14
     e48:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     e4c:	99 85       	ldd	r25, Y+9	; 0x09
     e4e:	92 30       	cpi	r25, 0x02	; 2
     e50:	08 f4       	brcc	.+2      	; 0xe54 <__divsf3+0x48>
     e52:	83 c0       	rjmp	.+262    	; 0xf5a <__divsf3+0x14e>
     e54:	89 89       	ldd	r24, Y+17	; 0x11
     e56:	82 30       	cpi	r24, 0x02	; 2
     e58:	08 f4       	brcc	.+2      	; 0xe5c <__divsf3+0x50>
     e5a:	7b c0       	rjmp	.+246    	; 0xf52 <__divsf3+0x146>
     e5c:	2a 85       	ldd	r18, Y+10	; 0x0a
     e5e:	3a 89       	ldd	r19, Y+18	; 0x12
     e60:	23 27       	eor	r18, r19
     e62:	2a 87       	std	Y+10, r18	; 0x0a
     e64:	94 30       	cpi	r25, 0x04	; 4
     e66:	11 f0       	breq	.+4      	; 0xe6c <__divsf3+0x60>
     e68:	92 30       	cpi	r25, 0x02	; 2
     e6a:	21 f4       	brne	.+8      	; 0xe74 <__divsf3+0x68>
     e6c:	98 17       	cp	r25, r24
     e6e:	09 f0       	breq	.+2      	; 0xe72 <__divsf3+0x66>
     e70:	6c c0       	rjmp	.+216    	; 0xf4a <__divsf3+0x13e>
     e72:	71 c0       	rjmp	.+226    	; 0xf56 <__divsf3+0x14a>
     e74:	84 30       	cpi	r24, 0x04	; 4
     e76:	39 f4       	brne	.+14     	; 0xe86 <__divsf3+0x7a>
     e78:	1d 86       	std	Y+13, r1	; 0x0d
     e7a:	1e 86       	std	Y+14, r1	; 0x0e
     e7c:	1f 86       	std	Y+15, r1	; 0x0f
     e7e:	18 8a       	std	Y+16, r1	; 0x10
     e80:	1c 86       	std	Y+12, r1	; 0x0c
     e82:	1b 86       	std	Y+11, r1	; 0x0b
     e84:	6a c0       	rjmp	.+212    	; 0xf5a <__divsf3+0x14e>
     e86:	82 30       	cpi	r24, 0x02	; 2
     e88:	19 f4       	brne	.+6      	; 0xe90 <__divsf3+0x84>
     e8a:	84 e0       	ldi	r24, 0x04	; 4
     e8c:	89 87       	std	Y+9, r24	; 0x09
     e8e:	65 c0       	rjmp	.+202    	; 0xf5a <__divsf3+0x14e>
     e90:	8b 85       	ldd	r24, Y+11	; 0x0b
     e92:	9c 85       	ldd	r25, Y+12	; 0x0c
     e94:	2b 89       	ldd	r18, Y+19	; 0x13
     e96:	3c 89       	ldd	r19, Y+20	; 0x14
     e98:	82 1b       	sub	r24, r18
     e9a:	93 0b       	sbc	r25, r19
     e9c:	9c 87       	std	Y+12, r25	; 0x0c
     e9e:	8b 87       	std	Y+11, r24	; 0x0b
     ea0:	2d 85       	ldd	r18, Y+13	; 0x0d
     ea2:	3e 85       	ldd	r19, Y+14	; 0x0e
     ea4:	4f 85       	ldd	r20, Y+15	; 0x0f
     ea6:	58 89       	ldd	r21, Y+16	; 0x10
     ea8:	ed 88       	ldd	r14, Y+21	; 0x15
     eaa:	fe 88       	ldd	r15, Y+22	; 0x16
     eac:	0f 89       	ldd	r16, Y+23	; 0x17
     eae:	18 8d       	ldd	r17, Y+24	; 0x18
     eb0:	2e 15       	cp	r18, r14
     eb2:	3f 05       	cpc	r19, r15
     eb4:	40 07       	cpc	r20, r16
     eb6:	51 07       	cpc	r21, r17
     eb8:	38 f4       	brcc	.+14     	; 0xec8 <__divsf3+0xbc>
     eba:	22 0f       	add	r18, r18
     ebc:	33 1f       	adc	r19, r19
     ebe:	44 1f       	adc	r20, r20
     ec0:	55 1f       	adc	r21, r21
     ec2:	01 97       	sbiw	r24, 0x01	; 1
     ec4:	9c 87       	std	Y+12, r25	; 0x0c
     ec6:	8b 87       	std	Y+11, r24	; 0x0b
     ec8:	6f e1       	ldi	r22, 0x1F	; 31
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	a1 2c       	mov	r10, r1
     ece:	b1 2c       	mov	r11, r1
     ed0:	c1 2c       	mov	r12, r1
     ed2:	a0 e4       	ldi	r26, 0x40	; 64
     ed4:	da 2e       	mov	r13, r26
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	dc 01       	movw	r26, r24
     edc:	2e 15       	cp	r18, r14
     ede:	3f 05       	cpc	r19, r15
     ee0:	40 07       	cpc	r20, r16
     ee2:	51 07       	cpc	r21, r17
     ee4:	40 f0       	brcs	.+16     	; 0xef6 <__divsf3+0xea>
     ee6:	8a 29       	or	r24, r10
     ee8:	9b 29       	or	r25, r11
     eea:	ac 29       	or	r26, r12
     eec:	bd 29       	or	r27, r13
     eee:	2e 19       	sub	r18, r14
     ef0:	3f 09       	sbc	r19, r15
     ef2:	40 0b       	sbc	r20, r16
     ef4:	51 0b       	sbc	r21, r17
     ef6:	d6 94       	lsr	r13
     ef8:	c7 94       	ror	r12
     efa:	b7 94       	ror	r11
     efc:	a7 94       	ror	r10
     efe:	22 0f       	add	r18, r18
     f00:	33 1f       	adc	r19, r19
     f02:	44 1f       	adc	r20, r20
     f04:	55 1f       	adc	r21, r21
     f06:	61 50       	subi	r22, 0x01	; 1
     f08:	70 40       	sbci	r23, 0x00	; 0
     f0a:	41 f7       	brne	.-48     	; 0xedc <__divsf3+0xd0>
     f0c:	6f e7       	ldi	r22, 0x7F	; 127
     f0e:	e6 2e       	mov	r14, r22
     f10:	f1 2c       	mov	r15, r1
     f12:	01 2d       	mov	r16, r1
     f14:	11 2d       	mov	r17, r1
     f16:	e8 22       	and	r14, r24
     f18:	f9 22       	and	r15, r25
     f1a:	0a 23       	and	r16, r26
     f1c:	1b 23       	and	r17, r27
     f1e:	60 e4       	ldi	r22, 0x40	; 64
     f20:	e6 16       	cp	r14, r22
     f22:	f1 04       	cpc	r15, r1
     f24:	01 05       	cpc	r16, r1
     f26:	11 05       	cpc	r17, r1
     f28:	61 f4       	brne	.+24     	; 0xf42 <__divsf3+0x136>
     f2a:	87 fd       	sbrc	r24, 7
     f2c:	0a c0       	rjmp	.+20     	; 0xf42 <__divsf3+0x136>
     f2e:	21 15       	cp	r18, r1
     f30:	31 05       	cpc	r19, r1
     f32:	41 05       	cpc	r20, r1
     f34:	51 05       	cpc	r21, r1
     f36:	29 f0       	breq	.+10     	; 0xf42 <__divsf3+0x136>
     f38:	80 5c       	subi	r24, 0xC0	; 192
     f3a:	9f 4f       	sbci	r25, 0xFF	; 255
     f3c:	af 4f       	sbci	r26, 0xFF	; 255
     f3e:	bf 4f       	sbci	r27, 0xFF	; 255
     f40:	80 78       	andi	r24, 0x80	; 128
     f42:	8d 87       	std	Y+13, r24	; 0x0d
     f44:	9e 87       	std	Y+14, r25	; 0x0e
     f46:	af 87       	std	Y+15, r26	; 0x0f
     f48:	b8 8b       	std	Y+16, r27	; 0x10
     f4a:	8e 01       	movw	r16, r28
     f4c:	07 5f       	subi	r16, 0xF7	; 247
     f4e:	1f 4f       	sbci	r17, 0xFF	; 255
     f50:	04 c0       	rjmp	.+8      	; 0xf5a <__divsf3+0x14e>
     f52:	87 01       	movw	r16, r14
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <__divsf3+0x14e>
     f56:	03 e0       	ldi	r16, 0x03	; 3
     f58:	11 e0       	ldi	r17, 0x01	; 1
     f5a:	c8 01       	movw	r24, r16
     f5c:	0e 94 96 08 	call	0x112c	; 0x112c <__pack_f>
     f60:	68 96       	adiw	r28, 0x18	; 24
     f62:	ea e0       	ldi	r30, 0x0A	; 10
     f64:	0c 94 4a 0a 	jmp	0x1494	; 0x1494 <__epilogue_restores__+0x10>

00000f68 <__gtsf2>:
     f68:	a8 e1       	ldi	r26, 0x18	; 24
     f6a:	b0 e0       	ldi	r27, 0x00	; 0
     f6c:	ea eb       	ldi	r30, 0xBA	; 186
     f6e:	f7 e0       	ldi	r31, 0x07	; 7
     f70:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__+0x18>
     f74:	69 83       	std	Y+1, r22	; 0x01
     f76:	7a 83       	std	Y+2, r23	; 0x02
     f78:	8b 83       	std	Y+3, r24	; 0x03
     f7a:	9c 83       	std	Y+4, r25	; 0x04
     f7c:	2d 83       	std	Y+5, r18	; 0x05
     f7e:	3e 83       	std	Y+6, r19	; 0x06
     f80:	4f 83       	std	Y+7, r20	; 0x07
     f82:	58 87       	std	Y+8, r21	; 0x08
     f84:	8e 01       	movw	r16, r28
     f86:	07 5f       	subi	r16, 0xF7	; 247
     f88:	1f 4f       	sbci	r17, 0xFF	; 255
     f8a:	ce 01       	movw	r24, r28
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	b8 01       	movw	r22, r16
     f90:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     f94:	81 e1       	ldi	r24, 0x11	; 17
     f96:	e8 2e       	mov	r14, r24
     f98:	f1 2c       	mov	r15, r1
     f9a:	ec 0e       	add	r14, r28
     f9c:	fd 1e       	adc	r15, r29
     f9e:	ce 01       	movw	r24, r28
     fa0:	05 96       	adiw	r24, 0x05	; 5
     fa2:	b7 01       	movw	r22, r14
     fa4:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     fa8:	89 85       	ldd	r24, Y+9	; 0x09
     faa:	82 30       	cpi	r24, 0x02	; 2
     fac:	40 f0       	brcs	.+16     	; 0xfbe <__gtsf2+0x56>
     fae:	89 89       	ldd	r24, Y+17	; 0x11
     fb0:	82 30       	cpi	r24, 0x02	; 2
     fb2:	28 f0       	brcs	.+10     	; 0xfbe <__gtsf2+0x56>
     fb4:	c8 01       	movw	r24, r16
     fb6:	b7 01       	movw	r22, r14
     fb8:	0e 94 cd 09 	call	0x139a	; 0x139a <__fpcmp_parts_f>
     fbc:	01 c0       	rjmp	.+2      	; 0xfc0 <__gtsf2+0x58>
     fbe:	8f ef       	ldi	r24, 0xFF	; 255
     fc0:	68 96       	adiw	r28, 0x18	; 24
     fc2:	e6 e0       	ldi	r30, 0x06	; 6
     fc4:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__+0x18>

00000fc8 <__gesf2>:
     fc8:	a8 e1       	ldi	r26, 0x18	; 24
     fca:	b0 e0       	ldi	r27, 0x00	; 0
     fcc:	ea ee       	ldi	r30, 0xEA	; 234
     fce:	f7 e0       	ldi	r31, 0x07	; 7
     fd0:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__+0x18>
     fd4:	69 83       	std	Y+1, r22	; 0x01
     fd6:	7a 83       	std	Y+2, r23	; 0x02
     fd8:	8b 83       	std	Y+3, r24	; 0x03
     fda:	9c 83       	std	Y+4, r25	; 0x04
     fdc:	2d 83       	std	Y+5, r18	; 0x05
     fde:	3e 83       	std	Y+6, r19	; 0x06
     fe0:	4f 83       	std	Y+7, r20	; 0x07
     fe2:	58 87       	std	Y+8, r21	; 0x08
     fe4:	8e 01       	movw	r16, r28
     fe6:	07 5f       	subi	r16, 0xF7	; 247
     fe8:	1f 4f       	sbci	r17, 0xFF	; 255
     fea:	ce 01       	movw	r24, r28
     fec:	01 96       	adiw	r24, 0x01	; 1
     fee:	b8 01       	movw	r22, r16
     ff0:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
     ff4:	81 e1       	ldi	r24, 0x11	; 17
     ff6:	e8 2e       	mov	r14, r24
     ff8:	f1 2c       	mov	r15, r1
     ffa:	ec 0e       	add	r14, r28
     ffc:	fd 1e       	adc	r15, r29
     ffe:	ce 01       	movw	r24, r28
    1000:	05 96       	adiw	r24, 0x05	; 5
    1002:	b7 01       	movw	r22, r14
    1004:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
    1008:	89 85       	ldd	r24, Y+9	; 0x09
    100a:	82 30       	cpi	r24, 0x02	; 2
    100c:	40 f0       	brcs	.+16     	; 0x101e <__gesf2+0x56>
    100e:	89 89       	ldd	r24, Y+17	; 0x11
    1010:	82 30       	cpi	r24, 0x02	; 2
    1012:	28 f0       	brcs	.+10     	; 0x101e <__gesf2+0x56>
    1014:	c8 01       	movw	r24, r16
    1016:	b7 01       	movw	r22, r14
    1018:	0e 94 cd 09 	call	0x139a	; 0x139a <__fpcmp_parts_f>
    101c:	01 c0       	rjmp	.+2      	; 0x1020 <__gesf2+0x58>
    101e:	8f ef       	ldi	r24, 0xFF	; 255
    1020:	68 96       	adiw	r28, 0x18	; 24
    1022:	e6 e0       	ldi	r30, 0x06	; 6
    1024:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__+0x18>

00001028 <__ltsf2>:
    1028:	a8 e1       	ldi	r26, 0x18	; 24
    102a:	b0 e0       	ldi	r27, 0x00	; 0
    102c:	ea e1       	ldi	r30, 0x1A	; 26
    102e:	f8 e0       	ldi	r31, 0x08	; 8
    1030:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__+0x18>
    1034:	69 83       	std	Y+1, r22	; 0x01
    1036:	7a 83       	std	Y+2, r23	; 0x02
    1038:	8b 83       	std	Y+3, r24	; 0x03
    103a:	9c 83       	std	Y+4, r25	; 0x04
    103c:	2d 83       	std	Y+5, r18	; 0x05
    103e:	3e 83       	std	Y+6, r19	; 0x06
    1040:	4f 83       	std	Y+7, r20	; 0x07
    1042:	58 87       	std	Y+8, r21	; 0x08
    1044:	8e 01       	movw	r16, r28
    1046:	07 5f       	subi	r16, 0xF7	; 247
    1048:	1f 4f       	sbci	r17, 0xFF	; 255
    104a:	ce 01       	movw	r24, r28
    104c:	01 96       	adiw	r24, 0x01	; 1
    104e:	b8 01       	movw	r22, r16
    1050:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
    1054:	81 e1       	ldi	r24, 0x11	; 17
    1056:	e8 2e       	mov	r14, r24
    1058:	f1 2c       	mov	r15, r1
    105a:	ec 0e       	add	r14, r28
    105c:	fd 1e       	adc	r15, r29
    105e:	ce 01       	movw	r24, r28
    1060:	05 96       	adiw	r24, 0x05	; 5
    1062:	b7 01       	movw	r22, r14
    1064:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
    1068:	89 85       	ldd	r24, Y+9	; 0x09
    106a:	82 30       	cpi	r24, 0x02	; 2
    106c:	40 f0       	brcs	.+16     	; 0x107e <__ltsf2+0x56>
    106e:	89 89       	ldd	r24, Y+17	; 0x11
    1070:	82 30       	cpi	r24, 0x02	; 2
    1072:	28 f0       	brcs	.+10     	; 0x107e <__ltsf2+0x56>
    1074:	c8 01       	movw	r24, r16
    1076:	b7 01       	movw	r22, r14
    1078:	0e 94 cd 09 	call	0x139a	; 0x139a <__fpcmp_parts_f>
    107c:	01 c0       	rjmp	.+2      	; 0x1080 <__ltsf2+0x58>
    107e:	81 e0       	ldi	r24, 0x01	; 1
    1080:	68 96       	adiw	r28, 0x18	; 24
    1082:	e6 e0       	ldi	r30, 0x06	; 6
    1084:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__+0x18>

00001088 <__fixsfsi>:
    1088:	ac e0       	ldi	r26, 0x0C	; 12
    108a:	b0 e0       	ldi	r27, 0x00	; 0
    108c:	ea e4       	ldi	r30, 0x4A	; 74
    108e:	f8 e0       	ldi	r31, 0x08	; 8
    1090:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__prologue_saves__+0x20>
    1094:	69 83       	std	Y+1, r22	; 0x01
    1096:	7a 83       	std	Y+2, r23	; 0x02
    1098:	8b 83       	std	Y+3, r24	; 0x03
    109a:	9c 83       	std	Y+4, r25	; 0x04
    109c:	ce 01       	movw	r24, r28
    109e:	01 96       	adiw	r24, 0x01	; 1
    10a0:	be 01       	movw	r22, r28
    10a2:	6b 5f       	subi	r22, 0xFB	; 251
    10a4:	7f 4f       	sbci	r23, 0xFF	; 255
    10a6:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__unpack_f>
    10aa:	8d 81       	ldd	r24, Y+5	; 0x05
    10ac:	82 30       	cpi	r24, 0x02	; 2
    10ae:	81 f1       	breq	.+96     	; 0x1110 <__fixsfsi+0x88>
    10b0:	82 30       	cpi	r24, 0x02	; 2
    10b2:	70 f1       	brcs	.+92     	; 0x1110 <__fixsfsi+0x88>
    10b4:	84 30       	cpi	r24, 0x04	; 4
    10b6:	21 f4       	brne	.+8      	; 0x10c0 <__fixsfsi+0x38>
    10b8:	8e 81       	ldd	r24, Y+6	; 0x06
    10ba:	88 23       	and	r24, r24
    10bc:	69 f1       	breq	.+90     	; 0x1118 <__fixsfsi+0x90>
    10be:	0a c0       	rjmp	.+20     	; 0x10d4 <__fixsfsi+0x4c>
    10c0:	2f 81       	ldd	r18, Y+7	; 0x07
    10c2:	38 85       	ldd	r19, Y+8	; 0x08
    10c4:	37 fd       	sbrc	r19, 7
    10c6:	24 c0       	rjmp	.+72     	; 0x1110 <__fixsfsi+0x88>
    10c8:	6e 81       	ldd	r22, Y+6	; 0x06
    10ca:	2f 31       	cpi	r18, 0x1F	; 31
    10cc:	31 05       	cpc	r19, r1
    10ce:	3c f0       	brlt	.+14     	; 0x10de <__fixsfsi+0x56>
    10d0:	66 23       	and	r22, r22
    10d2:	11 f1       	breq	.+68     	; 0x1118 <__fixsfsi+0x90>
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	40 e0       	ldi	r20, 0x00	; 0
    10da:	50 e8       	ldi	r21, 0x80	; 128
    10dc:	21 c0       	rjmp	.+66     	; 0x1120 <__fixsfsi+0x98>
    10de:	8e e1       	ldi	r24, 0x1E	; 30
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	82 1b       	sub	r24, r18
    10e4:	93 0b       	sbc	r25, r19
    10e6:	29 85       	ldd	r18, Y+9	; 0x09
    10e8:	3a 85       	ldd	r19, Y+10	; 0x0a
    10ea:	4b 85       	ldd	r20, Y+11	; 0x0b
    10ec:	5c 85       	ldd	r21, Y+12	; 0x0c
    10ee:	04 c0       	rjmp	.+8      	; 0x10f8 <__fixsfsi+0x70>
    10f0:	56 95       	lsr	r21
    10f2:	47 95       	ror	r20
    10f4:	37 95       	ror	r19
    10f6:	27 95       	ror	r18
    10f8:	8a 95       	dec	r24
    10fa:	d2 f7       	brpl	.-12     	; 0x10f0 <__fixsfsi+0x68>
    10fc:	66 23       	and	r22, r22
    10fe:	81 f0       	breq	.+32     	; 0x1120 <__fixsfsi+0x98>
    1100:	50 95       	com	r21
    1102:	40 95       	com	r20
    1104:	30 95       	com	r19
    1106:	21 95       	neg	r18
    1108:	3f 4f       	sbci	r19, 0xFF	; 255
    110a:	4f 4f       	sbci	r20, 0xFF	; 255
    110c:	5f 4f       	sbci	r21, 0xFF	; 255
    110e:	08 c0       	rjmp	.+16     	; 0x1120 <__fixsfsi+0x98>
    1110:	20 e0       	ldi	r18, 0x00	; 0
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	a9 01       	movw	r20, r18
    1116:	04 c0       	rjmp	.+8      	; 0x1120 <__fixsfsi+0x98>
    1118:	2f ef       	ldi	r18, 0xFF	; 255
    111a:	3f ef       	ldi	r19, 0xFF	; 255
    111c:	4f ef       	ldi	r20, 0xFF	; 255
    111e:	5f e7       	ldi	r21, 0x7F	; 127
    1120:	b9 01       	movw	r22, r18
    1122:	ca 01       	movw	r24, r20
    1124:	2c 96       	adiw	r28, 0x0c	; 12
    1126:	e2 e0       	ldi	r30, 0x02	; 2
    1128:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__epilogue_restores__+0x20>

0000112c <__pack_f>:
    112c:	ef 92       	push	r14
    112e:	ff 92       	push	r15
    1130:	0f 93       	push	r16
    1132:	1f 93       	push	r17
    1134:	cf 93       	push	r28
    1136:	df 93       	push	r29
    1138:	fc 01       	movw	r30, r24
    113a:	24 81       	ldd	r18, Z+4	; 0x04
    113c:	35 81       	ldd	r19, Z+5	; 0x05
    113e:	46 81       	ldd	r20, Z+6	; 0x06
    1140:	57 81       	ldd	r21, Z+7	; 0x07
    1142:	61 81       	ldd	r22, Z+1	; 0x01
    1144:	80 81       	ld	r24, Z
    1146:	82 30       	cpi	r24, 0x02	; 2
    1148:	20 f4       	brcc	.+8      	; 0x1152 <__pack_f+0x26>
    114a:	40 61       	ori	r20, 0x10	; 16
    114c:	ef ef       	ldi	r30, 0xFF	; 255
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	a3 c0       	rjmp	.+326    	; 0x1298 <__pack_f+0x16c>
    1152:	84 30       	cpi	r24, 0x04	; 4
    1154:	09 f4       	brne	.+2      	; 0x1158 <__pack_f+0x2c>
    1156:	9b c0       	rjmp	.+310    	; 0x128e <__pack_f+0x162>
    1158:	82 30       	cpi	r24, 0x02	; 2
    115a:	09 f4       	brne	.+2      	; 0x115e <__pack_f+0x32>
    115c:	92 c0       	rjmp	.+292    	; 0x1282 <__pack_f+0x156>
    115e:	21 15       	cp	r18, r1
    1160:	31 05       	cpc	r19, r1
    1162:	41 05       	cpc	r20, r1
    1164:	51 05       	cpc	r21, r1
    1166:	09 f4       	brne	.+2      	; 0x116a <__pack_f+0x3e>
    1168:	8f c0       	rjmp	.+286    	; 0x1288 <__pack_f+0x15c>
    116a:	02 80       	ldd	r0, Z+2	; 0x02
    116c:	f3 81       	ldd	r31, Z+3	; 0x03
    116e:	e0 2d       	mov	r30, r0
    1170:	8f ef       	ldi	r24, 0xFF	; 255
    1172:	e2 38       	cpi	r30, 0x82	; 130
    1174:	f8 07       	cpc	r31, r24
    1176:	0c f0       	brlt	.+2      	; 0x117a <__pack_f+0x4e>
    1178:	5a c0       	rjmp	.+180    	; 0x122e <__pack_f+0x102>
    117a:	c2 e8       	ldi	r28, 0x82	; 130
    117c:	df ef       	ldi	r29, 0xFF	; 255
    117e:	ce 1b       	sub	r28, r30
    1180:	df 0b       	sbc	r29, r31
    1182:	ca 31       	cpi	r28, 0x1A	; 26
    1184:	d1 05       	cpc	r29, r1
    1186:	6c f5       	brge	.+90     	; 0x11e2 <__pack_f+0xb6>
    1188:	79 01       	movw	r14, r18
    118a:	8a 01       	movw	r16, r20
    118c:	0c 2e       	mov	r0, r28
    118e:	04 c0       	rjmp	.+8      	; 0x1198 <__pack_f+0x6c>
    1190:	16 95       	lsr	r17
    1192:	07 95       	ror	r16
    1194:	f7 94       	ror	r15
    1196:	e7 94       	ror	r14
    1198:	0a 94       	dec	r0
    119a:	d2 f7       	brpl	.-12     	; 0x1190 <__pack_f+0x64>
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	a0 e0       	ldi	r26, 0x00	; 0
    11a2:	b0 e0       	ldi	r27, 0x00	; 0
    11a4:	0c 2e       	mov	r0, r28
    11a6:	04 c0       	rjmp	.+8      	; 0x11b0 <__pack_f+0x84>
    11a8:	88 0f       	add	r24, r24
    11aa:	99 1f       	adc	r25, r25
    11ac:	aa 1f       	adc	r26, r26
    11ae:	bb 1f       	adc	r27, r27
    11b0:	0a 94       	dec	r0
    11b2:	d2 f7       	brpl	.-12     	; 0x11a8 <__pack_f+0x7c>
    11b4:	01 97       	sbiw	r24, 0x01	; 1
    11b6:	a1 09       	sbc	r26, r1
    11b8:	b1 09       	sbc	r27, r1
    11ba:	82 23       	and	r24, r18
    11bc:	93 23       	and	r25, r19
    11be:	a4 23       	and	r26, r20
    11c0:	b5 23       	and	r27, r21
    11c2:	21 e0       	ldi	r18, 0x01	; 1
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	40 e0       	ldi	r20, 0x00	; 0
    11c8:	50 e0       	ldi	r21, 0x00	; 0
    11ca:	00 97       	sbiw	r24, 0x00	; 0
    11cc:	a1 05       	cpc	r26, r1
    11ce:	b1 05       	cpc	r27, r1
    11d0:	19 f4       	brne	.+6      	; 0x11d8 <__pack_f+0xac>
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	a9 01       	movw	r20, r18
    11d8:	2e 29       	or	r18, r14
    11da:	3f 29       	or	r19, r15
    11dc:	40 2b       	or	r20, r16
    11de:	51 2b       	or	r21, r17
    11e0:	03 c0       	rjmp	.+6      	; 0x11e8 <__pack_f+0xbc>
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	a9 01       	movw	r20, r18
    11e8:	da 01       	movw	r26, r20
    11ea:	c9 01       	movw	r24, r18
    11ec:	8f 77       	andi	r24, 0x7F	; 127
    11ee:	90 70       	andi	r25, 0x00	; 0
    11f0:	a0 70       	andi	r26, 0x00	; 0
    11f2:	b0 70       	andi	r27, 0x00	; 0
    11f4:	80 34       	cpi	r24, 0x40	; 64
    11f6:	91 05       	cpc	r25, r1
    11f8:	a1 05       	cpc	r26, r1
    11fa:	b1 05       	cpc	r27, r1
    11fc:	39 f4       	brne	.+14     	; 0x120c <__pack_f+0xe0>
    11fe:	27 ff       	sbrs	r18, 7
    1200:	09 c0       	rjmp	.+18     	; 0x1214 <__pack_f+0xe8>
    1202:	20 5c       	subi	r18, 0xC0	; 192
    1204:	3f 4f       	sbci	r19, 0xFF	; 255
    1206:	4f 4f       	sbci	r20, 0xFF	; 255
    1208:	5f 4f       	sbci	r21, 0xFF	; 255
    120a:	04 c0       	rjmp	.+8      	; 0x1214 <__pack_f+0xe8>
    120c:	21 5c       	subi	r18, 0xC1	; 193
    120e:	3f 4f       	sbci	r19, 0xFF	; 255
    1210:	4f 4f       	sbci	r20, 0xFF	; 255
    1212:	5f 4f       	sbci	r21, 0xFF	; 255
    1214:	e1 e0       	ldi	r30, 0x01	; 1
    1216:	f0 e0       	ldi	r31, 0x00	; 0
    1218:	20 30       	cpi	r18, 0x00	; 0
    121a:	80 e0       	ldi	r24, 0x00	; 0
    121c:	38 07       	cpc	r19, r24
    121e:	80 e0       	ldi	r24, 0x00	; 0
    1220:	48 07       	cpc	r20, r24
    1222:	80 e4       	ldi	r24, 0x40	; 64
    1224:	58 07       	cpc	r21, r24
    1226:	28 f5       	brcc	.+74     	; 0x1272 <__pack_f+0x146>
    1228:	e0 e0       	ldi	r30, 0x00	; 0
    122a:	f0 e0       	ldi	r31, 0x00	; 0
    122c:	22 c0       	rjmp	.+68     	; 0x1272 <__pack_f+0x146>
    122e:	e0 38       	cpi	r30, 0x80	; 128
    1230:	f1 05       	cpc	r31, r1
    1232:	6c f5       	brge	.+90     	; 0x128e <__pack_f+0x162>
    1234:	e1 58       	subi	r30, 0x81	; 129
    1236:	ff 4f       	sbci	r31, 0xFF	; 255
    1238:	da 01       	movw	r26, r20
    123a:	c9 01       	movw	r24, r18
    123c:	8f 77       	andi	r24, 0x7F	; 127
    123e:	90 70       	andi	r25, 0x00	; 0
    1240:	a0 70       	andi	r26, 0x00	; 0
    1242:	b0 70       	andi	r27, 0x00	; 0
    1244:	80 34       	cpi	r24, 0x40	; 64
    1246:	91 05       	cpc	r25, r1
    1248:	a1 05       	cpc	r26, r1
    124a:	b1 05       	cpc	r27, r1
    124c:	39 f4       	brne	.+14     	; 0x125c <__pack_f+0x130>
    124e:	27 ff       	sbrs	r18, 7
    1250:	09 c0       	rjmp	.+18     	; 0x1264 <__pack_f+0x138>
    1252:	20 5c       	subi	r18, 0xC0	; 192
    1254:	3f 4f       	sbci	r19, 0xFF	; 255
    1256:	4f 4f       	sbci	r20, 0xFF	; 255
    1258:	5f 4f       	sbci	r21, 0xFF	; 255
    125a:	04 c0       	rjmp	.+8      	; 0x1264 <__pack_f+0x138>
    125c:	21 5c       	subi	r18, 0xC1	; 193
    125e:	3f 4f       	sbci	r19, 0xFF	; 255
    1260:	4f 4f       	sbci	r20, 0xFF	; 255
    1262:	5f 4f       	sbci	r21, 0xFF	; 255
    1264:	57 ff       	sbrs	r21, 7
    1266:	05 c0       	rjmp	.+10     	; 0x1272 <__pack_f+0x146>
    1268:	56 95       	lsr	r21
    126a:	47 95       	ror	r20
    126c:	37 95       	ror	r19
    126e:	27 95       	ror	r18
    1270:	31 96       	adiw	r30, 0x01	; 1
    1272:	87 e0       	ldi	r24, 0x07	; 7
    1274:	56 95       	lsr	r21
    1276:	47 95       	ror	r20
    1278:	37 95       	ror	r19
    127a:	27 95       	ror	r18
    127c:	8a 95       	dec	r24
    127e:	d1 f7       	brne	.-12     	; 0x1274 <__pack_f+0x148>
    1280:	0b c0       	rjmp	.+22     	; 0x1298 <__pack_f+0x16c>
    1282:	e0 e0       	ldi	r30, 0x00	; 0
    1284:	f0 e0       	ldi	r31, 0x00	; 0
    1286:	05 c0       	rjmp	.+10     	; 0x1292 <__pack_f+0x166>
    1288:	e0 e0       	ldi	r30, 0x00	; 0
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	05 c0       	rjmp	.+10     	; 0x1298 <__pack_f+0x16c>
    128e:	ef ef       	ldi	r30, 0xFF	; 255
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	20 e0       	ldi	r18, 0x00	; 0
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	a9 01       	movw	r20, r18
    1298:	8e 2f       	mov	r24, r30
    129a:	87 95       	ror	r24
    129c:	88 27       	eor	r24, r24
    129e:	87 95       	ror	r24
    12a0:	94 2f       	mov	r25, r20
    12a2:	9f 77       	andi	r25, 0x7F	; 127
    12a4:	67 95       	ror	r22
    12a6:	66 27       	eor	r22, r22
    12a8:	67 95       	ror	r22
    12aa:	e6 95       	lsr	r30
    12ac:	e2 2e       	mov	r14, r18
    12ae:	a9 2f       	mov	r26, r25
    12b0:	a8 2b       	or	r26, r24
    12b2:	fe 2f       	mov	r31, r30
    12b4:	f6 2b       	or	r31, r22
    12b6:	62 2f       	mov	r22, r18
    12b8:	73 2f       	mov	r23, r19
    12ba:	8a 2f       	mov	r24, r26
    12bc:	9f 2f       	mov	r25, r31
    12be:	cd b7       	in	r28, 0x3d	; 61
    12c0:	de b7       	in	r29, 0x3e	; 62
    12c2:	e6 e0       	ldi	r30, 0x06	; 6
    12c4:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__+0x18>

000012c8 <__unpack_f>:
    12c8:	dc 01       	movw	r26, r24
    12ca:	fb 01       	movw	r30, r22
    12cc:	2c 91       	ld	r18, X
    12ce:	11 96       	adiw	r26, 0x01	; 1
    12d0:	3c 91       	ld	r19, X
    12d2:	11 97       	sbiw	r26, 0x01	; 1
    12d4:	12 96       	adiw	r26, 0x02	; 2
    12d6:	8c 91       	ld	r24, X
    12d8:	12 97       	sbiw	r26, 0x02	; 2
    12da:	48 2f       	mov	r20, r24
    12dc:	4f 77       	andi	r20, 0x7F	; 127
    12de:	50 e0       	ldi	r21, 0x00	; 0
    12e0:	98 2f       	mov	r25, r24
    12e2:	99 1f       	adc	r25, r25
    12e4:	99 27       	eor	r25, r25
    12e6:	99 1f       	adc	r25, r25
    12e8:	13 96       	adiw	r26, 0x03	; 3
    12ea:	6c 91       	ld	r22, X
    12ec:	13 97       	sbiw	r26, 0x03	; 3
    12ee:	86 2f       	mov	r24, r22
    12f0:	88 0f       	add	r24, r24
    12f2:	89 2b       	or	r24, r25
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	66 1f       	adc	r22, r22
    12f8:	66 27       	eor	r22, r22
    12fa:	66 1f       	adc	r22, r22
    12fc:	61 83       	std	Z+1, r22	; 0x01
    12fe:	00 97       	sbiw	r24, 0x00	; 0
    1300:	39 f5       	brne	.+78     	; 0x1350 <__unpack_f+0x88>
    1302:	21 15       	cp	r18, r1
    1304:	31 05       	cpc	r19, r1
    1306:	41 05       	cpc	r20, r1
    1308:	51 05       	cpc	r21, r1
    130a:	11 f4       	brne	.+4      	; 0x1310 <__unpack_f+0x48>
    130c:	82 e0       	ldi	r24, 0x02	; 2
    130e:	29 c0       	rjmp	.+82     	; 0x1362 <__unpack_f+0x9a>
    1310:	82 e8       	ldi	r24, 0x82	; 130
    1312:	9f ef       	ldi	r25, 0xFF	; 255
    1314:	93 83       	std	Z+3, r25	; 0x03
    1316:	82 83       	std	Z+2, r24	; 0x02
    1318:	67 e0       	ldi	r22, 0x07	; 7
    131a:	22 0f       	add	r18, r18
    131c:	33 1f       	adc	r19, r19
    131e:	44 1f       	adc	r20, r20
    1320:	55 1f       	adc	r21, r21
    1322:	6a 95       	dec	r22
    1324:	d1 f7       	brne	.-12     	; 0x131a <__unpack_f+0x52>
    1326:	83 e0       	ldi	r24, 0x03	; 3
    1328:	80 83       	st	Z, r24
    132a:	09 c0       	rjmp	.+18     	; 0x133e <__unpack_f+0x76>
    132c:	22 0f       	add	r18, r18
    132e:	33 1f       	adc	r19, r19
    1330:	44 1f       	adc	r20, r20
    1332:	55 1f       	adc	r21, r21
    1334:	82 81       	ldd	r24, Z+2	; 0x02
    1336:	93 81       	ldd	r25, Z+3	; 0x03
    1338:	01 97       	sbiw	r24, 0x01	; 1
    133a:	93 83       	std	Z+3, r25	; 0x03
    133c:	82 83       	std	Z+2, r24	; 0x02
    133e:	20 30       	cpi	r18, 0x00	; 0
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	38 07       	cpc	r19, r24
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	48 07       	cpc	r20, r24
    1348:	80 e4       	ldi	r24, 0x40	; 64
    134a:	58 07       	cpc	r21, r24
    134c:	78 f3       	brcs	.-34     	; 0x132c <__unpack_f+0x64>
    134e:	20 c0       	rjmp	.+64     	; 0x1390 <__unpack_f+0xc8>
    1350:	8f 3f       	cpi	r24, 0xFF	; 255
    1352:	91 05       	cpc	r25, r1
    1354:	79 f4       	brne	.+30     	; 0x1374 <__unpack_f+0xac>
    1356:	21 15       	cp	r18, r1
    1358:	31 05       	cpc	r19, r1
    135a:	41 05       	cpc	r20, r1
    135c:	51 05       	cpc	r21, r1
    135e:	19 f4       	brne	.+6      	; 0x1366 <__unpack_f+0x9e>
    1360:	84 e0       	ldi	r24, 0x04	; 4
    1362:	80 83       	st	Z, r24
    1364:	08 95       	ret
    1366:	44 ff       	sbrs	r20, 4
    1368:	03 c0       	rjmp	.+6      	; 0x1370 <__unpack_f+0xa8>
    136a:	81 e0       	ldi	r24, 0x01	; 1
    136c:	80 83       	st	Z, r24
    136e:	10 c0       	rjmp	.+32     	; 0x1390 <__unpack_f+0xc8>
    1370:	10 82       	st	Z, r1
    1372:	0e c0       	rjmp	.+28     	; 0x1390 <__unpack_f+0xc8>
    1374:	8f 57       	subi	r24, 0x7F	; 127
    1376:	90 40       	sbci	r25, 0x00	; 0
    1378:	93 83       	std	Z+3, r25	; 0x03
    137a:	82 83       	std	Z+2, r24	; 0x02
    137c:	83 e0       	ldi	r24, 0x03	; 3
    137e:	80 83       	st	Z, r24
    1380:	87 e0       	ldi	r24, 0x07	; 7
    1382:	22 0f       	add	r18, r18
    1384:	33 1f       	adc	r19, r19
    1386:	44 1f       	adc	r20, r20
    1388:	55 1f       	adc	r21, r21
    138a:	8a 95       	dec	r24
    138c:	d1 f7       	brne	.-12     	; 0x1382 <__unpack_f+0xba>
    138e:	50 64       	ori	r21, 0x40	; 64
    1390:	24 83       	std	Z+4, r18	; 0x04
    1392:	35 83       	std	Z+5, r19	; 0x05
    1394:	46 83       	std	Z+6, r20	; 0x06
    1396:	57 83       	std	Z+7, r21	; 0x07
    1398:	08 95       	ret

0000139a <__fpcmp_parts_f>:
    139a:	fc 01       	movw	r30, r24
    139c:	db 01       	movw	r26, r22
    139e:	90 81       	ld	r25, Z
    13a0:	92 30       	cpi	r25, 0x02	; 2
    13a2:	08 f4       	brcc	.+2      	; 0x13a6 <__fpcmp_parts_f+0xc>
    13a4:	49 c0       	rjmp	.+146    	; 0x1438 <__fpcmp_parts_f+0x9e>
    13a6:	8c 91       	ld	r24, X
    13a8:	82 30       	cpi	r24, 0x02	; 2
    13aa:	08 f4       	brcc	.+2      	; 0x13ae <__fpcmp_parts_f+0x14>
    13ac:	45 c0       	rjmp	.+138    	; 0x1438 <__fpcmp_parts_f+0x9e>
    13ae:	94 30       	cpi	r25, 0x04	; 4
    13b0:	51 f4       	brne	.+20     	; 0x13c6 <__fpcmp_parts_f+0x2c>
    13b2:	61 81       	ldd	r22, Z+1	; 0x01
    13b4:	84 30       	cpi	r24, 0x04	; 4
    13b6:	b1 f5       	brne	.+108    	; 0x1424 <__fpcmp_parts_f+0x8a>
    13b8:	11 96       	adiw	r26, 0x01	; 1
    13ba:	2c 91       	ld	r18, X
    13bc:	11 97       	sbiw	r26, 0x01	; 1
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	26 1b       	sub	r18, r22
    13c2:	31 09       	sbc	r19, r1
    13c4:	41 c0       	rjmp	.+130    	; 0x1448 <__fpcmp_parts_f+0xae>
    13c6:	84 30       	cpi	r24, 0x04	; 4
    13c8:	21 f0       	breq	.+8      	; 0x13d2 <__fpcmp_parts_f+0x38>
    13ca:	92 30       	cpi	r25, 0x02	; 2
    13cc:	41 f4       	brne	.+16     	; 0x13de <__fpcmp_parts_f+0x44>
    13ce:	82 30       	cpi	r24, 0x02	; 2
    13d0:	b1 f1       	breq	.+108    	; 0x143e <__fpcmp_parts_f+0xa4>
    13d2:	11 96       	adiw	r26, 0x01	; 1
    13d4:	8c 91       	ld	r24, X
    13d6:	11 97       	sbiw	r26, 0x01	; 1
    13d8:	88 23       	and	r24, r24
    13da:	a1 f1       	breq	.+104    	; 0x1444 <__fpcmp_parts_f+0xaa>
    13dc:	2d c0       	rjmp	.+90     	; 0x1438 <__fpcmp_parts_f+0x9e>
    13de:	61 81       	ldd	r22, Z+1	; 0x01
    13e0:	82 30       	cpi	r24, 0x02	; 2
    13e2:	01 f1       	breq	.+64     	; 0x1424 <__fpcmp_parts_f+0x8a>
    13e4:	11 96       	adiw	r26, 0x01	; 1
    13e6:	8c 91       	ld	r24, X
    13e8:	11 97       	sbiw	r26, 0x01	; 1
    13ea:	68 17       	cp	r22, r24
    13ec:	d9 f4       	brne	.+54     	; 0x1424 <__fpcmp_parts_f+0x8a>
    13ee:	22 81       	ldd	r18, Z+2	; 0x02
    13f0:	33 81       	ldd	r19, Z+3	; 0x03
    13f2:	12 96       	adiw	r26, 0x02	; 2
    13f4:	8d 91       	ld	r24, X+
    13f6:	9c 91       	ld	r25, X
    13f8:	13 97       	sbiw	r26, 0x03	; 3
    13fa:	82 17       	cp	r24, r18
    13fc:	93 07       	cpc	r25, r19
    13fe:	94 f0       	brlt	.+36     	; 0x1424 <__fpcmp_parts_f+0x8a>
    1400:	28 17       	cp	r18, r24
    1402:	39 07       	cpc	r19, r25
    1404:	bc f0       	brlt	.+46     	; 0x1434 <__fpcmp_parts_f+0x9a>
    1406:	24 81       	ldd	r18, Z+4	; 0x04
    1408:	35 81       	ldd	r19, Z+5	; 0x05
    140a:	46 81       	ldd	r20, Z+6	; 0x06
    140c:	57 81       	ldd	r21, Z+7	; 0x07
    140e:	14 96       	adiw	r26, 0x04	; 4
    1410:	8d 91       	ld	r24, X+
    1412:	9d 91       	ld	r25, X+
    1414:	0d 90       	ld	r0, X+
    1416:	bc 91       	ld	r27, X
    1418:	a0 2d       	mov	r26, r0
    141a:	82 17       	cp	r24, r18
    141c:	93 07       	cpc	r25, r19
    141e:	a4 07       	cpc	r26, r20
    1420:	b5 07       	cpc	r27, r21
    1422:	18 f4       	brcc	.+6      	; 0x142a <__fpcmp_parts_f+0x90>
    1424:	66 23       	and	r22, r22
    1426:	41 f0       	breq	.+16     	; 0x1438 <__fpcmp_parts_f+0x9e>
    1428:	0d c0       	rjmp	.+26     	; 0x1444 <__fpcmp_parts_f+0xaa>
    142a:	28 17       	cp	r18, r24
    142c:	39 07       	cpc	r19, r25
    142e:	4a 07       	cpc	r20, r26
    1430:	5b 07       	cpc	r21, r27
    1432:	28 f4       	brcc	.+10     	; 0x143e <__fpcmp_parts_f+0xa4>
    1434:	66 23       	and	r22, r22
    1436:	31 f0       	breq	.+12     	; 0x1444 <__fpcmp_parts_f+0xaa>
    1438:	21 e0       	ldi	r18, 0x01	; 1
    143a:	30 e0       	ldi	r19, 0x00	; 0
    143c:	05 c0       	rjmp	.+10     	; 0x1448 <__fpcmp_parts_f+0xae>
    143e:	20 e0       	ldi	r18, 0x00	; 0
    1440:	30 e0       	ldi	r19, 0x00	; 0
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <__fpcmp_parts_f+0xae>
    1444:	2f ef       	ldi	r18, 0xFF	; 255
    1446:	3f ef       	ldi	r19, 0xFF	; 255
    1448:	c9 01       	movw	r24, r18
    144a:	08 95       	ret

0000144c <__prologue_saves__>:
    144c:	2f 92       	push	r2
    144e:	3f 92       	push	r3
    1450:	4f 92       	push	r4
    1452:	5f 92       	push	r5
    1454:	6f 92       	push	r6
    1456:	7f 92       	push	r7
    1458:	8f 92       	push	r8
    145a:	9f 92       	push	r9
    145c:	af 92       	push	r10
    145e:	bf 92       	push	r11
    1460:	cf 92       	push	r12
    1462:	df 92       	push	r13
    1464:	ef 92       	push	r14
    1466:	ff 92       	push	r15
    1468:	0f 93       	push	r16
    146a:	1f 93       	push	r17
    146c:	cf 93       	push	r28
    146e:	df 93       	push	r29
    1470:	cd b7       	in	r28, 0x3d	; 61
    1472:	de b7       	in	r29, 0x3e	; 62
    1474:	ca 1b       	sub	r28, r26
    1476:	db 0b       	sbc	r29, r27
    1478:	0f b6       	in	r0, 0x3f	; 63
    147a:	f8 94       	cli
    147c:	de bf       	out	0x3e, r29	; 62
    147e:	0f be       	out	0x3f, r0	; 63
    1480:	cd bf       	out	0x3d, r28	; 61
    1482:	09 94       	ijmp

00001484 <__epilogue_restores__>:
    1484:	2a 88       	ldd	r2, Y+18	; 0x12
    1486:	39 88       	ldd	r3, Y+17	; 0x11
    1488:	48 88       	ldd	r4, Y+16	; 0x10
    148a:	5f 84       	ldd	r5, Y+15	; 0x0f
    148c:	6e 84       	ldd	r6, Y+14	; 0x0e
    148e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1490:	8c 84       	ldd	r8, Y+12	; 0x0c
    1492:	9b 84       	ldd	r9, Y+11	; 0x0b
    1494:	aa 84       	ldd	r10, Y+10	; 0x0a
    1496:	b9 84       	ldd	r11, Y+9	; 0x09
    1498:	c8 84       	ldd	r12, Y+8	; 0x08
    149a:	df 80       	ldd	r13, Y+7	; 0x07
    149c:	ee 80       	ldd	r14, Y+6	; 0x06
    149e:	fd 80       	ldd	r15, Y+5	; 0x05
    14a0:	0c 81       	ldd	r16, Y+4	; 0x04
    14a2:	1b 81       	ldd	r17, Y+3	; 0x03
    14a4:	aa 81       	ldd	r26, Y+2	; 0x02
    14a6:	b9 81       	ldd	r27, Y+1	; 0x01
    14a8:	ce 0f       	add	r28, r30
    14aa:	d1 1d       	adc	r29, r1
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	f8 94       	cli
    14b0:	de bf       	out	0x3e, r29	; 62
    14b2:	0f be       	out	0x3f, r0	; 63
    14b4:	cd bf       	out	0x3d, r28	; 61
    14b6:	ed 01       	movw	r28, r26
    14b8:	08 95       	ret

000014ba <_exit>:
    14ba:	f8 94       	cli

000014bc <__stop_program>:
    14bc:	ff cf       	rjmp	.-2      	; 0x14bc <__stop_program>
